{"ast":null,"code":"import _createForOfIteratorHelper from \"D:\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nvar _jsxFileName = \"D:\\\\material-dashboard-react-master\\\\src\\\\views\\\\Analytics\\\\Analytics.js\";\nimport React from \"react\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardAvatar from \"components/Card/CardAvatar.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport { Container, List } from \"semantic-ui-react\";\nimport Dropdown from \"components/DropdownAna/dropdown.js\";\nimport axios from 'axios';\nimport { Fragment } from 'react';\nvar styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\"\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\"\n    }\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  }\n};\n\nvar download = function download(data) {\n  var blob = new Blob([data], {\n    type: 'text/csv'\n  });\n  var url = window.URL.createObjectURL(blob);\n  var a = document.createElement('a');\n  a.setAttribute('hidden', '');\n  a.setAttribute('href', url);\n  a.setAttribute('download', 'download.csv');\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n};\n\nfunction getNewCases() {\n  axios.get(\"http://localhost:8080/api/v1/fault\").then(function (response) {\n    newCases.push(response.data);\n    array.push(Object.values(newCases[0]));\n    console.log(array);\n    var data = array[0].map(function (row) {\n      return {\n        Comments: row.comments,\n        CasesReportedOn: row.dateTime,\n        Description: row.description,\n        Category: row.problem.category,\n        StaffName: row.staffName,\n        StoreName: row.storeName\n      };\n    });\n    console.log('sadas'); //console.log(data);\n\n    var csvRows = []; //get the headers\n\n    var headers = Object.keys(data[0]);\n    csvRows.push(headers.join(',')); //loop over rows\n\n    var _iterator = _createForOfIteratorHelper(data),\n        _step;\n\n    try {\n      var _loop = function _loop() {\n        var row = _step.value;\n        var values = headers.map(function (header) {\n          return row[header];\n        });\n        csvRows.push(values.join(','));\n      };\n\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        _loop();\n      } //form escaped comma seperated values\n\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    var newdata = csvRows.map(function (e) {\n      return e;\n    }).join('\\n');\n    console.log(newdata);\n    download(newdata);\n  });\n}\n\nvar resolvedCases = [];\nvar array = [];\n\nfunction getResolvedCases() {\n  axios.get(\"http://localhost:8080/api/v1/fault?status=Resolved\").then(function (response) {\n    try {\n      resolvedCases.push(response.data);\n      array.push(Object.values(resolvedCases[0])); //testarr.push(Object.values(array[0]))\n\n      console.log(array[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  });\n}\n\ngetResolvedCases();\nexport default function Analytics() {\n  var classes = useStyles();\n  return /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, \"Generate Excel Sheet\"), /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.cardTitleWhite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, \"Resolved Cases\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.cardCategoryWhite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, \"All resolved cases can be generated as excel sheet and downloaded\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    tableHeaderColor: \"primary\",\n    tableHead: [\"Cases Reported On\", \"Store Name\", \"Category\", \"Description\", \"Staff Name\", \"Comments\"],\n    tableData: array[0].map(function (array) {\n      return [array.dateTime, array.storeName, array.problem.category, array.description, array.staffName, array.comments];\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }))))) //   <GridItem xs={12} sm={12} md={12}>\n  //     <Button onClick={() => getNewCases()} fullWidth color=\"info\">Generate Excel Sheet</Button>\n  //  </GridItem>\n  ;\n}","map":{"version":3,"sources":["D:/material-dashboard-react-master/src/views/Analytics/Analytics.js"],"names":["React","makeStyles","InputLabel","GridItem","GridContainer","CustomInput","Button","Card","CardHeader","CardAvatar","CardBody","CardFooter","Container","List","Dropdown","axios","Fragment","styles","cardCategoryWhite","color","margin","fontSize","marginTop","marginBottom","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","lineHeight","download","data","blob","Blob","type","url","window","URL","createObjectURL","a","document","createElement","setAttribute","body","appendChild","click","removeChild","getNewCases","get","then","response","newCases","push","array","Object","values","console","log","map","row","Comments","comments","CasesReportedOn","dateTime","Description","description","Category","problem","category","StaffName","staffName","StoreName","storeName","csvRows","headers","keys","join","header","newdata","e","resolvedCases","getResolvedCases","error","Analytics","classes","useStyles"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,OAAOC,MAAP,MAAmB,oCAAnB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,mBAAhC;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,IAAMC,MAAM,GAAG;AACbC,EAAAA,iBAAiB,EAAE;AACjB,iCAA6B;AAC3BC,MAAAA,KAAK,EAAE,uBADoB;AAE3BC,MAAAA,MAAM,EAAE,GAFmB;AAG3BC,MAAAA,QAAQ,EAAE,MAHiB;AAI3BC,MAAAA,SAAS,EAAE,GAJgB;AAK3BC,MAAAA,YAAY,EAAE;AALa,KADZ;AAQjB,+BAA2B;AACzBJ,MAAAA,KAAK,EAAE;AADkB;AARV,GADN;AAabK,EAAAA,cAAc,EAAE;AACdL,IAAAA,KAAK,EAAE,SADO;AAEdG,IAAAA,SAAS,EAAE,KAFG;AAGdG,IAAAA,SAAS,EAAE,MAHG;AAIdC,IAAAA,UAAU,EAAE,KAJE;AAKdC,IAAAA,UAAU,EAAE,4CALE;AAMdJ,IAAAA,YAAY,EAAE,KANA;AAOdK,IAAAA,cAAc,EAAE,MAPF;AAQd,eAAW;AACTT,MAAAA,KAAK,EAAE,MADE;AAETE,MAAAA,QAAQ,EAAE,KAFD;AAGTK,MAAAA,UAAU,EAAE,KAHH;AAITG,MAAAA,UAAU,EAAE;AAJH;AARG;AAbH,CAAf;;AA+BA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAUC,IAAV,EAAgB;AAC/B,MAAMC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACF,IAAD,CAAT,EAAiB;AAAEG,IAAAA,IAAI,EAAE;AAAR,GAAjB,CAAb;AACA,MAAMC,GAAG,GAAGC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2BN,IAA3B,CAAZ;AACA,MAAMO,CAAC,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAV;AACAF,EAAAA,CAAC,CAACG,YAAF,CAAe,QAAf,EAAyB,EAAzB;AACAH,EAAAA,CAAC,CAACG,YAAF,CAAe,MAAf,EAAuBP,GAAvB;AACAI,EAAAA,CAAC,CAACG,YAAF,CAAe,UAAf,EAA2B,cAA3B;AACAF,EAAAA,QAAQ,CAACG,IAAT,CAAcC,WAAd,CAA0BL,CAA1B;AACAA,EAAAA,CAAC,CAACM,KAAF;AACAL,EAAAA,QAAQ,CAACG,IAAT,CAAcG,WAAd,CAA0BP,CAA1B;AACD,CAVD;;AAaA,SAASQ,WAAT,GAAuB;AACrBhC,EAAAA,KAAK,CACFiC,GADH,CACO,oCADP,EAEGC,IAFH,CAEQ,UAACC,QAAD,EAAc;AAClBC,IAAAA,QAAQ,CAACC,IAAT,CAAcF,QAAQ,CAACnB,IAAvB;AACAsB,IAAAA,KAAK,CAACD,IAAN,CAAWE,MAAM,CAACC,MAAP,CAAcJ,QAAQ,CAAC,CAAD,CAAtB,CAAX;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAEA,QAAMtB,IAAI,GAAGsB,KAAK,CAAC,CAAD,CAAL,CAASK,GAAT,CAAa,UAAAC,GAAG;AAAA,aAAK;AAChCC,QAAAA,QAAQ,EAAED,GAAG,CAACE,QADkB;AAEhCC,QAAAA,eAAe,EAAEH,GAAG,CAACI,QAFW;AAGhCC,QAAAA,WAAW,EAAEL,GAAG,CAACM,WAHe;AAIhCC,QAAAA,QAAQ,EAAEP,GAAG,CAACQ,OAAJ,CAAYC,QAJU;AAKhCC,QAAAA,SAAS,EAAEV,GAAG,CAACW,SALiB;AAMhCC,QAAAA,SAAS,EAAEZ,GAAG,CAACa;AANiB,OAAL;AAAA,KAAhB,CAAb;AAQAhB,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAbkB,CAclB;;AAEA,QAAMgB,OAAO,GAAG,EAAhB,CAhBkB,CAkBlB;;AACA,QAAMC,OAAO,GAAGpB,MAAM,CAACqB,IAAP,CAAY5C,IAAI,CAAC,CAAD,CAAhB,CAAhB;AAEA0C,IAAAA,OAAO,CAACrB,IAAR,CAAasB,OAAO,CAACE,IAAR,CAAa,GAAb,CAAb,EArBkB,CAuBlB;;AAvBkB,+CAwBA7C,IAxBA;AAAA;;AAAA;AAAA;AAAA,YAwBP4B,GAxBO;AAyBhB,YAAMJ,MAAM,GAAGmB,OAAO,CAAChB,GAAR,CAAY,UAAAmB,MAAM,EAAI;AAEnC,iBAAOlB,GAAG,CAACkB,MAAD,CAAV;AACD,SAHc,CAAf;AAIAJ,QAAAA,OAAO,CAACrB,IAAR,CAAaG,MAAM,CAACqB,IAAP,CAAY,GAAZ,CAAb;AA7BgB;;AAwBlB,0DAAwB;AAAA;AAMvB,OA9BiB,CA+BlB;;AA/BkB;AAAA;AAAA;AAAA;AAAA;;AAgClB,QAAME,OAAO,GAAGL,OAAO,CAACf,GAAR,CAAY,UAAAqB,CAAC;AAAA,aAAIA,CAAJ;AAAA,KAAb,EAAoBH,IAApB,CAAyB,IAAzB,CAAhB;AACApB,IAAAA,OAAO,CAACC,GAAR,CAAYqB,OAAZ;AACAhD,IAAAA,QAAQ,CAACgD,OAAD,CAAR;AACD,GArCH;AAuCD;;AAED,IAAME,aAAa,GAAG,EAAtB;AACA,IAAM3B,KAAK,GAAE,EAAb;;AACA,SAAS4B,gBAAT,GAA2B;AACzBlE,EAAAA,KAAK,CACJiC,GADD,CACK,oDADL,EAECC,IAFD,CAEM,UAACC,QAAD,EAAc;AAClB,QAAG;AACH8B,MAAAA,aAAa,CAAC5B,IAAd,CAAmBF,QAAQ,CAACnB,IAA5B;AACAsB,MAAAA,KAAK,CAACD,IAAN,CAAWE,MAAM,CAACC,MAAP,CAAcyB,aAAa,CAAC,CAAD,CAA3B,CAAX,EAFG,CAGH;;AACAxB,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAAC,CAAD,CAAjB;AACC,KALD,CAMA,OAAM6B,KAAN,EAAY;AACV1B,MAAAA,OAAO,CAACC,GAAR,CAAYyB,KAAZ;AACD;AACJ,GAZC;AAaD;;AACDD,gBAAgB;AAKhB,eAAe,SAASE,SAAT,GAAqB;AAClC,MAAMC,OAAO,GAAGC,SAAS,EAAzB;AACA,sBAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADA,eAEA,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE,EAAd;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,EAAE,EAAE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAED,OAAO,CAAC5D,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAG,IAAA,SAAS,EAAE4D,OAAO,CAAClE,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yEAFF,CADF,eAOE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,gBAAgB,EAAC,SADnB;AAEE,IAAA,SAAS,EAAE,CAAC,mBAAD,EAAsB,YAAtB,EAAoC,UAApC,EAAgD,aAAhD,EAA+D,YAA/D,EAA6E,UAA7E,CAFb;AAGE,IAAA,SAAS,EACPmC,KAAK,CAAC,CAAD,CAAL,CAASK,GAAT,CAAa,UAACL,KAAD,EAAW;AACtB,aAAO,CAACA,KAAK,CAACU,QAAP,EAAgBV,KAAK,CAACmB,SAAtB,EAAgCnB,KAAK,CAACc,OAAN,CAAcC,QAA9C,EAAuDf,KAAK,CAACY,WAA7D,EAAyEZ,KAAK,CAACiB,SAA/E,EAAyFjB,KAAK,CAACQ,QAA/F,CAAP;AACH,KAFC,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,CADF,CAFA,CAFF,CA0BA;AACA;AACA;AA5BA;AA8BD","sourcesContent":["import React from \"react\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n// core components\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardAvatar from \"components/Card/CardAvatar.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport { Container, List } from \"semantic-ui-react\";\nimport Dropdown from \"components/DropdownAna/dropdown.js\";\nimport axios from 'axios';\nimport { Fragment } from 'react';\n\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\"\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\"\n    }\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  }\n};\n\n\nconst download = function (data) {\n  const blob = new Blob([data], { type: 'text/csv' });\n  const url = window.URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  a.setAttribute('hidden', '');\n  a.setAttribute('href', url);\n  a.setAttribute('download', 'download.csv');\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n};\n\n\nfunction getNewCases() {\n  axios\n    .get(\"http://localhost:8080/api/v1/fault\")\n    .then((response) => {\n      newCases.push(response.data)\n      array.push(Object.values(newCases[0]))\n      console.log(array);\n\n      const data = array[0].map(row => ({\n        Comments: row.comments,\n        CasesReportedOn: row.dateTime,\n        Description: row.description,\n        Category: row.problem.category,\n        StaffName: row.staffName,\n        StoreName: row.storeName\n      }));\n      console.log('sadas');\n      //console.log(data);\n\n      const csvRows = [];\n\n      //get the headers\n      const headers = Object.keys(data[0]);\n\n      csvRows.push(headers.join(','));\n\n      //loop over rows\n      for (const row of data) {\n        const values = headers.map(header => {\n\n          return row[header];\n        });\n        csvRows.push(values.join(','));\n      }\n      //form escaped comma seperated values\n      const newdata = csvRows.map(e => e).join('\\n');\n      console.log(newdata);\n      download(newdata);\n    })\n    \n}\n\nconst resolvedCases = [];\nconst array =[];\nfunction getResolvedCases(){\n  axios\n  .get(\"http://localhost:8080/api/v1/fault?status=Resolved\")\n  .then((response) => {\n    try{\n    resolvedCases.push(response.data)\n    array.push(Object.values(resolvedCases[0]))\n    //testarr.push(Object.values(array[0]))\n    console.log(array[0]);\n    }\n    catch(error){\n      console.log(error);\n    }\n})\n}\ngetResolvedCases();\n\n\n\n\nexport default function Analytics() {\n  const classes = useStyles();\n  return (\n    \n    <GridContainer>\n    <p>Generate Excel Sheet</p>\n    <GridItem xs={12} sm={12} md={12}>\n      <Card>\n        <CardHeader color=\"primary\">\n          <h4 className={classes.cardTitleWhite}>Resolved Cases</h4>\n          <p className={classes.cardCategoryWhite}>\n            All resolved cases can be generated as excel sheet and downloaded\n          </p>\n        </CardHeader>\n        <CardBody>\n          <Table\n            tableHeaderColor=\"primary\"\n            tableHead={[\"Cases Reported On\", \"Store Name\", \"Category\", \"Description\", \"Staff Name\", \"Comments\"]}\n            tableData={\n              array[0].map((array) => {\n                return [array.dateTime,array.storeName,array.problem.category,array.description,array.staffName,array.comments]\n            })\n            }\n          />\n        </CardBody>\n      </Card>\n    </GridItem>\n  </GridContainer>\n  //   <GridItem xs={12} sm={12} md={12}>\n  //     <Button onClick={() => getNewCases()} fullWidth color=\"info\">Generate Excel Sheet</Button>\n  //  </GridItem>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}