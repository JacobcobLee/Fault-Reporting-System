{"ast":null,"code":"var _jsxFileName = \"D:\\\\material-dashboard-react-master\\\\src\\\\layouts\\\\Admin.js\",\n    _this = this;\n\nimport React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\"; // creates a beautiful scrollbar\n\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\"; // core components\n\nimport Navbar from \"components/Navbars/Navbar.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.js\";\nimport routes from \"routes.js\";\nimport styles from \"assets/jss/material-dashboard-react/layouts/adminStyle.js\";\nimport bgImage from \"assets/img/sidebar-2.jpg\";\nimport logo from \"assets/img/reactlogo.png\";\nvar ps;\nvar switchRoutes = /*#__PURE__*/React.createElement(Switch, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }\n}, routes.map(function (prop, key) {\n  if (prop.layout === \"/admin\") {\n    return /*#__PURE__*/React.createElement(Route, {\n      path: prop.layout + prop.path,\n      component: prop.component,\n      key: key,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    });\n  }\n\n  return null;\n}), /*#__PURE__*/React.createElement(Redirect, {\n  from: \"/admin\",\n  to: \"/admin/dashboard\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }\n}));\nvar useStyles = makeStyles(styles); // export default function Admin({ ...rest }) {\n//   // styles\n//   const classes = useStyles();\n//   // ref to help us initialize PerfectScrollbar on windows devices\n//   const mainPanel = React.createRef();\n//   // states and functions\n//   const [image, setImage] = React.useState(bgImage);\n//   const [color, setColor] = React.useState(\"blue\");\n//   const [fixedClasses, setFixedClasses] = React.useState(\"dropdown show\");\n//   const [mobileOpen, setMobileOpen] = React.useState(false);\n//   const handleImageClick = image => {\n//     setImage(image);\n//   };\n//   const handleColorClick = color => {\n//     setColor(color);\n//   };\n//   const handleFixedClick = () => {\n//     if (fixedClasses === \"dropdown\") {\n//       setFixedClasses(\"dropdown show\");\n//     } else {\n//       setFixedClasses(\"dropdown\");\n//     }\n//   };\n//   const handleDrawerToggle = () => {\n//     setMobileOpen(!mobileOpen);\n//   };\n//   const getRoute = () => {\n//     return window.location.pathname !== \"/admin/maps\";\n//   };\n//   const resizeFunction = () => {\n//     if (window.innerWidth >= 960) {\n//       setMobileOpen(false);\n//     }\n//   };\n//   // initialize and destroy the PerfectScrollbar plugin\n//   React.useEffect(() => {\n//     if (navigator.platform.indexOf(\"Win\") > -1) {\n//       ps = new PerfectScrollbar(mainPanel.current, {\n//         suppressScrollX: true,\n//         suppressScrollY: false\n//       });\n//       document.body.style.overflow = \"hidden\";\n//     }\n//     window.addEventListener(\"resize\", resizeFunction);\n//     // Specify how to clean up after this effect:\n//     return function cleanup() {\n//       if (navigator.platform.indexOf(\"Win\") > -1) {\n//         ps.destroy();\n//       }\n//       window.removeEventListener(\"resize\", resizeFunction);\n//     };\n//   }, [mainPanel]);\n//   return (\n//     <div className={classes.wrapper}>\n//       <Sidebar\n//         routes={routes}\n//         logoText={\"Creative Tim\"}\n//         logo={logo}\n//         image={image}\n//         handleDrawerToggle={handleDrawerToggle}\n//         open={mobileOpen}\n//         color={color}\n//         {...rest}\n//       />\n//       <div className={classes.mainPanel} ref={mainPanel}>\n//         <Navbar\n//           routes={routes}\n//           handleDrawerToggle={handleDrawerToggle}\n//           {...rest}\n//         />\n//         {/* On the /maps route we want the map to be on full screen - this is not possible if the content and conatiner classes are present because they have some paddings which would make the map smaller */}\n//         {getRoute() ? (\n//           <div className={classes.content}>\n//             <div className={classes.container}>{switchRoutes}</div>\n//           </div>\n//         ) : (\n//           <div className={classes.map}>{switchRoutes}</div>\n//         )}\n//         {getRoute() ? <Footer /> : null}\n//         <FixedPlugin\n//           handleImageClick={handleImageClick}\n//           handleColorClick={handleColorClick}\n//           bgColor={color}\n//           bgImage={image}\n//           handleFixedClick={handleFixedClick}\n//           fixedClasses={fixedClasses}\n//         />\n//       </div>\n//     </div>\n//   );\n// }","map":{"version":3,"sources":["D:/material-dashboard-react-master/src/layouts/Admin.js"],"names":["React","Switch","Route","Redirect","PerfectScrollbar","makeStyles","Navbar","Footer","Sidebar","FixedPlugin","routes","styles","bgImage","logo","ps","switchRoutes","map","prop","key","layout","path","component","useStyles"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC,C,CACA;;AACA,OAAOC,gBAAP,MAA6B,mBAA7B;AACA,OAAO,6CAAP,C,CACA;;AACA,SAASC,UAAT,QAA2B,0BAA3B,C,CACA;;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,OAAOC,MAAP,MAAmB,2DAAnB;AAEA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AAEA,IAAIC,EAAJ;AAEA,IAAMC,YAAY,gBAChB,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGL,MAAM,CAACM,GAAP,CAAW,UAACC,IAAD,EAAOC,GAAP,EAAe;AACzB,MAAID,IAAI,CAACE,MAAL,KAAgB,QAApB,EAA8B;AAC5B,wBACE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAEF,IAAI,CAACE,MAAL,GAAcF,IAAI,CAACG,IAD3B;AAEE,MAAA,SAAS,EAAEH,IAAI,CAACI,SAFlB;AAGE,MAAA,GAAG,EAAEH,GAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD;;AACD,SAAO,IAAP;AACD,CAXA,CADH,eAaE,oBAAC,QAAD;AAAU,EAAA,IAAI,EAAC,QAAf;AAAwB,EAAA,EAAE,EAAC,kBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAbF,CADF;AAkBA,IAAMI,SAAS,GAAGjB,UAAU,CAACM,MAAD,CAA5B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n// creates a beautiful scrollbar\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Navbar from \"components/Navbars/Navbar.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.js\";\n\nimport routes from \"routes.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/layouts/adminStyle.js\";\n\nimport bgImage from \"assets/img/sidebar-2.jpg\";\nimport logo from \"assets/img/reactlogo.png\";\n\nlet ps;\n\nconst switchRoutes = (\n  <Switch>\n    {routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      }\n      return null;\n    })}\n    <Redirect from=\"/admin\" to=\"/admin/dashboard\" />\n  </Switch>\n);\n\nconst useStyles = makeStyles(styles);\n\n// export default function Admin({ ...rest }) {\n//   // styles\n//   const classes = useStyles();\n//   // ref to help us initialize PerfectScrollbar on windows devices\n//   const mainPanel = React.createRef();\n//   // states and functions\n//   const [image, setImage] = React.useState(bgImage);\n//   const [color, setColor] = React.useState(\"blue\");\n//   const [fixedClasses, setFixedClasses] = React.useState(\"dropdown show\");\n//   const [mobileOpen, setMobileOpen] = React.useState(false);\n//   const handleImageClick = image => {\n//     setImage(image);\n//   };\n//   const handleColorClick = color => {\n//     setColor(color);\n//   };\n//   const handleFixedClick = () => {\n//     if (fixedClasses === \"dropdown\") {\n//       setFixedClasses(\"dropdown show\");\n//     } else {\n//       setFixedClasses(\"dropdown\");\n//     }\n//   };\n//   const handleDrawerToggle = () => {\n//     setMobileOpen(!mobileOpen);\n//   };\n//   const getRoute = () => {\n//     return window.location.pathname !== \"/admin/maps\";\n//   };\n//   const resizeFunction = () => {\n//     if (window.innerWidth >= 960) {\n//       setMobileOpen(false);\n//     }\n//   };\n//   // initialize and destroy the PerfectScrollbar plugin\n//   React.useEffect(() => {\n//     if (navigator.platform.indexOf(\"Win\") > -1) {\n//       ps = new PerfectScrollbar(mainPanel.current, {\n//         suppressScrollX: true,\n//         suppressScrollY: false\n//       });\n//       document.body.style.overflow = \"hidden\";\n//     }\n//     window.addEventListener(\"resize\", resizeFunction);\n//     // Specify how to clean up after this effect:\n//     return function cleanup() {\n//       if (navigator.platform.indexOf(\"Win\") > -1) {\n//         ps.destroy();\n//       }\n//       window.removeEventListener(\"resize\", resizeFunction);\n//     };\n//   }, [mainPanel]);\n//   return (\n//     <div className={classes.wrapper}>\n//       <Sidebar\n//         routes={routes}\n//         logoText={\"Creative Tim\"}\n//         logo={logo}\n//         image={image}\n//         handleDrawerToggle={handleDrawerToggle}\n//         open={mobileOpen}\n//         color={color}\n//         {...rest}\n//       />\n//       <div className={classes.mainPanel} ref={mainPanel}>\n//         <Navbar\n//           routes={routes}\n//           handleDrawerToggle={handleDrawerToggle}\n//           {...rest}\n//         />\n//         {/* On the /maps route we want the map to be on full screen - this is not possible if the content and conatiner classes are present because they have some paddings which would make the map smaller */}\n//         {getRoute() ? (\n//           <div className={classes.content}>\n//             <div className={classes.container}>{switchRoutes}</div>\n//           </div>\n//         ) : (\n//           <div className={classes.map}>{switchRoutes}</div>\n//         )}\n//         {getRoute() ? <Footer /> : null}\n//         <FixedPlugin\n//           handleImageClick={handleImageClick}\n//           handleColorClick={handleColorClick}\n//           bgColor={color}\n//           bgImage={image}\n//           handleFixedClick={handleFixedClick}\n//           fixedClasses={fixedClasses}\n//         />\n//       </div>\n//     </div>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}