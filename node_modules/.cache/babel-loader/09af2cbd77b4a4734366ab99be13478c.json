{"ast":null,"code":"import _defineProperty from \"D:\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"D:\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\material-dashboard-react-master\\\\src\\\\layouts\\\\EditFault.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styles from \"assets/jss/material-dashboard-react/layouts/adminStyle.js\";\nimport faultimg from \"assets/img/celling_aircon.jpg\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport Switch from '@material-ui/core/Switch';\nimport Grid from '@material-ui/core/Grid';\nimport Button from \"components/CustomButtons/Button.js\";\nimport axios from 'axios';\nimport { Fragment } from 'react';\nimport Select from 'react-select';\nimport pendingcaseModal from \"components/Modal/pendingcaseModal\";\nimport resolvedcaseModal from \"components/Modal/resolvedcaseModal\";\nimport { useState } from 'react';\nvar pageURL = window.location.href;\nvar lastURLSegment = pageURL.substr(pageURL.lastIndexOf('/') + 1);\nvar fault = [];\nvar array = [];\nvar temp = [];\nvar temp2 = [];\nvar test2 = [];\nvar up = {};\n\nfunction getSpecificFault() {\n  axios.get(\"http://localhost:8080/api/v1/category/specific/\" + lastURLSegment).then(function (response) {\n    fault.push(response.data);\n    array.push(fault[0]);\n    temp.push(Object.values(array[0]));\n    temp2.push(Object.keys(array[0]));\n    console.log('Temp');\n    console.log(temp[0][0]);\n    console.log('what');\n    console.log(temp[0][0].radio.name);\n  });\n}\n\ngetSpecificFault();\nexport default function EditFault() {\n  var _React$createElement;\n\n  var _useState = useState(temp[0][0].haveRadio),\n      _useState2 = _slicedToArray(_useState, 2),\n      displayhaveradio = _useState2[0],\n      setDisplayHaveRadio = _useState2[1];\n\n  var _useState3 = useState(temp[0][0].haveInput),\n      _useState4 = _slicedToArray(_useState3, 2),\n      displayhaveinput = _useState4[0],\n      setDisplayHaveInput = _useState4[1];\n\n  var _useState5 = useState(temp[0][0].haveCheck),\n      _useState6 = _slicedToArray(_useState5, 2),\n      displayhavecheckbox = _useState6[0],\n      setDisplayHaveCheckbox = _useState6[1];\n\n  var haveRadio = [{\n    value: \"true\",\n    label: \"True\"\n  }, {\n    value: \"false\",\n    label: \"False\"\n  }];\n  var haveCheckbox = [{\n    value: \"true\",\n    label: \"True\"\n  }, {\n    value: \"false\",\n    label: \"False\"\n  }];\n  var haveInput = [{\n    value: \"true\",\n    label: \"True\"\n  }, {\n    value: \"false\",\n    label: \"False\"\n  }]; //for all answer state\n\n  var _useState7 = useState(temp[0][0].name),\n      _useState8 = _slicedToArray(_useState7, 2),\n      faultname = _useState8[0],\n      setFaultName = _useState8[1];\n\n  var radioval = Object.values(temp[0][0].radio);\n\n  var _useState9 = useState(radioval[0].name),\n      _useState10 = _slicedToArray(_useState9, 2),\n      radioquestion = _useState10[0],\n      setRadioQuestion = _useState10[1];\n\n  var _useState11 = useState(radioval[0].answer.toString()),\n      _useState12 = _slicedToArray(_useState11, 2),\n      radioanswer = _useState12[0],\n      setRadioAnswer = _useState12[1];\n\n  var checkval = Object.values(temp[0][0].checkbox);\n\n  var _useState13 = useState(temp[0][0].input),\n      _useState14 = _slicedToArray(_useState13, 2),\n      inputquestion = _useState14[0],\n      setInputQuestion = _useState14[1];\n\n  var _useState15 = useState(checkval[0].name),\n      _useState16 = _slicedToArray(_useState15, 2),\n      checkboxquestion1 = _useState16[0],\n      setCheckboxQuestion1 = _useState16[1];\n\n  var _useState17 = useState(checkval[0].answer),\n      _useState18 = _slicedToArray(_useState17, 2),\n      checkboxanswer1 = _useState18[0],\n      setCheckboxAnwer1 = _useState18[1];\n\n  var _useState19 = useState(checkval[1].name),\n      _useState20 = _slicedToArray(_useState19, 2),\n      checkboxquestion2 = _useState20[0],\n      setCheckboxQuestion2 = _useState20[1];\n\n  var _useState21 = useState(checkval[1].answer),\n      _useState22 = _slicedToArray(_useState21, 2),\n      checkboxanswer2 = _useState22[0],\n      setCheckboxAnwer2 = _useState22[1];\n\n  var radio = [];\n\n  function validateCheckbox() {\n    if (checkboxquestion1 != '' && checkboxanswer1 != '') {\n      if (checkboxquestion2 != '' && checkboxanswer2 != '') {\n        return {\n          checkboxquestion1: {\n            answer: checkboxanswer1.split(','),\n            name: checkboxquestion1\n          },\n          checkboxquestion2: {\n            answer: checkboxanswer2.split(','),\n            name: checkboxquestion2\n          }\n        };\n      } else {\n        return {\n          checkboxquestion1: {\n            answer: checkboxanswer1.split(','),\n            name: checkboxquestion1\n          }\n        };\n      }\n    } else {\n      return null;\n    }\n  }\n\n  function validateRadio() {\n    if (radioquestion != '' && radioanswer != '') {\n      console.log('test');\n      console.log(radioanswer);\n      return {\n        radioquestion: {\n          name: radioquestion,\n          answer: radioanswer.split(',')\n        }\n      };\n    } else {\n      return {};\n    }\n  }\n\n  function validateInput() {\n    if (inputquestion != '') {\n      return inputquestion.split(',');\n    } else {\n      return [];\n    }\n  }\n\n  function submit() {\n    var name = faultname;\n    var havRadio = displayhaveradio;\n    var havInput = displayhaveinput;\n    var havCheck = displayhavecheckbox;\n    var submitRadio = validateRadio();\n    var submitInput = validateInput();\n    var submitCheckbox = validateCheckbox();\n\n    if (name != '' && submitCheckbox != null) {\n      var total = {\n        name: name,\n        haveRadio: havRadio,\n        haveInput: havInput,\n        haveCheck: havCheck,\n        input: submitInput,\n        radio: submitRadio,\n        checkbox: submitCheckbox\n      }; //axios.post(\"http://localhost:8080/api/v1/category\",total)\n      //window.alert('Successfully Updated fault type!')\n      //window.location.href = \"/admin/functions\"\n    } else {\n      window.alert('Please enter nessasary data!');\n    }\n  }\n\n  function displayRadio() {\n    if (temp[0][0].haveRadio == \"true\") {\n      var _radio = Object.values(temp[0][0].radio);\n\n      return /*#__PURE__*/React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 33\n        }\n      }, \"Radio\"))), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 29\n        }\n      }, \"Radio Question :\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        onChange: function onChange(e) {\n          return setRadioQuestion(e.target.value);\n        },\n        className: \"form-control\",\n        value: radioval[0].name,\n        isDisabled: \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 29\n        }\n      }, \"Radio Answer :\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        onChange: function onChange(e) {\n          return setRadioAnswer(e.target.value);\n        },\n        className: \"form-control\",\n        value: radioval[0].answer,\n        isDisabled: \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 29\n        }\n      }))));\n    } else {}\n  }\n\n  function displayCheckbox() {\n    if (temp[0][0].haveCheck == \"true\") {\n      var check = Object.values(temp[0][0].checkbox);\n\n      if (check.length > 1) {\n        return /*#__PURE__*/React.createElement(GridItem, {\n          xs: 12,\n          sm: 12,\n          md: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(CardHeader, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 37\n          }\n        }, \"Checkbox\"))), /*#__PURE__*/React.createElement(CardBody, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 33\n          }\n        }, \"Checkbox Question :\"), /*#__PURE__*/React.createElement(\"input\", {\n          className: \"form-control\",\n          onChange: function onChange(e) {\n            return setCheckboxQuestion1(e.target.value);\n          },\n          type: \"text\",\n          value: check[0].name,\n          placeholder: \"Enter Checkbox Question..\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 33\n          }\n        }, \"Checkbox Answer (Text will be split into using (,) e.g Apple,Orange) :\"), /*#__PURE__*/React.createElement(\"input\", {\n          className: \"form-control\",\n          onChange: function onChange(e) {\n            return setCheckboxAnwer1(e.target.value);\n          },\n          type: \"text\",\n          value: check[0].answer,\n          placeholder: \"Enter Checkbox Answer..\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 33\n          }\n        }, \"Checkbox Question 2 :\"), /*#__PURE__*/React.createElement(\"input\", {\n          className: \"form-control\",\n          onChange: function onChange(e) {\n            return setCheckboxQuestion2(e.target.value);\n          },\n          type: \"text\",\n          value: check[1].name,\n          placeholder: \"Enter Checkbox Question 2..\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 33\n          }\n        }, \"Checkbox Answer 2 (Text will be split into using (,) e.g Apple,Orange) :\"), /*#__PURE__*/React.createElement(\"input\", {\n          className: \"form-control\",\n          onChange: function onChange(e) {\n            return setCheckboxAnwer2(e.target.value);\n          },\n          type: \"text\",\n          value: check[1].answer,\n          placeholder: \"Enter Checkbox Answer 2..\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 33\n          }\n        }))));\n      } else {\n        return /*#__PURE__*/React.createElement(GridItem, {\n          xs: 12,\n          sm: 12,\n          md: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(CardHeader, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 37\n          }\n        }, \"Checkbox\"))), /*#__PURE__*/React.createElement(CardBody, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 33\n          }\n        }, \"Checkbox Question :\"), /*#__PURE__*/React.createElement(\"input\", {\n          className: \"form-control\",\n          onChange: function onChange(e) {\n            return setCheckboxQuestion1(e.target.value);\n          },\n          type: \"text\",\n          value: check[0].name,\n          placeholder: \"Enter Checkbox Question..\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 33\n          }\n        }, \"Checkbox Answer (Text will be split into using (,) e.g Apple,Orange) :\"), /*#__PURE__*/React.createElement(\"input\", {\n          className: \"form-control\",\n          onChange: function onChange(e) {\n            return setCheckboxAnwer1(e.target.value);\n          },\n          type: \"text\",\n          value: check[0].answer,\n          placeholder: \"Enter Checkbox Answer..\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 33\n          }\n        }, \"Checkbox Question 2 :\"), /*#__PURE__*/React.createElement(\"input\", {\n          className: \"form-control\",\n          onChange: function onChange(e) {\n            return setCheckboxQuestion2(e.target.value);\n          },\n          type: \"text\",\n          placeholder: \"Enter Checkbox Question 2..\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 33\n          }\n        }, \"Checkbox Answer 2 (Text will be split into using (,) e.g Apple,Orange) :\"), /*#__PURE__*/React.createElement(\"input\", {\n          className: \"form-control\",\n          onChange: function onChange(e) {\n            return setCheckboxAnwer2(e.target.value);\n          },\n          type: \"text\",\n          placeholder: \"Enter Checkbox Answer 2..\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 33\n          }\n        }))));\n      }\n    } else {}\n  }\n\n  function displayInput() {\n    if (temp[0][0].haveInput == \"true\") {\n      return /*#__PURE__*/React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 33\n        }\n      }, \"Input\"))), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 29\n        }\n      }, \"Input Question:\"), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control\",\n        onChange: function onChange(e) {\n          return setInputQuestion(e.target.value);\n        },\n        type: \"text\",\n        on: true,\n        value: temp[0][0].input,\n        placeholder: \"Enter Input Question..\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 29\n        }\n      }))));\n    } else {}\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  }, \"Edit Fault\")), /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 33\n    }\n  }, \"Fault Name (Category) :\")), /*#__PURE__*/React.createElement(\"input\", (_React$createElement = {\n    className: \"form-control\",\n    onChange: function onChange(e) {\n      return setFaultName(e.target.value);\n    },\n    type: \"text\",\n    placeholder: \"Edit Fault Name, example..Electric Griller\",\n    defaultValue: temp[0][0].name\n  }, _defineProperty(_React$createElement, \"onChange\", function onChange(e) {\n    return setFaultName(e.target.value);\n  }), _defineProperty(_React$createElement, \"__self\", this), _defineProperty(_React$createElement, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 29\n  }), _React$createElement)), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 33\n    }\n  }, \"Have Radio :\")), console.log(temp[0][0].haveRadio), /*#__PURE__*/React.createElement(Select, {\n    defaultValue: temp[0][0].haveRadio,\n    className: \"basic-single\",\n    classNamePrefix: \"select\",\n    name: \"color\",\n    options: haveRadio,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 33\n    }\n  }, \"Have Checkbox :\")), /*#__PURE__*/React.createElement(Select, {\n    defaultValue: temp[0][0].haveCheck,\n    className: \"basic-single\",\n    classNamePrefix: \"select\",\n    name: \"color\",\n    options: haveCheckbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 33\n    }\n  }, \"Have Input :\")), /*#__PURE__*/React.createElement(Select, {\n    defaultValue: temp[0][0].haveInput,\n    className: \"basic-single\",\n    classNamePrefix: \"select\",\n    name: \"color\",\n    options: haveInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 29\n    }\n  })))), displayRadio(), displayCheckbox(), displayInput(), /*#__PURE__*/React.createElement(Button, {\n    onClick: submit,\n    fullWidth: true,\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  }, \"Add\")));\n}","map":{"version":3,"sources":["D:/material-dashboard-react-master/src/layouts/EditFault.js"],"names":["React","makeStyles","styles","faultimg","GridItem","GridContainer","Card","CardHeader","CardBody","Switch","Grid","Button","axios","Fragment","Select","pendingcaseModal","resolvedcaseModal","useState","pageURL","window","location","href","lastURLSegment","substr","lastIndexOf","fault","array","temp","temp2","test2","up","getSpecificFault","get","then","response","push","data","Object","values","keys","console","log","radio","name","EditFault","haveRadio","displayhaveradio","setDisplayHaveRadio","haveInput","displayhaveinput","setDisplayHaveInput","haveCheck","displayhavecheckbox","setDisplayHaveCheckbox","value","label","haveCheckbox","faultname","setFaultName","radioval","radioquestion","setRadioQuestion","answer","toString","radioanswer","setRadioAnswer","checkval","checkbox","input","inputquestion","setInputQuestion","checkboxquestion1","setCheckboxQuestion1","checkboxanswer1","setCheckboxAnwer1","checkboxquestion2","setCheckboxQuestion2","checkboxanswer2","setCheckboxAnwer2","validateCheckbox","split","validateRadio","validateInput","submit","havRadio","havInput","havCheck","submitRadio","submitInput","submitCheckbox","total","alert","displayRadio","e","target","displayCheckbox","check","length","displayInput"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport styles from \"assets/jss/material-dashboard-react/layouts/adminStyle.js\";\r\nimport faultimg from \"assets/img/celling_aircon.jpg\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport axios from 'axios';\r\nimport { Fragment } from 'react';\r\nimport Select from 'react-select';\r\nimport pendingcaseModal from \"components/Modal/pendingcaseModal\";\r\nimport resolvedcaseModal from \"components/Modal/resolvedcaseModal\";\r\nimport { useState } from 'react';\r\n\r\nvar pageURL = window.location.href;\r\nvar lastURLSegment = pageURL.substr(pageURL.lastIndexOf('/') + 1);\r\n\r\nconst fault = [];\r\nconst array = [];\r\nconst temp = [];\r\nconst temp2 = [];\r\nconst test2 = [];\r\nconst up = {};\r\nfunction getSpecificFault() {\r\n    axios\r\n        .get(\"http://localhost:8080/api/v1/category/specific/\" + lastURLSegment)\r\n        .then((response) => {\r\n            fault.push(response.data)\r\n            array.push(fault[0])\r\n            temp.push(Object.values(array[0]))\r\n            temp2.push(Object.keys(array[0]))\r\n            console.log('Temp');\r\n            console.log(temp[0][0]);\r\n            console.log('what');\r\n            console.log(temp[0][0].radio.name);\r\n        })\r\n}\r\ngetSpecificFault();\r\n\r\n\r\nexport default function EditFault() {\r\n    const [displayhaveradio, setDisplayHaveRadio] = useState(temp[0][0].haveRadio);\r\n    const [displayhaveinput, setDisplayHaveInput] = useState(temp[0][0].haveInput);\r\n    const [displayhavecheckbox, setDisplayHaveCheckbox] = useState(temp[0][0].haveCheck);\r\n    const haveRadio = [{ value: \"true\", label: \"True\" }, { value: \"false\", label: \"False\" }]\r\n    const haveCheckbox = [{ value: \"true\", label: \"True\" }, { value: \"false\", label: \"False\" }]\r\n    const haveInput = [{ value: \"true\", label: \"True\" }, { value: \"false\", label: \"False\" }]\r\n    //for all answer state\r\n    const [faultname, setFaultName] = useState(temp[0][0].name);\r\n    const radioval = Object.values(temp[0][0].radio)\r\n    const [radioquestion, setRadioQuestion] = useState(radioval[0].name);\r\n    const [radioanswer, setRadioAnswer] = useState(radioval[0].answer.toString());\r\n    const checkval = Object.values(temp[0][0].checkbox);\r\n    const [inputquestion, setInputQuestion] = useState(temp[0][0].input);\r\n    const [checkboxquestion1, setCheckboxQuestion1] = useState(checkval[0].name);\r\n    const [checkboxanswer1, setCheckboxAnwer1] = useState(checkval[0].answer);\r\n    const [checkboxquestion2, setCheckboxQuestion2] = useState(checkval[1].name);\r\n    const [checkboxanswer2, setCheckboxAnwer2] = useState(checkval[1].answer);\r\n    const radio = [];\r\n\r\n    function validateCheckbox(){\r\n        if((checkboxquestion1 != '') && (checkboxanswer1 != '')){\r\n            if((checkboxquestion2 != '') && (checkboxanswer2 != '')){\r\n                return {checkboxquestion1: {answer: checkboxanswer1.split(','),name: checkboxquestion1}, checkboxquestion2: {answer: checkboxanswer2.split(','),name:checkboxquestion2}};\r\n            }else{\r\n                return {checkboxquestion1: {answer: checkboxanswer1.split(','),name: checkboxquestion1}};\r\n            }\r\n        }else{\r\n            return null;\r\n        }\r\n\r\n    }\r\n    function validateRadio(){\r\n        if((radioquestion != '') && (radioanswer != '')){\r\n            console.log('test');\r\n            console.log(radioanswer);\r\n            return {radioquestion: {name: radioquestion, answer:radioanswer.split(',')}};\r\n        }else{\r\n            return {};\r\n        }\r\n    }\r\n    function validateInput(){\r\n        if(inputquestion != ''){\r\n            return inputquestion.split(',');\r\n        }else{\r\n            return [];\r\n        }\r\n    }\r\n    function submit(){\r\n        const name = faultname;\r\n        const havRadio = displayhaveradio;\r\n        const havInput = displayhaveinput;\r\n        const havCheck = displayhavecheckbox;\r\n        const submitRadio = validateRadio();\r\n        const submitInput = validateInput();\r\n        const submitCheckbox = validateCheckbox();\r\n        if((name != '') && (submitCheckbox != null)){\r\n            const total = {name: name, haveRadio: havRadio, haveInput: havInput, haveCheck: havCheck, input: submitInput, radio: submitRadio, checkbox: submitCheckbox};\r\n            \r\n            //axios.post(\"http://localhost:8080/api/v1/category\",total)\r\n           //window.alert('Successfully Updated fault type!')\r\n           //window.location.href = \"/admin/functions\"\r\n        }else{\r\n            window.alert('Please enter nessasary data!');\r\n        }\r\n    }\r\n\r\n    function displayRadio() {\r\n        if (temp[0][0].haveRadio == \"true\") {\r\n            let radio = Object.values(temp[0][0].radio);\r\n            return (\r\n                <GridItem xs={12} sm={12} md={12}>\r\n                    <Card>\r\n                        <CardHeader>\r\n                            <h3><b>Radio</b></h3>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <h4>Radio Question :</h4>\r\n                            <input type=\"text\" onChange={e => setRadioQuestion(e.target.value)} className=\"form-control\" value={radioval[0].name} isDisabled=\"true\" />\r\n                            <br></br>\r\n                            <h4>Radio Answer :</h4>\r\n                            <input type=\"text\" onChange={e => setRadioAnswer(e.target.value)} className=\"form-control\" value={radioval[0].answer} isDisabled=\"true\" />\r\n                        </CardBody>\r\n                    </Card>\r\n                </GridItem>\r\n            )\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    function displayCheckbox() {\r\n        if (temp[0][0].haveCheck == \"true\") {\r\n            let check = Object.values(temp[0][0].checkbox);\r\n            if (check.length > 1) {\r\n                return (\r\n                    <GridItem xs={12} sm={12} md={12}>\r\n                        <Card>\r\n                            <CardHeader>\r\n                                <h3><b>Checkbox</b></h3>\r\n                            </CardHeader>\r\n                            <CardBody>\r\n                                <h4>Checkbox Question :</h4>\r\n                                <input className=\"form-control\" onChange={e => setCheckboxQuestion1(e.target.value)} type=\"text\" value={check[0].name} placeholder=\"Enter Checkbox Question..\" />\r\n                                <br></br>\r\n                                <h4>Checkbox Answer (Text will be split into using (,) e.g Apple,Orange) :</h4>\r\n                                <input className=\"form-control\" onChange={e => setCheckboxAnwer1(e.target.value)} type=\"text\" value={check[0].answer} placeholder=\"Enter Checkbox Answer..\" />\r\n                                <br></br>\r\n                                <h4>Checkbox Question 2 :</h4>\r\n                                <input className=\"form-control\" onChange={e => setCheckboxQuestion2(e.target.value)} type=\"text\" value={check[1].name} placeholder=\"Enter Checkbox Question 2..\" />\r\n                                <br></br>\r\n                                <h4>Checkbox Answer 2 (Text will be split into using (,) e.g Apple,Orange) :</h4>\r\n                                <input className=\"form-control\" onChange={e => setCheckboxAnwer2(e.target.value)} type=\"text\" value={check[1].answer} placeholder=\"Enter Checkbox Answer 2..\" />\r\n                            </CardBody>\r\n                        </Card>\r\n                    </GridItem>\r\n                )\r\n            } else {\r\n                return (\r\n                    <GridItem xs={12} sm={12} md={12}>\r\n                        <Card>\r\n                            <CardHeader>\r\n                                <h3><b>Checkbox</b></h3>\r\n                            </CardHeader>\r\n\r\n                            <CardBody>\r\n                                <h4>Checkbox Question :</h4>\r\n                                <input className=\"form-control\" onChange={e => setCheckboxQuestion1(e.target.value)} type=\"text\" value={check[0].name} placeholder=\"Enter Checkbox Question..\" />\r\n                                <br></br>\r\n                                <h4>Checkbox Answer (Text will be split into using (,) e.g Apple,Orange) :</h4>\r\n                                <input className=\"form-control\" onChange={e => setCheckboxAnwer1(e.target.value)} type=\"text\" value={check[0].answer} placeholder=\"Enter Checkbox Answer..\" />\r\n                                <br></br>\r\n                                <h4>Checkbox Question 2 :</h4>\r\n                                <input className=\"form-control\" onChange={e => setCheckboxQuestion2(e.target.value)} type=\"text\" placeholder=\"Enter Checkbox Question 2..\" />\r\n                                <br></br>\r\n                                <h4>Checkbox Answer 2 (Text will be split into using (,) e.g Apple,Orange) :</h4>\r\n                                <input className=\"form-control\" onChange={e => setCheckboxAnwer2(e.target.value)} type=\"text\" placeholder=\"Enter Checkbox Answer 2..\" />\r\n\r\n                            </CardBody>\r\n                        </Card>\r\n                    </GridItem>\r\n                )\r\n            }\r\n        } else {\r\n        }\r\n    }\r\n\r\n    function displayInput() {\r\n        if (temp[0][0].haveInput == \"true\") {\r\n            return (\r\n                <GridItem xs={12} sm={12} md={12}>\r\n                    <Card>\r\n                        <CardHeader>\r\n                            <h3><b>Input</b></h3>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <h4>Input Question:</h4>\r\n                            <input className=\"form-control\" onChange={e => setInputQuestion(e.target.value)} type=\"text\" on value={temp[0][0].input} placeholder=\"Enter Input Question..\" />\r\n                        </CardBody>\r\n                    </Card>\r\n                </GridItem>\r\n            )\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3><b>Edit Fault</b></h3>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={12}>\r\n                    <Card>\r\n                        <CardBody>\r\n                            <h4><b>Fault Name (Category) :</b></h4>\r\n                            <input className=\"form-control\" onChange={e => setFaultName(e.target.value)} type=\"text\" placeholder=\"Edit Fault Name, example..Electric Griller\" defaultValue={temp[0][0].name} onChange={e => setFaultName(e.target.value)} />\r\n                            <br></br>\r\n                            <h4><b>Have Radio :</b></h4>\r\n                            {console.log(temp[0][0].haveRadio)}\r\n                            <Select\r\n                                defaultValue={temp[0][0].haveRadio}\r\n                                className=\"basic-single\"\r\n                                classNamePrefix=\"select\"\r\n                                name=\"color\"\r\n                                options={haveRadio}\r\n\r\n                            />\r\n                            <br></br>\r\n                            <h4><b>Have Checkbox :</b></h4>\r\n                            <Select\r\n                                defaultValue={temp[0][0].haveCheck}\r\n                                className=\"basic-single\"\r\n                                classNamePrefix=\"select\"\r\n                                name=\"color\"\r\n                                options={haveCheckbox}\r\n                            />\r\n                            <br></br>\r\n                            <h4><b>Have Input :</b></h4>\r\n                            <Select\r\n                                defaultValue={temp[0][0].haveInput}\r\n                                className=\"basic-single\"\r\n                                classNamePrefix=\"select\"\r\n                                name=\"color\"\r\n                                options={haveInput}\r\n                            />\r\n                        </CardBody>\r\n                    </Card>\r\n                </GridItem>\r\n                {\r\n                    displayRadio()\r\n                }\r\n                {\r\n                    displayCheckbox()\r\n                }\r\n                {\r\n                    displayInput()\r\n                }\r\n                <Button onClick={submit} fullWidth color=\"success\">Add</Button>\r\n            </GridContainer>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}