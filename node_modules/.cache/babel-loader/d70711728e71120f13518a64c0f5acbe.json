{"ast":null,"code":"import _toConsumableArray from \"D:\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\material-dashboard-react-master\\\\src\\\\components\\\\Dropdown\\\\dropdown.js\";\nimport React, { useState } from 'react';\nimport onClickOutside from 'react-onclickoutside';\nexport default function dropdown(props) {\n  var items = [{\n    id: 1,\n    value: 'Pulp Fiction'\n  }, {\n    id: 2,\n    value: 'The Prestige'\n  }, {\n    id: 3,\n    value: 'Blade Runner 2049'\n  }];\n  var clickOutsideConfig = {\n    handleClickOutside: function handleClickOutside() {\n      return Dropdown.handleClickOutside;\n    }\n  };\n\n  function Dropdown(_ref) {\n    var _this = this;\n\n    var title = _ref.title,\n        items = _ref.items,\n        _ref$multiSelect = _ref.multiSelect,\n        multiSelect = _ref$multiSelect === void 0 ? false : _ref$multiSelect;\n\n    var _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        open = _useState2[0],\n        setOpen = _useState2[1];\n\n    var _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        selection = _useState4[0],\n        setSelection = _useState4[1];\n\n    var toggle = function toggle() {\n      return setOpen(!open);\n    };\n\n    Dropdown.handleClickOutside = function () {\n      return setOpen(false);\n    };\n\n    function handleOnClick(item) {\n      if (!selection.some(function (current) {\n        return current.id === item.id;\n      })) {\n        if (!multiSelect) {\n          setSelection([item]);\n        } else if (multiSelect) {\n          setSelection([].concat(_toConsumableArray(selection), [item]));\n        }\n      } else {\n        var selectionAfterRemoval = selection;\n        selectionAfterRemoval = selectionAfterRemoval.filter(function (current) {\n          return current.id !== item.id;\n        });\n        setSelection(_toConsumableArray(selectionAfterRemoval));\n      }\n    }\n\n    function isItemInSelection(item) {\n      if (selection.some(function (current) {\n        return current.id === item.id;\n      })) {\n        return true;\n      }\n\n      return false;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dd-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      tabIndex: 0,\n      className: \"dd-header\",\n      role: \"button\",\n      onKeyPress: function onKeyPress() {\n        return toggle(!open);\n      },\n      onClick: function onClick() {\n        return toggle(!open);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dd-header__title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"dd-header__title--bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, title)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dd-header__action\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, open ? 'Close' : 'Open'))), open && /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"dd-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, items.map(function (item) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        className: \"dd-list-item\",\n        key: item.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          return handleOnClick(item);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 19\n        }\n      }, item.value), /*#__PURE__*/React.createElement(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 19\n        }\n      }, isItemInSelection(item) && 'Selected')));\n    })));\n  }\n}","map":{"version":3,"sources":["D:/material-dashboard-react-master/src/components/Dropdown/dropdown.js"],"names":["React","useState","onClickOutside","dropdown","props","items","id","value","clickOutsideConfig","handleClickOutside","Dropdown","title","multiSelect","open","setOpen","selection","setSelection","toggle","handleOnClick","item","some","current","selectionAfterRemoval","filter","isItemInSelection","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport onClickOutside from 'react-onclickoutside';\r\n\r\n\r\nexport default function dropdown(props) {\r\n  const items = [\r\n    {\r\n      id: 1,\r\n      value: 'Pulp Fiction',\r\n    },\r\n    {\r\n      id: 2,\r\n      value: 'The Prestige',\r\n    },\r\n    {\r\n      id: 3,\r\n      value: 'Blade Runner 2049',\r\n    },\r\n  ];\r\n  const clickOutsideConfig = {\r\n    handleClickOutside: () => Dropdown.handleClickOutside,\r\n  };\r\n\r\n  function Dropdown({ title, items, multiSelect = false }) {\r\n    const [open, setOpen] = useState(false);\r\n    const [selection, setSelection] = useState([]);\r\n    const toggle = () => setOpen(!open);\r\n    Dropdown.handleClickOutside = () => setOpen(false);\r\n  \r\n    function handleOnClick(item) {\r\n      if (!selection.some(current => current.id === item.id)) {\r\n        if (!multiSelect) {\r\n          setSelection([item]);\r\n        } else if (multiSelect) {\r\n          setSelection([...selection, item]);\r\n        }\r\n      } else {\r\n        let selectionAfterRemoval = selection;\r\n        selectionAfterRemoval = selectionAfterRemoval.filter(\r\n          current => current.id !== item.id\r\n        );\r\n        setSelection([...selectionAfterRemoval]);\r\n      }\r\n    }\r\n  \r\n    function isItemInSelection(item) {\r\n      if (selection.some(current => current.id === item.id)) {\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n    return (\r\n      <div className=\"dd-wrapper\">\r\n        <div\r\n          tabIndex={0}\r\n          className=\"dd-header\"\r\n          role=\"button\"\r\n          onKeyPress={() => toggle(!open)}\r\n          onClick={() => toggle(!open)}\r\n        >\r\n          <div className=\"dd-header__title\">\r\n            <p className=\"dd-header__title--bold\">{title}</p>\r\n          </div>\r\n          <div className=\"dd-header__action\">\r\n            <p>{open ? 'Close' : 'Open'}</p>\r\n          </div>\r\n        </div>\r\n        {open && (\r\n          <ul className=\"dd-list\">\r\n            {items.map(item => (\r\n              <li className=\"dd-list-item\" key={item.id}>\r\n                <button type=\"button\" onClick={() => handleOnClick(item)}>\r\n                  <span>{item.value}</span>\r\n                  <span>{isItemInSelection(item) && 'Selected'}</span>\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}