{"ast":null,"code":"import _defineProperty from \"D:\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"D:\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\material-dashboard-react-master\\\\src\\\\layouts\\\\EditFault.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styles from \"assets/jss/material-dashboard-react/layouts/adminStyle.js\";\nimport faultimg from \"assets/img/celling_aircon.jpg\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport Switch from '@material-ui/core/Switch';\nimport Grid from '@material-ui/core/Grid';\nimport Button from \"components/CustomButtons/Button.js\";\nimport axios from 'axios';\nimport { Fragment } from 'react';\nimport Select from 'react-select';\nimport pendingcaseModal from \"components/Modal/pendingcaseModal\";\nimport resolvedcaseModal from \"components/Modal/resolvedcaseModal\";\nimport { useState } from 'react';\nvar pageURL = window.location.href;\nvar lastURLSegment = pageURL.substr(pageURL.lastIndexOf('/') + 1);\nvar fault = [];\nvar array = [];\nvar temp = [];\nvar temp2 = [];\nvar test2 = [];\nvar up = {};\n\nfunction getSpecificFault() {\n  axios.get(\"http://localhost:8080/api/v1/category/\" + lastURLSegment).then(function (response) {\n    console.log('response');\n    fault.push(response.data);\n    array.push(fault[0]);\n    temp.push(Object.values(response.data)); //temp2.push(Object.keys(array[0]))\n\n    console.log('Temp');\n    console.log(temp[0][0]);\n  });\n}\n\ngetSpecificFault();\nexport default function EditFault() {\n  var _React$createElement;\n\n  var _useState = useState(temp[0][0].haveRadio),\n      _useState2 = _slicedToArray(_useState, 2),\n      displayhaveradio = _useState2[0],\n      setDisplayHaveRadio = _useState2[1];\n\n  var _useState3 = useState(temp[0][0].haveInput),\n      _useState4 = _slicedToArray(_useState3, 2),\n      displayhaveinput = _useState4[0],\n      setDisplayHaveInput = _useState4[1];\n\n  var _useState5 = useState(temp[0][0].haveCheck),\n      _useState6 = _slicedToArray(_useState5, 2),\n      displayhavecheckbox = _useState6[0],\n      setDisplayHaveCheckbox = _useState6[1];\n\n  var haveRadio = [{\n    value: \"true\",\n    label: \"True\"\n  }, {\n    value: \"false\",\n    label: \"False\"\n  }];\n  var haveCheckbox = [{\n    value: \"true\",\n    label: \"True\"\n  }, {\n    value: \"false\",\n    label: \"False\"\n  }];\n  var haveInput = [{\n    value: \"true\",\n    label: \"True\"\n  }, {\n    value: \"false\",\n    label: \"False\"\n  }]; //for all answer state\n\n  var _useState7 = useState(temp[0][0].name),\n      _useState8 = _slicedToArray(_useState7, 2),\n      faultname = _useState8[0],\n      setFaultName = _useState8[1];\n\n  var radioval = {};\n\n  if (temp[0][0].radio != null) {\n    radioval = Object.values(temp[0][0].radio);\n    console.log('success');\n  } else {\n    radioval = [{\n      name: '',\n      answer: ''\n    }];\n  }\n\n  var checkval = {};\n\n  if (temp[0][0].checkbox != null) {\n    checkval = Object.values(temp[0][0].checkbox);\n\n    if (checkval.length > 1) {\n      checkval = [{\n        name: checkval[0].name,\n        answer: checkval[0].answer\n      }, {\n        name: checkval[1].name,\n        answer: checkval[1].answer\n      }];\n    } else {\n      checkval = [{\n        name: checkval[0].name,\n        answer: checkval[0].answer\n      }, {\n        name: '',\n        answer: ''\n      }];\n    }\n  } else {\n    checkval = [{\n      name: '',\n      answer: ''\n    }, {\n      name: '',\n      answer: ''\n    }];\n  }\n\n  var inputval = {};\n\n  if (temp[0][0].input != null) {\n    inputval = Object.values(temp[0][0].input);\n    console.log('hi');\n  } else {\n    inputval = '';\n  }\n\n  var _useState9 = useState(inputval.toString()),\n      _useState10 = _slicedToArray(_useState9, 2),\n      inputquestion = _useState10[0],\n      setInputQuestion = _useState10[1];\n\n  var _useState11 = useState(radioval[0].name),\n      _useState12 = _slicedToArray(_useState11, 2),\n      radioquestion = _useState12[0],\n      setRadioQuestion = _useState12[1];\n\n  var _useState13 = useState(radioval[0].answer.toString()),\n      _useState14 = _slicedToArray(_useState13, 2),\n      radioanswer = _useState14[0],\n      setRadioAnswer = _useState14[1];\n\n  var _useState15 = useState(checkval[0].name),\n      _useState16 = _slicedToArray(_useState15, 2),\n      checkboxquestion1 = _useState16[0],\n      setCheckboxQuestion1 = _useState16[1];\n\n  var _useState17 = useState(checkval[0].answer.toString()),\n      _useState18 = _slicedToArray(_useState17, 2),\n      checkboxanswer1 = _useState18[0],\n      setCheckboxAnwer1 = _useState18[1];\n\n  var _useState19 = useState(checkval[1].name),\n      _useState20 = _slicedToArray(_useState19, 2),\n      checkboxquestion2 = _useState20[0],\n      setCheckboxQuestion2 = _useState20[1];\n\n  var _useState21 = useState(checkval[1].answer.toString()),\n      _useState22 = _slicedToArray(_useState21, 2),\n      checkboxanswer2 = _useState22[0],\n      setCheckboxAnwer2 = _useState22[1]; //const radioval = Object.values(temp[0][0].radio)\n\n\n  function validateCheckbox() {\n    if (checkboxquestion1 != '' && checkboxanswer1 != '') {\n      if (checkboxquestion2 != '' && checkboxanswer2 != '') {\n        return {\n          checkboxquestion1: {\n            answer: checkboxanswer1.split(','),\n            name: checkboxquestion1\n          },\n          checkboxquestion2: {\n            answer: checkboxanswer2.split(','),\n            name: checkboxquestion2\n          }\n        };\n      } else {\n        return {\n          checkboxquestion1: {\n            answer: checkboxanswer1.split(','),\n            name: checkboxquestion1\n          }\n        };\n      }\n    } else {\n      return null;\n    }\n  }\n\n  function validateRadio() {\n    if (radioquestion != '' && radioanswer != '') {\n      return {\n        radioquestion: {\n          name: radioquestion,\n          answer: radioanswer.split(',')\n        }\n      };\n    } else {\n      return null;\n    }\n  }\n\n  function validateInput() {\n    if (inputquestion != '') {\n      return inputquestion.split(',');\n    } else {\n      return [];\n    }\n  }\n\n  function submit() {\n    var name = faultname;\n    var havRadio = displayhaveradio;\n    var havInput = displayhaveinput;\n    var havCheck = displayhavecheckbox;\n    var submitRadio = validateRadio();\n    var submitInput = validateInput();\n    var submitCheckbox = validateCheckbox();\n\n    if (name != '' && (submitRadio != null || submitCheckbox != null)) {\n      var total = {\n        name: name,\n        haveRadio: havRadio,\n        haveInput: havInput,\n        haveCheck: havCheck,\n        input: submitInput,\n        radio: submitRadio,\n        checkbox: submitCheckbox\n      };\n      console.log(total);\n      axios.put(\"http://localhost:8080/api/v1/category/\" + lastURLSegment, total);\n      window.alert('Successfully Updated fault type!');\n      window.location.href = \"/admin/functions\";\n    } else {\n      window.alert('Please enter nessasary data!\\n Required minimum value: Name & Radio/Checkbox');\n    }\n  }\n\n  function onChangeRadio(e) {\n    setDisplayHaveRadio(e.value);\n\n    if (e.value == 'false') {\n      setRadioQuestion('');\n      setRadioAnswer('');\n    }\n  }\n\n  function onChangeCheckbox(e) {\n    setDisplayHaveCheckbox(e.value);\n\n    if (e.value == 'false') {\n      setCheckboxQuestion1('');\n      setCheckboxAnwer1('');\n      setCheckboxQuestion2('');\n      setCheckboxAnwer2('');\n    }\n  }\n\n  function onChangeInput(e) {\n    setDisplayHaveInput(e.value);\n\n    if (e.value == 'false') {\n      setInputQuestion('');\n    }\n  }\n\n  function displayRadio() {\n    if (displayhaveradio == \"true\") {\n      return /*#__PURE__*/React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 33\n        }\n      }, \"Radio\"))), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 29\n        }\n      }, \"Radio Question :\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        onChange: function onChange(e) {\n          return setRadioQuestion(e.target.value);\n        },\n        className: \"form-control\",\n        value: radioquestion,\n        isDisabled: \"false\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 29\n        }\n      }, \"Radio Answer :\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        onChange: function onChange(e) {\n          return setRadioAnswer(e.target.value);\n        },\n        className: \"form-control\",\n        value: radioanswer,\n        isDisabled: \"false\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 29\n        }\n      }))));\n    } else {}\n  }\n\n  function displayCheckbox() {\n    if (displayhavecheckbox == \"true\") {\n      var check = Object.values(temp[0][0].checkbox);\n\n      if (check.length > 1) {\n        return /*#__PURE__*/React.createElement(GridItem, {\n          xs: 12,\n          sm: 12,\n          md: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(CardHeader, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 37\n          }\n        }, \"Checkbox\"))), /*#__PURE__*/React.createElement(CardBody, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 33\n          }\n        }, \"Checkbox Question :\"), /*#__PURE__*/React.createElement(\"input\", {\n          className: \"form-control\",\n          onChange: function onChange(e) {\n            return setCheckboxQuestion1(e.target.value);\n          },\n          type: \"text\",\n          value: checkboxquestion1,\n          placeholder: \"Enter Checkbox Question..\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 33\n          }\n        }, \"Checkbox Answer (Text will be split into using (,) e.g Apple,Orange) :\"), /*#__PURE__*/React.createElement(\"input\", {\n          className: \"form-control\",\n          onChange: function onChange(e) {\n            return setCheckboxAnwer1(e.target.value);\n          },\n          type: \"text\",\n          value: checkboxanswer1,\n          placeholder: \"Enter Checkbox Answer..\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 33\n          }\n        }, \"Checkbox Question 2 :\"), /*#__PURE__*/React.createElement(\"input\", {\n          className: \"form-control\",\n          onChange: function onChange(e) {\n            return setCheckboxQuestion2(e.target.value);\n          },\n          type: \"text\",\n          value: checkboxquestion2,\n          placeholder: \"Enter Checkbox Question 2..\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 33\n          }\n        }, \"Checkbox Answer 2 (Text will be split into using (,) e.g Apple,Orange) :\"), /*#__PURE__*/React.createElement(\"input\", {\n          className: \"form-control\",\n          onChange: function onChange(e) {\n            return setCheckboxAnwer2(e.target.value);\n          },\n          type: \"text\",\n          value: checkboxanswer2,\n          placeholder: \"Enter Checkbox Answer 2..\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 33\n          }\n        }))));\n      } else {\n        return /*#__PURE__*/React.createElement(GridItem, {\n          xs: 12,\n          sm: 12,\n          md: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(CardHeader, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 37\n          }\n        }, \"Checkbox\"))), /*#__PURE__*/React.createElement(CardBody, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 33\n          }\n        }, \"Checkbox Question :\"), /*#__PURE__*/React.createElement(\"input\", {\n          className: \"form-control\",\n          onChange: function onChange(e) {\n            return setCheckboxQuestion1(e.target.value);\n          },\n          type: \"text\",\n          value: check[0].name,\n          placeholder: \"Enter Checkbox Question..\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 33\n          }\n        }, \"Checkbox Answer (Text will be split into using (,) e.g Apple,Orange) :\"), /*#__PURE__*/React.createElement(\"input\", {\n          className: \"form-control\",\n          onChange: function onChange(e) {\n            return setCheckboxAnwer1(e.target.value);\n          },\n          type: \"text\",\n          value: check[0].answer,\n          placeholder: \"Enter Checkbox Answer..\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 33\n          }\n        }, \"Checkbox Question 2 :\"), /*#__PURE__*/React.createElement(\"input\", {\n          className: \"form-control\",\n          onChange: function onChange(e) {\n            return setCheckboxQuestion2(e.target.value);\n          },\n          type: \"text\",\n          placeholder: \"Enter Checkbox Question 2..\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 33\n          }\n        }, \"Checkbox Answer 2 (Text will be split into using (,) e.g Apple,Orange) :\"), /*#__PURE__*/React.createElement(\"input\", {\n          className: \"form-control\",\n          onChange: function onChange(e) {\n            return setCheckboxAnwer2(e.target.value);\n          },\n          type: \"text\",\n          placeholder: \"Enter Checkbox Answer 2..\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 33\n          }\n        }))));\n      }\n    } else {}\n  }\n\n  function displayInput() {\n    if (displayhaveinput == \"true\") {\n      return /*#__PURE__*/React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 33\n        }\n      }, \"Input\"))), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 29\n        }\n      }, \"Input Question:\"), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control\",\n        onChange: function onChange(e) {\n          return setInputQuestion(e.target.value);\n        },\n        type: \"text\",\n        on: true,\n        value: inputquestion,\n        placeholder: \"Enter Input Question..\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 29\n        }\n      }))));\n    } else {}\n  }\n\n  function returnDefValue(e) {\n    if (e == 'true') {\n      return {\n        value: 'true',\n        label: 'True'\n      };\n    } else {\n      return {\n        value: 'false',\n        label: 'False'\n      };\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 17\n    }\n  }, \"Edit Fault\")), /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 33\n    }\n  }, \"Fault Name (Category) :\")), /*#__PURE__*/React.createElement(\"input\", (_React$createElement = {\n    className: \"form-control\",\n    onChange: function onChange(e) {\n      return setFaultName(e.target.value);\n    },\n    type: \"text\",\n    placeholder: \"Edit Fault Name, example..Electric Griller\",\n    defaultValue: faultname\n  }, _defineProperty(_React$createElement, \"onChange\", function onChange(e) {\n    return setFaultName(e.target.value);\n  }), _defineProperty(_React$createElement, \"__self\", this), _defineProperty(_React$createElement, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 29\n  }), _React$createElement)), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 33\n    }\n  }, \"Have Radio :\")), console.log(temp[0][0].haveRadio), /*#__PURE__*/React.createElement(Select, {\n    defaultValue: returnDefValue(displayhaveradio),\n    className: \"basic-single\",\n    classNamePrefix: \"select\",\n    name: \"color\",\n    options: haveRadio,\n    onChange: function onChange(e) {\n      return onChangeRadio(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 33\n    }\n  }, \"Have Checkbox :\")), /*#__PURE__*/React.createElement(Select, {\n    defaultValue: returnDefValue(displayhavecheckbox),\n    className: \"basic-single\",\n    classNamePrefix: \"select\",\n    name: \"color\",\n    options: haveCheckbox,\n    onChange: function onChange(e) {\n      return onChangeCheckbox(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 33\n    }\n  }, \"Have Input :\")), /*#__PURE__*/React.createElement(Select, {\n    defaultvalue: displayhaveinput,\n    className: \"basic-single\",\n    classNamePrefix: \"select\",\n    name: \"color\",\n    options: haveInput,\n    onChange: function onChange(e) {\n      return onChangeInput(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 29\n    }\n  })))), displayRadio(), displayCheckbox(), displayInput(), /*#__PURE__*/React.createElement(Button, {\n    onClick: submit,\n    fullWidth: true,\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 17\n    }\n  }, \"Save\")));\n}","map":{"version":3,"sources":["D:/material-dashboard-react-master/src/layouts/EditFault.js"],"names":["React","makeStyles","styles","faultimg","GridItem","GridContainer","Card","CardHeader","CardBody","Switch","Grid","Button","axios","Fragment","Select","pendingcaseModal","resolvedcaseModal","useState","pageURL","window","location","href","lastURLSegment","substr","lastIndexOf","fault","array","temp","temp2","test2","up","getSpecificFault","get","then","response","console","log","push","data","Object","values","EditFault","haveRadio","displayhaveradio","setDisplayHaveRadio","haveInput","displayhaveinput","setDisplayHaveInput","haveCheck","displayhavecheckbox","setDisplayHaveCheckbox","value","label","haveCheckbox","name","faultname","setFaultName","radioval","radio","answer","checkval","checkbox","length","inputval","input","toString","inputquestion","setInputQuestion","radioquestion","setRadioQuestion","radioanswer","setRadioAnswer","checkboxquestion1","setCheckboxQuestion1","checkboxanswer1","setCheckboxAnwer1","checkboxquestion2","setCheckboxQuestion2","checkboxanswer2","setCheckboxAnwer2","validateCheckbox","split","validateRadio","validateInput","submit","havRadio","havInput","havCheck","submitRadio","submitInput","submitCheckbox","total","put","alert","onChangeRadio","e","onChangeCheckbox","onChangeInput","displayRadio","target","displayCheckbox","check","displayInput","returnDefValue"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport styles from \"assets/jss/material-dashboard-react/layouts/adminStyle.js\";\r\nimport faultimg from \"assets/img/celling_aircon.jpg\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport axios from 'axios';\r\nimport { Fragment } from 'react';\r\nimport Select from 'react-select';\r\nimport pendingcaseModal from \"components/Modal/pendingcaseModal\";\r\nimport resolvedcaseModal from \"components/Modal/resolvedcaseModal\";\r\nimport { useState } from 'react';\r\n\r\nvar pageURL = window.location.href;\r\nvar lastURLSegment = pageURL.substr(pageURL.lastIndexOf('/') + 1);\r\n\r\nconst fault = [];\r\nconst array = [];\r\nconst temp = [];\r\nconst temp2 = [];\r\nconst test2 = [];\r\nconst up = {};\r\nfunction getSpecificFault() {\r\n    axios\r\n        .get(\"http://localhost:8080/api/v1/category/\" + lastURLSegment)\r\n        .then((response) => {\r\n            console.log('response')\r\n            fault.push(response.data)\r\n            array.push(fault[0])\r\n            temp.push(Object.values(response.data))\r\n            //temp2.push(Object.keys(array[0]))\r\n            console.log('Temp');\r\n            console.log(temp[0][0]);\r\n        })\r\n}\r\ngetSpecificFault();\r\n\r\n\r\nexport default function EditFault() {\r\n    const [displayhaveradio, setDisplayHaveRadio] = useState(temp[0][0].haveRadio);\r\n    const [displayhaveinput, setDisplayHaveInput] = useState(temp[0][0].haveInput);\r\n    const [displayhavecheckbox, setDisplayHaveCheckbox] = useState(temp[0][0].haveCheck);\r\n    const haveRadio = [{ value: \"true\", label: \"True\" }, { value: \"false\", label: \"False\" }]\r\n    const haveCheckbox = [{ value: \"true\", label: \"True\" }, { value: \"false\", label: \"False\" }]\r\n    const haveInput = [{ value: \"true\", label: \"True\" }, { value: \"false\", label: \"False\" }]\r\n    //for all answer state\r\n\r\n    const [faultname, setFaultName] = useState(temp[0][0].name);\r\n    let radioval = {};\r\n    if (temp[0][0].radio != null) {\r\n        radioval = Object.values(temp[0][0].radio);\r\n        console.log('success');\r\n    } else {\r\n        radioval = [{ name: '', answer: '' }];\r\n    }\r\n    let checkval = {};\r\n    if (temp[0][0].checkbox != null) {\r\n        checkval = Object.values(temp[0][0].checkbox);\r\n        if (checkval.length > 1) {\r\n            checkval = [{ name: checkval[0].name, answer: checkval[0].answer }, { name: checkval[1].name, answer: checkval[1].answer }]\r\n        } else {\r\n            checkval = [{ name: checkval[0].name, answer: checkval[0].answer }, { name: '', answer: '' }]\r\n        }\r\n    } else {\r\n        checkval = [{ name: '', answer: '' }, { name: '', answer: '' }]\r\n    }\r\n\r\n    let inputval = {};\r\n    if (temp[0][0].input != null) {\r\n        inputval = Object.values(temp[0][0].input);\r\n        console.log('hi');\r\n    } else {\r\n        inputval = '';\r\n    }\r\n    const [inputquestion, setInputQuestion] = useState(inputval.toString());\r\n    const [radioquestion, setRadioQuestion] = useState(radioval[0].name);\r\n    const [radioanswer, setRadioAnswer] = useState(radioval[0].answer.toString());\r\n    const [checkboxquestion1, setCheckboxQuestion1] = useState(checkval[0].name);\r\n    const [checkboxanswer1, setCheckboxAnwer1] = useState(checkval[0].answer.toString());\r\n    const [checkboxquestion2, setCheckboxQuestion2] = useState(checkval[1].name);\r\n    const [checkboxanswer2, setCheckboxAnwer2] = useState(checkval[1].answer.toString());\r\n\r\n    //const radioval = Object.values(temp[0][0].radio)\r\n\r\n    function validateCheckbox() {\r\n        if ((checkboxquestion1 != '') && (checkboxanswer1 != '')) {\r\n            if ((checkboxquestion2 != '') && (checkboxanswer2 != '')) {\r\n                return { checkboxquestion1: { answer: checkboxanswer1.split(','), name: checkboxquestion1 }, checkboxquestion2: { answer: checkboxanswer2.split(','), name: checkboxquestion2 } };\r\n            } else {\r\n                return { checkboxquestion1: { answer: checkboxanswer1.split(','), name: checkboxquestion1 } };\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n\r\n    }\r\n    function validateRadio() {\r\n        if ((radioquestion != '') && (radioanswer != '')) {\r\n            return { radioquestion: { name: radioquestion, answer: radioanswer.split(',') } };\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    function validateInput() {\r\n        if (inputquestion != '') {\r\n            return inputquestion.split(',');\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n    function submit() {\r\n        const name = faultname;\r\n        const havRadio = displayhaveradio;\r\n        const havInput = displayhaveinput;\r\n        const havCheck = displayhavecheckbox;\r\n        const submitRadio = validateRadio();\r\n        const submitInput = validateInput();\r\n        const submitCheckbox = validateCheckbox();\r\n        if ((name != '') && ((submitRadio != null) || (submitCheckbox != null))) {\r\n            const total = { name: name, haveRadio: havRadio, haveInput: havInput, haveCheck: havCheck, input: submitInput, radio: submitRadio, checkbox: submitCheckbox };\r\n            console.log(total);\r\n            axios.put(\"http://localhost:8080/api/v1/category/\" + lastURLSegment, total)\r\n            window.alert('Successfully Updated fault type!')\r\n            window.location.href = \"/admin/functions\"\r\n        } else {\r\n            window.alert('Please enter nessasary data!\\n Required minimum value: Name & Radio/Checkbox');\r\n        }\r\n    }\r\n    function onChangeRadio(e) {\r\n        setDisplayHaveRadio(e.value);\r\n        if (e.value == 'false') {\r\n            setRadioQuestion('');\r\n            setRadioAnswer('');\r\n        }\r\n\r\n\r\n\r\n    }\r\n    function onChangeCheckbox(e) {\r\n        setDisplayHaveCheckbox(e.value);\r\n        if (e.value == 'false') {\r\n            setCheckboxQuestion1('');\r\n            setCheckboxAnwer1('');\r\n            setCheckboxQuestion2('');\r\n            setCheckboxAnwer2('');\r\n        }\r\n    }\r\n    function onChangeInput(e) {\r\n        setDisplayHaveInput(e.value);\r\n        if (e.value == 'false') {\r\n            setInputQuestion('');\r\n        }\r\n\r\n    }\r\n    function displayRadio() {\r\n        if (displayhaveradio == \"true\") {\r\n            return (\r\n                <GridItem xs={12} sm={12} md={12}>\r\n                    <Card>\r\n                        <CardHeader>\r\n                            <h3><b>Radio</b></h3>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <h4>Radio Question :</h4>\r\n                            <input type=\"text\" onChange={e => setRadioQuestion(e.target.value)} className=\"form-control\" value={radioquestion} isDisabled=\"false\" />\r\n                            <br></br>\r\n                            <h4>Radio Answer :</h4>\r\n                            <input type=\"text\" onChange={e => setRadioAnswer(e.target.value)} className=\"form-control\" value={radioanswer} isDisabled=\"false\" />\r\n                        </CardBody>\r\n                    </Card>\r\n                </GridItem>\r\n            )\r\n        } else {\r\n        }\r\n    }\r\n\r\n    function displayCheckbox() {\r\n        if (displayhavecheckbox == \"true\") {\r\n            let check = Object.values(temp[0][0].checkbox);\r\n            if (check.length > 1) {\r\n                return (\r\n                    <GridItem xs={12} sm={12} md={12}>\r\n                        <Card>\r\n                            <CardHeader>\r\n                                <h3><b>Checkbox</b></h3>\r\n                            </CardHeader>\r\n                            <CardBody>\r\n                                <h4>Checkbox Question :</h4>\r\n                                <input className=\"form-control\" onChange={e => setCheckboxQuestion1(e.target.value)} type=\"text\" value={checkboxquestion1} placeholder=\"Enter Checkbox Question..\" />\r\n                                <br></br>\r\n                                <h4>Checkbox Answer (Text will be split into using (,) e.g Apple,Orange) :</h4>\r\n                                <input className=\"form-control\" onChange={e => setCheckboxAnwer1(e.target.value)} type=\"text\" value={checkboxanswer1} placeholder=\"Enter Checkbox Answer..\" />\r\n                                <br></br>\r\n                                <h4>Checkbox Question 2 :</h4>\r\n                                <input className=\"form-control\" onChange={e => setCheckboxQuestion2(e.target.value)} type=\"text\" value={checkboxquestion2} placeholder=\"Enter Checkbox Question 2..\" />\r\n                                <br></br>\r\n                                <h4>Checkbox Answer 2 (Text will be split into using (,) e.g Apple,Orange) :</h4>\r\n                                <input className=\"form-control\" onChange={e => setCheckboxAnwer2(e.target.value)} type=\"text\" value={checkboxanswer2} placeholder=\"Enter Checkbox Answer 2..\" />\r\n                            </CardBody>\r\n                        </Card>\r\n                    </GridItem>\r\n                )\r\n            } else {\r\n                return (\r\n                    <GridItem xs={12} sm={12} md={12}>\r\n                        <Card>\r\n                            <CardHeader>\r\n                                <h3><b>Checkbox</b></h3>\r\n                            </CardHeader>\r\n\r\n                            <CardBody>\r\n                                <h4>Checkbox Question :</h4>\r\n                                <input className=\"form-control\" onChange={e => setCheckboxQuestion1(e.target.value)} type=\"text\" value={check[0].name} placeholder=\"Enter Checkbox Question..\" />\r\n                                <br></br>\r\n                                <h4>Checkbox Answer (Text will be split into using (,) e.g Apple,Orange) :</h4>\r\n                                <input className=\"form-control\" onChange={e => setCheckboxAnwer1(e.target.value)} type=\"text\" value={check[0].answer} placeholder=\"Enter Checkbox Answer..\" />\r\n                                <br></br>\r\n                                <h4>Checkbox Question 2 :</h4>\r\n                                <input className=\"form-control\" onChange={e => setCheckboxQuestion2(e.target.value)} type=\"text\" placeholder=\"Enter Checkbox Question 2..\" />\r\n                                <br></br>\r\n                                <h4>Checkbox Answer 2 (Text will be split into using (,) e.g Apple,Orange) :</h4>\r\n                                <input className=\"form-control\" onChange={e => setCheckboxAnwer2(e.target.value)} type=\"text\" placeholder=\"Enter Checkbox Answer 2..\" />\r\n\r\n                            </CardBody>\r\n                        </Card>\r\n                    </GridItem>\r\n                )\r\n            }\r\n        } else {\r\n        }\r\n    }\r\n    function displayInput() {\r\n        if (displayhaveinput == \"true\") {\r\n            return (\r\n                <GridItem xs={12} sm={12} md={12}>\r\n                    <Card>\r\n                        <CardHeader>\r\n                            <h3><b>Input</b></h3>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <h4>Input Question:</h4>\r\n                            <input className=\"form-control\" onChange={e => setInputQuestion(e.target.value)} type=\"text\" on value={inputquestion} placeholder=\"Enter Input Question..\" />\r\n                        </CardBody>\r\n                    </Card>\r\n                </GridItem>\r\n            )\r\n        } else {\r\n        }\r\n    }\r\n    function returnDefValue(e){\r\n        if(e == 'true'){\r\n            return {value: 'true',label: 'True'};\r\n        }else{\r\n            return {value: 'false',label: 'False'};\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <h3><b>Edit Fault</b></h3>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={12}>\r\n                    <Card>\r\n                        <CardBody>\r\n                            <h4><b>Fault Name (Category) :</b></h4>\r\n                            <input className=\"form-control\" onChange={e => setFaultName(e.target.value)} type=\"text\" placeholder=\"Edit Fault Name, example..Electric Griller\" defaultValue={faultname} onChange={e => setFaultName(e.target.value)} />\r\n                            <br></br>\r\n                            <h4><b>Have Radio :</b></h4>\r\n                            {console.log(temp[0][0].haveRadio)}\r\n                            <Select\r\n                                defaultValue={returnDefValue(displayhaveradio)}\r\n                                \r\n                                className=\"basic-single\"\r\n                                classNamePrefix=\"select\"\r\n                                name=\"color\"\r\n                                options={haveRadio}\r\n                                onChange={e => onChangeRadio(e)}\r\n                            />\r\n                            <br></br>\r\n                            <h4><b>Have Checkbox :</b></h4>\r\n                            <Select\r\n                                defaultValue={returnDefValue(displayhavecheckbox)}\r\n                                className=\"basic-single\"\r\n                                classNamePrefix=\"select\"\r\n                                name=\"color\"\r\n                                options={haveCheckbox}\r\n                                onChange={e => onChangeCheckbox(e)}\r\n                            />\r\n                            <br></br>\r\n                            <h4><b>Have Input :</b></h4>\r\n                            <Select\r\n                                defaultvalue={displayhaveinput}\r\n                                className=\"basic-single\"\r\n                                classNamePrefix=\"select\"\r\n                                name=\"color\"\r\n                                options={haveInput}\r\n                                onChange={e => onChangeInput(e)}\r\n                            />\r\n                        </CardBody>\r\n                    </Card>\r\n                </GridItem>\r\n                {\r\n\r\n                    displayRadio()\r\n                }\r\n                {\r\n                    displayCheckbox()\r\n                }\r\n                {\r\n                    displayInput()\r\n                }\r\n                <Button onClick={submit} fullWidth color=\"success\">Save</Button>\r\n            </GridContainer>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}