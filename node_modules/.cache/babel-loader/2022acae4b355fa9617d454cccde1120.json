{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\jacob\\\\Desktop\\\\FYP YR3\\\\dashboard\\\\MASTER VERSION\\\\Development Build\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\jacob\\\\Desktop\\\\FYP YR3\\\\dashboard\\\\MASTER VERSION\\\\Development Build\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\jacob\\\\Desktop\\\\FYP YR3\\\\dashboard\\\\MASTER VERSION\\\\Development Build\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jacob\\\\Desktop\\\\FYP YR3\\\\dashboard\\\\MASTER VERSION\\\\Development Build\\\\src\\\\views\\\\TableList\\\\TableList.js\";\nimport React, { useState, useEffect } from 'react';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\nimport 'react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport axios from 'axios';\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\nexport default function TableList() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      customerfeedback = _useState2[0],\n      setCustomerFeedback = _useState2[1];\n\n  var getFeedbacksData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get(\"https://localhost:9998/api/v1/feedback\").then(function (response) {\n                console.log(response.data);\n                setCustomerFeedback(Object.values(response.data));\n              });\n\n            case 3:\n              _context.next = 8;\n              break;\n\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 5]]);\n    }));\n\n    return function getFeedbacksData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var columns = [//,filter: dateFilter()\n  {\n    dataField: \"date\",\n    text: \"Submitted On\",\n    filter: textFilter()\n  }, {\n    dataField: \"location\",\n    text: \"Store Location\",\n    filter: textFilter()\n  }, {\n    dataField: \"feedbackType\",\n    text: \"Feedback Type\",\n    filter: textFilter()\n  }, {\n    dataField: \"standard\",\n    text: \"Standard\",\n    filter: textFilter()\n  }, {\n    dataField: \"issue\",\n    text: \"Issue\",\n    filter: textFilter()\n  }, {\n    dataField: \"rating\",\n    text: \"Ratings\",\n    filter: textFilter()\n  }, {\n    dataField: \"staffname\",\n    text: \"Staff Name\",\n    filter: textFilter()\n  }, {\n    dataField: \"custemail\",\n    text: \"Customer Email\",\n    filter: textFilter()\n  }, {\n    dataField: \"custcontactno\",\n    text: \"Customer Contact\",\n    filter: textFilter()\n  }, {\n    dataField: \"custname\",\n    text: \"Customer Name\",\n    filter: textFilter()\n  }];\n  useEffect(function () {\n    getFeedbacksData();\n  }, []);\n  customerfeedback.sort(function (a, b) {\n    return a - b;\n  }).reverse();\n\n  var MyExportCSV = function MyExportCSV(props) {\n    var handleClick = function handleClick() {\n      props.onExport();\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(GridContainer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: handleClick,\n      fullWidth: true,\n      color: \"info\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }\n    }, \"Generate Excel Sheet\"))));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Customer Feedback\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"Feedbacks can be generated as excel sheet and downloaded\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ToolkitProvider, {\n    keyField: \"uuid\",\n    data: customerfeedback,\n    columns: columns,\n    exportCSV: {\n      exportAll: false,\n      onlyExportFiltered: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, function (props) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BootstrapTable, Object.assign({\n      filter: filterFactory(),\n      keyField: \"uuid\",\n      data: customerfeedback,\n      columns: columns,\n      pagination: paginationFactory(),\n      filterPosition: \"top\"\n    }, props.baseProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(MyExportCSV, Object.assign({}, props.csvProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    })));\n  }))));\n}","map":{"version":3,"sources":["C:/Users/jacob/Desktop/FYP YR3/dashboard/MASTER VERSION/Development Build/src/views/TableList/TableList.js"],"names":["React","useState","useEffect","BootstrapTable","paginationFactory","filterFactory","textFilter","axios","Card","CardBody","CardHeader","Button","GridItem","GridContainer","ToolkitProvider","TableList","customerfeedback","setCustomerFeedback","getFeedbacksData","get","then","response","console","log","data","Object","values","columns","dataField","text","filter","sort","a","b","reverse","MyExportCSV","props","handleClick","onExport","exportAll","onlyExportFiltered","baseProps","csvProps"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\r\nimport 'react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\nimport axios from 'axios';\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\n\r\n\r\nexport default function TableList() {\r\n    const [customerfeedback,setCustomerFeedback] = useState([]);\r\n    const getFeedbacksData = async ()=> {\r\n        try{\r\n            await axios\r\n            .get(\"https://localhost:9998/api/v1/feedback\")\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                setCustomerFeedback(Object.values(response.data));\r\n            })\r\n        }\r\n        catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const columns = [//,filter: dateFilter()\r\n        {dataField: \"date\", text:\"Submitted On\",filter: textFilter()},\r\n        {dataField: \"location\", text:\"Store Location\",filter: textFilter()},\r\n        {dataField: \"feedbackType\", text:\"Feedback Type\",filter: textFilter()},\r\n        {dataField: \"standard\", text:\"Standard\",filter: textFilter()},\r\n        {dataField: \"issue\", text:\"Issue\",filter: textFilter()},\r\n        {dataField: \"rating\", text:\"Ratings\",filter: textFilter()},\r\n        {dataField: \"staffname\", text:\"Staff Name\",filter: textFilter()},\r\n        {dataField: \"custemail\", text:\"Customer Email\",filter: textFilter()},\r\n        {dataField: \"custcontactno\", text:\"Customer Contact\",filter: textFilter()},\r\n        {dataField: \"custname\", text:\"Customer Name\",filter: textFilter()},\r\n    ]\r\n\r\n    useEffect(() => {\r\n        getFeedbacksData();\r\n    },[])\r\n\r\n    customerfeedback.sort((a, b) => a - b).reverse()\r\n\r\n    const MyExportCSV = (props) => {\r\n        const handleClick = () => {\r\n          props.onExport();\r\n        };\r\n        return (\r\n          <div>\r\n             <GridContainer>\r\n              <GridItem xs={12} sm={12} md={12}>\r\n                  <Button onClick={handleClick} fullWidth color=\"info\">Generate Excel Sheet</Button>\r\n              </GridItem>\r\n          </GridContainer>\r\n          </div>\r\n        );\r\n      };\r\n\r\n    return (\r\n        <div>\r\n        <Card>\r\n        <CardHeader color=\"primary\">\r\n        <h4>Customer Feedback</h4>\r\n          <p>\r\n            Feedbacks can be generated as excel sheet and downloaded\r\n          </p>\r\n        </CardHeader>\r\n        <CardBody>\r\n        <ToolkitProvider\r\n          keyField=\"uuid\"\r\n          data={ customerfeedback }\r\n          columns={ columns }\r\n          exportCSV ={ {\r\n            exportAll:false,\r\n            onlyExportFiltered:true\r\n          } }\r\n        >\r\n        {\r\n        props => (\r\n          <div>\r\n            <BootstrapTable\r\n            filter={filterFactory()}\r\n            keyField=\"uuid\"\r\n            data={customerfeedback}\r\n            columns={columns}\r\n            pagination={paginationFactory()}\r\n            filterPosition=\"top\"\r\n            { ...props.baseProps } />\r\n            <hr />\r\n            <MyExportCSV { ...props.csvProps } />\r\n          </div>\r\n        )\r\n      }\r\n    </ToolkitProvider>\r\n        </CardBody>\r\n        </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}