{"ast":null,"code":"import _slicedToArray from \"D:\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\material-dashboard-react-master\\\\src\\\\views\\\\Analytics\\\\2Analytics.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport axios from 'axios';\nvar columns = [{\n  id: 'datetime',\n  label: 'Cases Report On',\n  minWidth: 170\n}, {\n  id: 'storelocation',\n  label: 'Store Location',\n  minWidth: 100\n}, {\n  id: 'category',\n  label: 'Category',\n  minWidth: 100\n}, {\n  id: 'description',\n  label: 'Description',\n  minWidth: 100\n}, {\n  id: 'staffname',\n  label: 'Staff Name',\n  minWidth: 100\n}, {\n  id: 'comment',\n  label: 'Comments',\n  minWidth: 100\n}];\nvar useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  container: {\n    maxHeight: 440\n  }\n});\nexport default function StickyHeadTable() {\n  var _this = this;\n\n  var resolvedCases = [];\n  var temp = [];\n\n  function getResolvedCases() {\n    axios.get(\"http://localhost:8080/api/v1/fault?status=Resolved\").then(function (response) {\n      try {\n        resolvedCases.push(response.data);\n        temp.push(Object.values(resolvedCases[0]));\n        console.log(temp[0]);\n        setTestt(temp[0]);\n      } catch (error) {\n        console.log(error);\n      }\n    });\n  }\n\n  getResolvedCases();\n  console.log(\"a\");\n  console.log(testt);\n  var rows = [temp.map(function (temp) {\n    return [temp.dateTime, temp.storeName, temp.problem.category, temp.description, temp.staffName, temp.comments];\n  })];\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      testt = _React$useState2[0],\n      setTestt = _React$useState2[1];\n\n  var classes = useStyles();\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      page = _React$useState4[0],\n      setPage = _React$useState4[1];\n\n  var _React$useState5 = React.useState(10),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      rowsPerPage = _React$useState6[0],\n      setRowsPerPage = _React$useState6[1];\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, columns.map(function (column) {\n    return /*#__PURE__*/React.createElement(TableCell, {\n      key: column.id,\n      align: column.align,\n      style: {\n        minWidth: column.minWidth\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, column.label);\n  }))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (row) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: row.code,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, columns.map(function (column) {\n      var value = row[column.id];\n      return /*#__PURE__*/React.createElement(TableCell, {\n        key: column.id,\n        align: column.align,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 23\n        }\n      }, column.format && typeof value === 'number' ? column.format(value) : value);\n    }));\n  })))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["D:/material-dashboard-react-master/src/views/Analytics/2Analytics.js"],"names":["React","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","axios","columns","id","label","minWidth","useStyles","root","width","container","maxHeight","StickyHeadTable","resolvedCases","temp","getResolvedCases","get","then","response","push","data","Object","values","console","log","setTestt","error","testt","rows","map","dateTime","storeName","problem","category","description","staffName","comments","useState","classes","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","column","align","slice","row","code","format","length"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport axios from 'axios';\r\n\r\n\r\nconst columns = [\r\n  { id: 'datetime', label: 'Cases Report On', minWidth: 170 },\r\n  { id: 'storelocation', label: 'Store Location', minWidth: 100 },\r\n  { id: 'category', label: 'Category', minWidth: 100 },\r\n  { id: 'description', label: 'Description', minWidth: 100 },\r\n  { id: 'staffname', label: 'Staff Name', minWidth: 100 },\r\n  { id: 'comment', label: 'Comments', minWidth: 100 },\r\n];\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\nexport default function StickyHeadTable() {\r\n\r\nconst resolvedCases = [];\r\nconst temp =[];\r\nfunction getResolvedCases(){\r\n  axios\r\n  .get(\"http://localhost:8080/api/v1/fault?status=Resolved\")\r\n  .then((response) => {\r\n    try{\r\n    resolvedCases.push(response.data)\r\n    temp.push(Object.values(resolvedCases[0]))\r\n    console.log(temp[0]);\r\n    setTestt(temp[0])\r\n    }\r\n    catch(error){\r\n      console.log(error);\r\n    }\r\n})\r\n}\r\ngetResolvedCases();\r\n\r\nconsole.log(\"a\");\r\nconsole.log(testt);\r\n\r\nconst rows = [\r\n    temp.map((temp) => {\r\n        return [temp.dateTime,temp.storeName,temp.problem.category,temp.description,temp.staffName,temp.comments]\r\n    })\r\n];\r\n\r\n  const [testt,setTestt] = React.useState([]);\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}>\r\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}