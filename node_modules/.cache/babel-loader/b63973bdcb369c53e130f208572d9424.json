{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\jacob\\\\Desktop\\\\FYP YR3\\\\dashboard\\\\MASTER VERSION\\\\Development Build\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";/*eslint-disable*/import React from\"react\";import classNames from\"classnames\";import{NavLink}from\"react-router-dom\";// @material-ui/core components\nimport{makeStyles}from\"@material-ui/core/styles\";import Drawer from\"@material-ui/core/Drawer\";import Hidden from\"@material-ui/core/Hidden\";import List from\"@material-ui/core/List\";import ListItem from\"@material-ui/core/ListItem\";import ListItemText from\"@material-ui/core/ListItemText\";import Icon from\"@material-ui/core/Icon\";import styles from\"assets/jss/material-dashboard-react/components/sidebarStyle.js\";import{Card}from\"@material-ui/core\";var useStyles=makeStyles(styles);export default function Sidebar(props){var classes=useStyles();// verifies if routeName is the one active (in browser input)\nfunction activeRoute(routeName){return window.location.href.indexOf(routeName)>-1?true:false;}var color=props.color,logo=props.logo,image=props.image,logoText=props.logoText,routes=props.routes;var links=/*#__PURE__*/React.createElement(List,{className:classes.list},routes.map(function(prop,key){var activePro=\" \";var listItemClasses;// Setting path clicked to colored boxes behind\nlistItemClasses=classNames(_defineProperty({},\" \"+classes[color],activeRoute(prop.path)));//Make side bar texts to white\nvar whiteFontClasses=classNames(_defineProperty({},\" \"+classes.whiteFont,activeRoute(prop.layout+prop.path)));return/*#__PURE__*/React.createElement(NavLink// Depends on which button is clicked\n,{to:prop.layout+prop.path,className:activePro+classes.item,activeClassName:\"active\",key:key},/*#__PURE__*/React.createElement(ListItem,{button:true,className:classes.itemLink+listItemClasses},typeof prop.icon===\"string\"?/*#__PURE__*/React.createElement(Icon,{className:classNames(classes.itemIcon,whiteFontClasses,_defineProperty({},classes.itemIconRTL,props.rtlActive))},prop.icon):/*#__PURE__*/React.createElement(prop.icon,{className:classNames(classes.itemIcon,whiteFontClasses,_defineProperty({},classes.itemIconRTL,props.rtlActive))}),/*#__PURE__*/React.createElement(ListItemText,{primary:props.rtlActive?prop.rtlName:prop.name,className:classNames(classes.itemText,whiteFontClasses,_defineProperty({},classes.itemTextRTL,props.rtlActive)),disableTypography:true})));}));//Setting the logo image and text on sidebar\nvar brand=/*#__PURE__*/React.createElement(\"div\",{className:classes.logo},/*#__PURE__*/React.createElement(\"div\",{className:classNames(classes.logoLink,_defineProperty({},classes.logoLinkRTL,props.rtlActive))},/*#__PURE__*/React.createElement(\"div\",{className:classes.logoImage},/*#__PURE__*/React.createElement(\"img\",{src:logo,alt:\"logo\",className:classes.img})),logoText));return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Hidden,{mdUp:true,implementation:\"css\"},brand,/*#__PURE__*/React.createElement(\"div\",{className:classes.sidebarWrapper})),/*#__PURE__*/React.createElement(Hidden,{smDown:true,implementation:\"css\"},/*#__PURE__*/React.createElement(Drawer,{anchor:props.rtlActive?\"right\":\"left\",variant:\"permanent\",open:true,classes:{paper:classNames(classes.drawerPaper,_defineProperty({},classes.drawerPaperRTL,props.rtlActive))}},brand,/*#__PURE__*/React.createElement(\"div\",{className:classes.sidebarWrapper},links),image!==undefined?/*#__PURE__*/React.createElement(\"div\",{className:classes.background,style:{backgroundImage:\"url(\"+image+\")\"}}):null)));}","map":{"version":3,"sources":["C:/Users/jacob/Desktop/FYP YR3/dashboard/MASTER VERSION/Development Build/src/components/Sidebar/Sidebar.js"],"names":["React","classNames","NavLink","makeStyles","Drawer","Hidden","List","ListItem","ListItemText","Icon","styles","Card","useStyles","Sidebar","props","classes","activeRoute","routeName","window","location","href","indexOf","color","logo","image","logoText","routes","links","list","map","prop","key","activePro","listItemClasses","path","whiteFontClasses","whiteFont","layout","item","itemLink","icon","itemIcon","itemIconRTL","rtlActive","rtlName","name","itemText","itemTextRTL","brand","logoLink","logoLinkRTL","logoImage","img","sidebarWrapper","paper","drawerPaper","drawerPaperRTL","undefined","background","backgroundImage"],"mappings":"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","sourcesContent":["/*eslint-disable*/\r\nimport React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { NavLink } from \"react-router-dom\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\n\r\nimport styles from \"assets/jss/material-dashboard-react/components/sidebarStyle.js\";\r\nimport { Card } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Sidebar(props) {\r\n  const classes = useStyles();\r\n  // verifies if routeName is the one active (in browser input)\r\n  function activeRoute(routeName) {\r\n    return window.location.href.indexOf(routeName) > -1 ? true : false;\r\n  }\r\n  const { color, logo, image, logoText, routes } = props;\r\n  var links = (\r\n    <List className={classes.list}>\r\n      {routes.map((prop, key) => {\r\n        var activePro = \" \";\r\n        var listItemClasses;\r\n          // Setting path clicked to colored boxes behind\r\n          listItemClasses = classNames({\r\n            [\" \" + classes[color]]: activeRoute(prop.path)\r\n          });\r\n        \r\n          //Make side bar texts to white\r\n        const whiteFontClasses = classNames({\r\n          [\" \" + classes.whiteFont]: activeRoute(prop.layout + prop.path)\r\n        });\r\n        return (\r\n          <NavLink\r\n          // Depends on which button is clicked\r\n            to={prop.layout + prop.path}\r\n            className={activePro + classes.item}\r\n            activeClassName=\"active\"\r\n            key={key}\r\n          >\r\n            <ListItem button className={classes.itemLink + listItemClasses}>\r\n              {typeof prop.icon === \"string\" ? (\r\n                <Icon\r\n                  className={classNames(classes.itemIcon, whiteFontClasses, {\r\n                    [classes.itemIconRTL]: props.rtlActive\r\n                  })}\r\n                >\r\n                  {prop.icon}\r\n                </Icon>\r\n              ) : (\r\n                <prop.icon\r\n                  className={classNames(classes.itemIcon, whiteFontClasses, {\r\n                    [classes.itemIconRTL]: props.rtlActive\r\n                  })}\r\n                />\r\n              )}\r\n              {/* List of navigation text */}\r\n              <ListItemText\r\n                primary={props.rtlActive ? prop.rtlName : prop.name}\r\n                className={classNames(classes.itemText, whiteFontClasses, {\r\n                  [classes.itemTextRTL]: props.rtlActive\r\n                })}\r\n                disableTypography={true}\r\n              />\r\n            </ListItem>\r\n          </NavLink>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n  //Setting the logo image and text on sidebar\r\n  var brand = (\r\n    <div className={classes.logo}>\r\n      <div\r\n        className={classNames(classes.logoLink, {\r\n          [classes.logoLinkRTL]: props.rtlActive\r\n        })}\r\n      >\r\n        <div className={classes.logoImage}>\r\n          <img src={logo} alt=\"logo\" className={classes.img} />\r\n        </div>\r\n        {logoText}\r\n          </div>\r\n    </div>\r\n  );\r\n  return (\r\n    <div>\r\n      <Hidden mdUp implementation=\"css\">\r\n          {brand}\r\n          <div className={classes.sidebarWrapper}>\r\n          </div>\r\n      </Hidden>\r\n      <Hidden smDown implementation=\"css\">\r\n        <Drawer\r\n          anchor={props.rtlActive ? \"right\" : \"left\"}\r\n          variant=\"permanent\"\r\n          open\r\n          classes={{\r\n            paper: classNames(classes.drawerPaper, {\r\n              [classes.drawerPaperRTL]: props.rtlActive\r\n            })\r\n          }}\r\n        >\r\n          {brand}\r\n          <div className={classes.sidebarWrapper}>{links}</div>\r\n          {/* Set Side bar background */}\r\n          {image !== undefined ? (\r\n            <div\r\n              className={classes.background}\r\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\r\n            />\r\n          ) : null}\r\n        </Drawer>\r\n      </Hidden>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}