{"ast":null,"code":"import _slicedToArray from \"D:\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\material-dashboard-react-master\\\\src\\\\views\\\\Dashboard\\\\Dashboard.js\";\nimport React from \"react\"; // react plugin for creating charts\n\nimport ChartistGraph from \"react-chartist\"; // @material-ui/core\n\nimport { makeStyles } from \"@material-ui/core/styles\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport NewCaseModal from \"components/Modal/newcaseModal.js\";\nimport ResolvedCaseModal from \"components/Modal/resolvedcaseModal.js\";\nimport PendingCaseModal from \"components/Modal/pendingcaseModal.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport axios from 'axios';\nimport { useState } from 'react';\nvar useStyles = makeStyles(styles);\nvar delays2 = 80,\n    durations2 = 500;\nexport default function Dashboard() {\n  //CASES REPORTED\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      casescount = _useState2[0],\n      setCasesCount = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      ytdcasescount = _useState4[0],\n      setYtdCasesCount = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      thedaybeforeytdcasescount = _useState6[0],\n      setTheDayBeforeYtdCasesCount = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      complimentcount = _useState8[0],\n      setComplimentCount = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      complaintcount = _useState10[0],\n      setComplaintCount = _useState10[1]; //for today date\n\n\n  var array = [];\n  var array2 = [];\n  var test;\n\n  function getcasestodayChart() {\n    axios.get(\"https://bch-server.herokuapp.com/api/v1/casestodaychart\").then(function (response) {\n      array.push(Object.keys(response.data));\n      array2.push(array[0].length);\n      test = array2.toString(); //console.log(array2);\n\n      setCasesCount(test);\n    });\n  }\n\n  getcasestodayChart(); //for ytd date\n\n  var ytdarray = [];\n  var ytdarray2 = [];\n  var ytdtest;\n\n  function getcasesytdChart() {\n    axios.get(\"https://bch-server.herokuapp.com/api/v1/casesyesterdaychart\").then(function (response) {\n      ytdarray.push(Object.keys(response.data));\n      ytdarray2.push(ytdarray[0].length);\n      ytdtest = ytdarray2.toString(); //console.log(ytdarray2);\n\n      setYtdCasesCount(ytdtest);\n    });\n  }\n\n  getcasesytdChart(); //for the day before ytd date\n\n  var thedaybeforeytdarray = [];\n  var thedaybeforeytdarray2 = [];\n  var thedaybeforeytdtest;\n\n  function getcasesthedaybeforeytdChart() {\n    axios.get(\"https://bch-server.herokuapp.com/api/v1/casesthedaybeforeytdchart\").then(function (response) {\n      thedaybeforeytdarray.push(Object.keys(response.data));\n      thedaybeforeytdarray2.push(thedaybeforeytdarray[0].length);\n      thedaybeforeytdtest = thedaybeforeytdarray2.toString(); //console.log(thedaybeforeytdarray2);\n\n      setTheDayBeforeYtdCasesCount(thedaybeforeytdtest);\n    });\n  }\n\n  getcasesthedaybeforeytdChart(); //yesterday,the day before yesterday\n\n  var minusonedate = new Date().getDate() - 1;\n  var minustwodate = minusonedate - 1;\n  var month = new Date().getMonth() + 1;\n  var year = new Date().getFullYear();\n  var yesterdayDate = minusonedate + '/' + month + '/' + year;\n  var thedaybeforeDate = minustwodate + '/' + month + '/' + year;\n  var newcasesChart = {\n    data: {\n      labels: [thedaybeforeDate, yesterdayDate, \"Cases reported today\"],\n      series: [[thedaybeforeytdcasescount, ytdcasescount, casescount]]\n    },\n    options: {\n      axisX: {\n        showGrid: false\n      },\n      low: 0,\n      high: 8,\n      chartPadding: {\n        top: 0,\n        right: 5,\n        bottom: 0,\n        left: 0\n      }\n    },\n    responsiveOptions: [[\"screen and (max-width: 640px)\", {\n      seriesBarDistance: 5,\n      axisX: {\n        labelInterpolationFnc: function labelInterpolationFnc(value) {\n          return value[0];\n        }\n      }\n    }]],\n    animation: {\n      draw: function draw(data) {\n        if (data.type === \"bar\") {\n          data.element.animate({\n            opacity: {\n              begin: (data.index + 1) * delays2,\n              dur: durations2,\n              from: 0,\n              to: 1,\n              easing: \"ease\"\n            }\n          });\n        }\n      }\n    }\n  }; //CUSTOMER FEEDBACK\n  //for compliment feedback\n\n  var feedbackcomplimentarray = [];\n  var feedbackcomplimentarray2 = [];\n  var feedbackcomplimenttest;\n\n  function getcomplimentChart() {\n    axios.get(\"https://bch-server.herokuapp.com/api/v1/feedbackcomplimentchart\").then(function (response) {\n      //console.log(response.data);\n      feedbackcomplimentarray.push(Object.keys(response.data));\n      feedbackcomplimentarray2.push(feedbackcomplimentarray[0].length);\n      feedbackcomplimenttest = feedbackcomplimentarray2.toString();\n      setComplimentCount(feedbackcomplimenttest);\n    });\n  }\n\n  getcomplimentChart(); //for complaint feedback\n\n  var feedbackcomplaintarray = [];\n  var feedbackcomplaintarray2 = [];\n  var feedbackcomplainttest;\n\n  function getcomplaintChart() {\n    axios.get(\"https://bch-server.herokuapp.com/api/v1/feedbackcomplaintchart\").then(function (response) {\n      //console.log(response.data);\n      feedbackcomplaintarray.push(Object.keys(response.data));\n      feedbackcomplaintarray2.push(feedbackcomplaintarray[0].length);\n      feedbackcomplainttest = feedbackcomplaintarray2.toString();\n      setComplaintCount(feedbackcomplainttest);\n    });\n  }\n\n  getcomplaintChart();\n  var customerfeedbackChart = {\n    data: {\n      labels: [\"Compliment\", \"Feedback\"],\n      series: [[complimentcount, complaintcount]]\n    },\n    options: {\n      axisY: {\n        onlyInteger: false,\n        showGrid: false,\n        offset: 70\n      },\n      axisX: {\n        onlyInteger: true\n      },\n      low: 0,\n      high: 10,\n      seriesBarDistance: 10,\n      reverseData: true,\n      horizontalBars: true\n    },\n    responsiveOptions: [[\"screen and (max-width: 640px)\", {\n      seriesBarDistance: 5,\n      axisX: {\n        labelInterpolationFnc: function labelInterpolationFnc(value) {\n          return value[0];\n        }\n      }\n    }]],\n    animation: {\n      draw: function draw(data) {\n        if (data.type === \"bar\") {\n          data.element.animate({\n            opacity: {\n              begin: (data.index + 1) * delays2,\n              dur: durations2,\n              from: 0,\n              to: 1,\n              easing: \"ease\"\n            }\n          });\n        }\n      }\n    }\n  };\n  var classes = useStyles();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      modalShow = _React$useState2[0],\n      setModalShow = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      modalShow2 = _React$useState4[0],\n      setModalShow2 = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      modalShow3 = _React$useState6[0],\n      setModalShow3 = _React$useState6[1];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    chart: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ChartistGraph, {\n    className: \"ct-chart\",\n    data: newcasesChart.data,\n    type: \"Bar\",\n    options: newcasesChart.options,\n    responsiveOptions: newcasesChart.responsiveOptions,\n    listener: newcasesChart.animation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.cardTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 15\n    }\n  }, \"Cases Reported\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.cardCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 15\n    }\n  }, \"Compare Cases Reported for Today and past 2 days\")))), /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    chart: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ChartistGraph, {\n    className: \"ct-chart\",\n    data: customerfeedbackChart.data,\n    type: \"Bar\",\n    responsiveOptions: customerfeedbackChart.responsiveOptions,\n    options: customerfeedbackChart.options,\n    listener: customerfeedbackChart.animation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.cardTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 15\n    }\n  }, \"Customer Feedback\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.cardCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 15\n    }\n  }, \"Standard obtained through Customer Feedbacks Today\"))))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      return setModalShow(true);\n    },\n    fullWidth: true,\n    color: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 9\n    }\n  }, \"New Cases Reported\"), /*#__PURE__*/React.createElement(NewCaseModal, {\n    show: modalShow,\n    onHide: function onHide() {\n      return setModalShow(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      return setModalShow2(true);\n    },\n    fullWidth: true,\n    color: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 9\n    }\n  }, \"Pending Cases\"), /*#__PURE__*/React.createElement(PendingCaseModal, {\n    show: modalShow2,\n    onHide: function onHide() {\n      return setModalShow2(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      return setModalShow3(true);\n    },\n    fullWidth: true,\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 9\n    }\n  }, \"Resolved Cases\"), /*#__PURE__*/React.createElement(ResolvedCaseModal, {\n    show: modalShow3,\n    onHide: function onHide() {\n      return setModalShow3(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 9\n    }\n  }))));\n}","map":{"version":3,"sources":["D:/material-dashboard-react-master/src/views/Dashboard/Dashboard.js"],"names":["React","ChartistGraph","makeStyles","GridItem","GridContainer","Card","CardHeader","CardBody","Button","NewCaseModal","ResolvedCaseModal","PendingCaseModal","styles","axios","useState","useStyles","delays2","durations2","Dashboard","casescount","setCasesCount","ytdcasescount","setYtdCasesCount","thedaybeforeytdcasescount","setTheDayBeforeYtdCasesCount","complimentcount","setComplimentCount","complaintcount","setComplaintCount","array","array2","test","getcasestodayChart","get","then","response","push","Object","keys","data","length","toString","ytdarray","ytdarray2","ytdtest","getcasesytdChart","thedaybeforeytdarray","thedaybeforeytdarray2","thedaybeforeytdtest","getcasesthedaybeforeytdChart","minusonedate","Date","getDate","minustwodate","month","getMonth","year","getFullYear","yesterdayDate","thedaybeforeDate","newcasesChart","labels","series","options","axisX","showGrid","low","high","chartPadding","top","right","bottom","left","responsiveOptions","seriesBarDistance","labelInterpolationFnc","value","animation","draw","type","element","animate","opacity","begin","index","dur","from","to","easing","feedbackcomplimentarray","feedbackcomplimentarray2","feedbackcomplimenttest","getcomplimentChart","feedbackcomplaintarray","feedbackcomplaintarray2","feedbackcomplainttest","getcomplaintChart","customerfeedbackChart","axisY","onlyInteger","offset","reverseData","horizontalBars","classes","modalShow","setModalShow","modalShow2","setModalShow2","modalShow3","setModalShow3","cardTitle","cardCategory"],"mappings":"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","sourcesContent":["import React from \"react\";\n// react plugin for creating charts\nimport ChartistGraph from \"react-chartist\";\n// @material-ui/core\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport NewCaseModal from \"components/Modal/newcaseModal.js\";\nimport ResolvedCaseModal from \"components/Modal/resolvedcaseModal.js\";\nimport PendingCaseModal from \"components/Modal/pendingcaseModal.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport axios from 'axios';\nimport {useState} from 'react';\n\n\n\n\nconst useStyles = makeStyles(styles);\n\nvar delays2 = 80,\n  durations2 = 500;\n\n   \n\n\n\nexport default function Dashboard() {\n\n//CASES REPORTED\nconst [casescount,setCasesCount] = useState()\nconst [ytdcasescount,setYtdCasesCount] = useState()\nconst [thedaybeforeytdcasescount,setTheDayBeforeYtdCasesCount] = useState()\nconst [complimentcount,setComplimentCount] = useState()\nconst [complaintcount,setComplaintCount] = useState()\n\n\n\n//for today date\nconst array = [];\nconst array2 = [];\nlet test;\nfunction getcasestodayChart(){\n  axios\n  .get(\"https://bch-server.herokuapp.com/api/v1/casestodaychart\")\n  .then((response) => {\n    array.push(Object.keys(response.data))\n    array2.push(array[0].length)\n    test = array2.toString();\n    //console.log(array2);\n    setCasesCount(test)\n  })\n}\n\ngetcasestodayChart();\n\n//for ytd date\nconst ytdarray = [];\nconst ytdarray2 = [];\nlet ytdtest;\nfunction getcasesytdChart(){\n  axios\n  .get(\"https://bch-server.herokuapp.com/api/v1/casesyesterdaychart\")\n  .then((response) => {\n    ytdarray.push(Object.keys(response.data))\n    ytdarray2.push(ytdarray[0].length)\n    ytdtest = ytdarray2.toString();\n    //console.log(ytdarray2);\n    setYtdCasesCount(ytdtest)\n  })\n}\n\ngetcasesytdChart();\n\n//for the day before ytd date\nconst thedaybeforeytdarray = [];\nconst thedaybeforeytdarray2 = [];\nlet thedaybeforeytdtest;\nfunction getcasesthedaybeforeytdChart(){\n  axios\n  .get(\"https://bch-server.herokuapp.com/api/v1/casesthedaybeforeytdchart\")\n  .then((response) => {\n    thedaybeforeytdarray.push(Object.keys(response.data))\n    thedaybeforeytdarray2.push(thedaybeforeytdarray[0].length)\n    thedaybeforeytdtest = thedaybeforeytdarray2.toString();\n    //console.log(thedaybeforeytdarray2);\n    setTheDayBeforeYtdCasesCount(thedaybeforeytdtest)\n  })\n}\n\ngetcasesthedaybeforeytdChart();\n\n\n\n//yesterday,the day before yesterday\nvar minusonedate = new Date().getDate() -1;\nvar minustwodate = minusonedate -1;\nvar month = new Date().getMonth() + 1;\nvar year = new Date().getFullYear();\nvar yesterdayDate = minusonedate + '/' + month + '/' + year ;\nvar thedaybeforeDate = minustwodate + '/' + month + '/' + year ;\n\nconst newcasesChart = {\n  data: {\n    labels: [thedaybeforeDate,yesterdayDate,\"Cases reported today\"]\n\n    \n    ,\n    series: [[thedaybeforeytdcasescount,ytdcasescount,casescount]]\n      \n    \n  },\n  options: {\n    axisX: {\n      showGrid: false\n    },\n    low: 0,\n    high: 8,\n    chartPadding: {\n      top: 0,\n      right: 5,\n      bottom: 0,\n      left: 0\n    }\n  },\n  responsiveOptions: [\n    [\n      \"screen and (max-width: 640px)\",\n      {\n        seriesBarDistance: 5,\n        axisX: {\n          labelInterpolationFnc: function(value) {\n            return value[0];\n          }\n        }\n      }\n    ]\n  ],\n  animation: {\n    draw: function(data) {\n      if (data.type === \"bar\") {\n        data.element.animate({\n          opacity: {\n            begin: (data.index + 1) * delays2,\n            dur: durations2,\n            from: 0,\n            to: 1,\n            easing: \"ease\"\n          }\n        });\n      }\n    }\n  }\n};\n\n\n//CUSTOMER FEEDBACK\n\n//for compliment feedback\nconst feedbackcomplimentarray = [];\nconst feedbackcomplimentarray2 = [];\nlet feedbackcomplimenttest;\nfunction getcomplimentChart(){\n  axios\n  .get(\"https://bch-server.herokuapp.com/api/v1/feedbackcomplimentchart\")\n  .then((response) => {\n    //console.log(response.data);\n    feedbackcomplimentarray.push(Object.keys(response.data))\n    feedbackcomplimentarray2.push(feedbackcomplimentarray[0].length)\n    feedbackcomplimenttest = feedbackcomplimentarray2.toString();\n    setComplimentCount(feedbackcomplimenttest)\n  })\n}\n\ngetcomplimentChart();\n\n//for complaint feedback\nconst feedbackcomplaintarray = [];\nconst feedbackcomplaintarray2 = [];\nlet feedbackcomplainttest;\nfunction getcomplaintChart(){\n  axios\n  .get(\"https://bch-server.herokuapp.com/api/v1/feedbackcomplaintchart\")\n  .then((response) => {\n    //console.log(response.data);\n    feedbackcomplaintarray.push(Object.keys(response.data))\n    feedbackcomplaintarray2.push(feedbackcomplaintarray[0].length)\n    feedbackcomplainttest = feedbackcomplaintarray2.toString();\n    setComplaintCount(feedbackcomplainttest)\n  })\n}\n\ngetcomplaintChart();\n\n\nconst customerfeedbackChart = {\n  data: {\n    labels: [\"Compliment\",\"Feedback\"]\n\n    \n    ,\n    series: [[complimentcount,complaintcount]]\n      \n    \n  },\n  options: {\n    axisY: {\n      onlyInteger:false,\n      showGrid:false,\n      offset:70\n    },\n    axisX: {\n      onlyInteger:true,\n    },\n    low:0,\n    high:10,\n    seriesBarDistance: 10,\n    reverseData: true,\n    horizontalBars: true,\n  },\n  responsiveOptions: [\n    [\n      \"screen and (max-width: 640px)\",\n      {\n        seriesBarDistance: 5,\n        axisX: {\n          labelInterpolationFnc: function(value) {\n            return value[0];\n            \n          }\n        }\n      }\n    ]\n  ],\n  animation: {\n    draw: function(data) {\n      if (data.type === \"bar\") {\n        data.element.animate({\n          opacity: {\n            begin: (data.index + 1) * delays2,\n            dur: durations2,\n            from: 0,\n            to: 1,\n            easing: \"ease\"\n          }\n        });\n      }\n    }\n  }\n};\n\n  const classes = useStyles();\n  const [modalShow, setModalShow] = React.useState(false);\n  const [modalShow2, setModalShow2] = React.useState(false);\n  const [modalShow3, setModalShow3] = React.useState(false);\n  return (\n    <div>\n      {/* <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card chart>\n            <CardHeader color=\"info\">\n              <ChartistGraph\n                className=\"ct-chart\"\n                data={getCustomerFeedbacks().data}\n                type=\"Bar\"\n                options={getCustomerFeedbacks().options}\n                responsiveOptions={getCustomerFeedbacks().responsiveOptions}\n                listener={getCustomerFeedbacks().animation}\n              />\n            </CardHeader>\n            <CardBody>\n              <h4 className={classes.cardTitle}>Recent Ratings</h4>\n              <p className={classes.cardCategory}>Ratings through Customer Feedbacks</p>\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer> */}\n       <GridContainer>\n        <GridItem xs={12} sm={12} md={6}>\n          <Card chart>\n            <CardHeader color=\"success\">\n              <ChartistGraph\n                className=\"ct-chart\"\n                data={newcasesChart.data}\n                type=\"Bar\"\n                options={newcasesChart.options}\n                responsiveOptions={newcasesChart.responsiveOptions}\n                listener={newcasesChart.animation}\n              />\n            </CardHeader>\n            <CardBody>\n              <h4 className={classes.cardTitle}>Cases Reported</h4>\n              <p className={classes.cardCategory}>Compare Cases Reported for Today and past 2 days</p>\n            </CardBody>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={6}>\n          <Card chart>\n            <CardHeader color=\"primary\">\n              <ChartistGraph\n                className=\"ct-chart\"\n                data={customerfeedbackChart.data}\n                type=\"Bar\"\n                responsiveOptions={customerfeedbackChart.responsiveOptions}\n                options={customerfeedbackChart.options}\n                listener={customerfeedbackChart.animation}\n              />\n            </CardHeader>\n            <CardBody>\n              <h4 className={classes.cardTitle}>Customer Feedback</h4>\n              <p className={classes.cardCategory}>Standard obtained through Customer Feedbacks Today</p>\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer>\n      \n      <br></br>\n      \n      <GridContainer>\n      <GridItem xs={12} sm={12} md={4}>\n        <Button onClick={() => setModalShow(true)} fullWidth color=\"danger\">New Cases Reported</Button>\n        <NewCaseModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />  \n      </GridItem>\n      <GridItem xs={12} sm={12} md={4}>\n        <Button  onClick={() => setModalShow2(true)} fullWidth color=\"warning\">Pending Cases</Button>\n        <PendingCaseModal\n        show={modalShow2}\n        onHide={() => setModalShow2(false)}\n      />\n      </GridItem>\n      <GridItem xs={12} sm={12} md={4}>\n        <Button onClick={() => setModalShow3(true)} fullWidth color=\"success\">Resolved Cases</Button> \n        <ResolvedCaseModal\n        show={modalShow3}\n        onHide={() => setModalShow3(false)}\n      />\n      </GridItem>\n      </GridContainer>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}