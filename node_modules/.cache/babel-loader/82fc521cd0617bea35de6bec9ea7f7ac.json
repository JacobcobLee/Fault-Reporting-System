{"ast":null,"code":"import _slicedToArray from \"D:\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\material-dashboard-react-master\\\\src\\\\views\\\\Dashboard\\\\Dashboard.js\";\nimport React from \"react\"; // react plugin for creating charts\n\nimport ChartistGraph from \"react-chartist\"; // @material-ui/core\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { Component } from 'react'; // @material-ui/icons\n\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport AccessTime from \"@material-ui/icons/AccessTime\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Table from \"components/Table/Table.js\";\nimport Tasks from \"components/Tasks/Tasks.js\";\nimport CustomTabs from \"components/CustomTabs/CustomTabs.js\";\nimport Danger from \"components/Typography/Danger.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardIcon from \"components/Card/CardIcon.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport NewCaseModal from \"components/Modal/newcaseModal.js\";\nimport ResolvedCaseModal from \"components/Modal/resolvedcaseModal.js\";\nimport PendingCaseModal from \"components/Modal/pendingcaseModal.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport { card } from \"assets/jss/material-dashboard-react\";\nimport { CardActions } from \"@material-ui/core\";\nimport axios from 'axios'; // const displayFeedback=[];\n// const array=[];\n// const temp=[];\n// const temp2=[];\n// var Chartist = require(\"chartist\");\n// var delays = 80,\n//   durations = 500;\n// var delays2 = 80,\n//   durations2 = 500;\n//   // response.data.forEach(store => {\n//   //   var object = {value: store, label: store}\n//   //   faultOptions.push(object)\n//   // });\n// function getCustomerFeedbacks(){\n//   axios\n//   .get(\"http://localhost:8080/api/v1/feedback/chart\")\n//   .then((response) => {\n//     displayFeedback.push(response.data)\n//     array.push(Object.values(displayFeedback[0]))\n//     array[0].forEach(item=>{\n//       var object = item.datetime\n//       var object2 = item.rating\n//       temp.push(object)\n//       temp2.push(object2)\n//     })\n//     console.log(temp);\n//   })\n//   const feedbackChart = {\n//     data: {\n//       labels: temp\n//       ,\n//       series: temp2\n//     },\n//     options: {\n//       axisX: {\n//         showGrid: false\n//       },\n//       low: 0,\n//       high: 5,\n//       chartPadding: {\n//         top: 0,\n//         right: 5,\n//         bottom: 0,\n//         left: 0\n//       }\n//     },\n//     responsiveOptions: [\n//       [\n//         \"screen and (max-width: 640px)\",\n//         {\n//           seriesBarDistance: 5,\n//           axisX: {\n//             labelInterpolationFnc: function(value) {\n//               return value[0];\n//             }\n//           }\n//         }\n//       ]\n//     ],\n//     animation: {\n//       draw: function(data) {\n//         if (data.type === \"bar\") {\n//           data.element.animate({\n//             opacity: {\n//               begin: (data.index + 1) * delays2,\n//               dur: durations2,\n//               from: 0,\n//               to: 1,\n//               easing: \"ease\"\n//             }\n//           });\n//         }\n//       }\n//     }\n//   };\n//   console.log(\"HE\");\n//   console.log(feedbackChart.data)\n//   return feedbackChart;\n//   }\n// //getCustomerFeedbacks();\n\nimport { dailySalesChart, emailsSubscriptionChart, completedTasksChart } from \"variables/charts.js\";\nvar useStyles = makeStyles(styles);\nvar array = [];\nvar status;\n\nfunction getChart() {\n  axios.get(\"http://localhost:8080/api/v1/chart\").then(function (response) {\n    array.push(Object.values(response.data)); //console.log(array);\n\n    array[0].map(function (item) {\n      status = item.status;\n    });\n    console.log(status);\n  });\n}\n\ngetChart();\nexport default function Dashboard() {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      modalShow = _React$useState2[0],\n      setModalShow = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      modalShow2 = _React$useState4[0],\n      setModalShow2 = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      modalShow3 = _React$useState6[0],\n      setModalShow3 = _React$useState6[1];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    chart: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ChartistGraph, {\n    className: \"ct-chart\",\n    data: emailsSubscriptionChart.data,\n    type: \"Bar\",\n    options: emailsSubscriptionChart.options,\n    responsiveOptions: emailsSubscriptionChart.responsiveOptions,\n    listener: emailsSubscriptionChart.animation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.cardTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }, \"Recent Ratings\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.cardCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }, \"Ratings through Customer Feedbacks\"))))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      return setModalShow(true);\n    },\n    fullWidth: true,\n    color: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, \"New Cases Reported\"), /*#__PURE__*/React.createElement(NewCaseModal, {\n    show: modalShow,\n    onHide: function onHide() {\n      return setModalShow(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      return setModalShow2(true);\n    },\n    fullWidth: true,\n    color: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }, \"Pending Cases\"), /*#__PURE__*/React.createElement(PendingCaseModal, {\n    show: modalShow2,\n    onHide: function onHide() {\n      return setModalShow2(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      return setModalShow3(true);\n    },\n    fullWidth: true,\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  }, \"Resolved Cases\"), /*#__PURE__*/React.createElement(ResolvedCaseModal, {\n    show: modalShow3,\n    onHide: function onHide() {\n      return setModalShow3(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  }))));\n}","map":{"version":3,"sources":["D:/material-dashboard-react-master/src/views/Dashboard/Dashboard.js"],"names":["React","ChartistGraph","makeStyles","Icon","Component","ArrowUpward","AccessTime","GridItem","GridContainer","Table","Tasks","CustomTabs","Danger","Card","CardHeader","CardIcon","CardBody","CardFooter","Button","NewCaseModal","ResolvedCaseModal","PendingCaseModal","styles","card","CardActions","axios","dailySalesChart","emailsSubscriptionChart","completedTasksChart","useStyles","array","status","getChart","get","then","response","push","Object","values","data","map","item","console","log","Dashboard","classes","useState","modalShow","setModalShow","modalShow2","setModalShow2","modalShow3","setModalShow3","options","responsiveOptions","animation","cardTitle","cardCategory"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,gBAA1B,C,CACA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAAQC,SAAR,QAAwB,OAAxB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,UAAP,MAAuB,+BAAvB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,MAAP,MAAmB,oCAAnB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;AACA,OAAOC,gBAAP,MAA6B,sCAA7B;AACA,OAAO,sCAAP;AACA,OAAOC,MAAP,MAAmB,6DAAnB;AACA,SAASC,IAAT,QAAqB,qCAArB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","sourcesContent":["import React from \"react\";\n// react plugin for creating charts\nimport ChartistGraph from \"react-chartist\";\n// @material-ui/core\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Icon from \"@material-ui/core/Icon\";\nimport {Component} from 'react';\n// @material-ui/icons\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport AccessTime from \"@material-ui/icons/AccessTime\";\n// core components\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Table from \"components/Table/Table.js\";\nimport Tasks from \"components/Tasks/Tasks.js\";\nimport CustomTabs from \"components/CustomTabs/CustomTabs.js\";\nimport Danger from \"components/Typography/Danger.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardIcon from \"components/Card/CardIcon.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport NewCaseModal from \"components/Modal/newcaseModal.js\";\nimport ResolvedCaseModal from \"components/Modal/resolvedcaseModal.js\";\nimport PendingCaseModal from \"components/Modal/pendingcaseModal.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport { card } from \"assets/jss/material-dashboard-react\";\nimport { CardActions } from \"@material-ui/core\";\nimport axios from 'axios';\n\n\n// const displayFeedback=[];\n// const array=[];\n// const temp=[];\n// const temp2=[];\n// var Chartist = require(\"chartist\");\n// var delays = 80,\n//   durations = 500;\n// var delays2 = 80,\n//   durations2 = 500;\n\n//   // response.data.forEach(store => {\n//   //   var object = {value: store, label: store}\n//   //   faultOptions.push(object)\n//   // });\n// function getCustomerFeedbacks(){\n//   axios\n//   .get(\"http://localhost:8080/api/v1/feedback/chart\")\n//   .then((response) => {\n//     displayFeedback.push(response.data)\n//     array.push(Object.values(displayFeedback[0]))\n//     array[0].forEach(item=>{\n//       var object = item.datetime\n//       var object2 = item.rating\n//       temp.push(object)\n//       temp2.push(object2)\n//     })\n//     console.log(temp);\n//   })\n//   const feedbackChart = {\n//     data: {\n//       labels: temp\n\n      \n//       ,\n//       series: temp2\n        \n      \n//     },\n//     options: {\n//       axisX: {\n//         showGrid: false\n//       },\n//       low: 0,\n//       high: 5,\n//       chartPadding: {\n//         top: 0,\n//         right: 5,\n//         bottom: 0,\n//         left: 0\n//       }\n//     },\n//     responsiveOptions: [\n//       [\n//         \"screen and (max-width: 640px)\",\n//         {\n//           seriesBarDistance: 5,\n//           axisX: {\n//             labelInterpolationFnc: function(value) {\n//               return value[0];\n//             }\n//           }\n//         }\n//       ]\n//     ],\n//     animation: {\n//       draw: function(data) {\n//         if (data.type === \"bar\") {\n//           data.element.animate({\n//             opacity: {\n//               begin: (data.index + 1) * delays2,\n//               dur: durations2,\n//               from: 0,\n//               to: 1,\n//               easing: \"ease\"\n//             }\n//           });\n//         }\n//       }\n//     }\n//   };\n//   console.log(\"HE\");\n//   console.log(feedbackChart.data)\n//   return feedbackChart;\n//   }\n// //getCustomerFeedbacks();\n\n\nimport {\n  dailySalesChart,\n  emailsSubscriptionChart,\n  completedTasksChart\n} from \"variables/charts.js\";\n\n\nconst useStyles = makeStyles(styles);\n\nconst array = [];\nlet status;\nfunction getChart(){\n  axios\n  .get(\"http://localhost:8080/api/v1/chart\")\n  .then((response) => {\n  array.push(Object.values((response.data)))\n  //console.log(array);\n  array[0].map(item=>{status = item.status})\n  console.log(status);\n  })\n}\n\ngetChart();\n\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [modalShow, setModalShow] = React.useState(false);\n  const [modalShow2, setModalShow2] = React.useState(false);\n  const [modalShow3, setModalShow3] = React.useState(false);\n  return (\n    <div>\n      {/* <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card chart>\n            <CardHeader color=\"info\">\n              <ChartistGraph\n                className=\"ct-chart\"\n                data={getCustomerFeedbacks().data}\n                type=\"Bar\"\n                options={getCustomerFeedbacks().options}\n                responsiveOptions={getCustomerFeedbacks().responsiveOptions}\n                listener={getCustomerFeedbacks().animation}\n              />\n            </CardHeader>\n            <CardBody>\n              <h4 className={classes.cardTitle}>Recent Ratings</h4>\n              <p className={classes.cardCategory}>Ratings through Customer Feedbacks</p>\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer> */}\n       <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card chart>\n            <CardHeader color=\"info\">\n              <ChartistGraph\n                className=\"ct-chart\"\n                data={emailsSubscriptionChart.data}\n                type=\"Bar\"\n                options={emailsSubscriptionChart.options}\n                responsiveOptions={emailsSubscriptionChart.responsiveOptions}\n                listener={emailsSubscriptionChart.animation}\n              />\n            </CardHeader>\n            <CardBody>\n              <h4 className={classes.cardTitle}>Recent Ratings</h4>\n              <p className={classes.cardCategory}>Ratings through Customer Feedbacks</p>\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer>\n      \n      <br></br>\n      \n      <GridContainer>\n      <GridItem xs={12} sm={12} md={4}>\n        <Button onClick={() => setModalShow(true)} fullWidth color=\"danger\">New Cases Reported</Button>\n        <NewCaseModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />  \n      </GridItem>\n      <GridItem xs={12} sm={12} md={4}>\n        <Button  onClick={() => setModalShow2(true)} fullWidth color=\"warning\">Pending Cases</Button>\n        <PendingCaseModal\n        show={modalShow2}\n        onHide={() => setModalShow2(false)}\n      />\n      </GridItem>\n      <GridItem xs={12} sm={12} md={4}>\n        <Button onClick={() => setModalShow3(true)} fullWidth color=\"success\">Resolved Cases</Button> \n        <ResolvedCaseModal\n        show={modalShow3}\n        onHide={() => setModalShow3(false)}\n      />\n      </GridItem>\n      </GridContainer>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}