{"ast":null,"code":"import _createForOfIteratorHelper from \"D:\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nvar _jsxFileName = \"D:\\\\material-dashboard-react-master\\\\src\\\\views\\\\Analytics\\\\Analytics.js\";\nimport React from \"react\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardAvatar from \"components/Card/CardAvatar.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport { Container, List } from \"semantic-ui-react\";\nimport Dropdown from \"components/DropdownAna/dropdown.js\";\nimport axios from 'axios';\nvar newCases = [];\nvar array = [];\n\nfunction getNewCases() {\n  axios.get(\"http://localhost:8080/api/v1/fault\").then(function (response) {\n    newCases.push(response.data);\n    array.push(Object.values(newCases[0]));\n    console.log(array);\n  });\n}\n\ngetNewCases();\n\nvar objectToCsv = function objectToCsv(data) {\n  var csvRows = []; //get the headers\n\n  var headers = Object.keys(data[0]);\n  csvRows.push(headers.join(',')); //loop over rows\n\n  var _iterator = _createForOfIteratorHelper(data),\n      _step;\n\n  try {\n    var _loop = function _loop() {\n      var row = _step.value;\n      var values = headers.map(function (header) {\n        var escaped = ('' + row[header]).replace(/\"/g, '\\\"');\n        return '\"${escaped}\"';\n      });\n      csvRows.push(values.jpin(','));\n    };\n\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      _loop();\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return csvRows.join('\\n'); //form escaped comma seperated values\n};\n\nvar download = function download(data) {\n  var blob = new Blob([data], {\n    type: 'text/csv'\n  });\n  var url = window.URL.createObjectURL(blob);\n  var a = document.createElement('a');\n  a.setAttribute('hidden', '');\n  a.setAttribute('href', url);\n  a.setAttribute('download', 'download.csv');\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n};\n\nfunction getReport() {\n  var data = data.map(function (row) {\n    return {\n      age: row.age,\n      email: row.email,\n      firstName: row.firstName,\n      lastName: row.lastName\n    };\n  });\n  var csvData = objectToCsv(data);\n  download(csvData);\n}\n\nexport default function Analytics() {\n  return /*#__PURE__*/React.createElement(Dropdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }\n  });\n}","map":{"version":3,"sources":["D:/material-dashboard-react-master/src/views/Analytics/Analytics.js"],"names":["React","makeStyles","InputLabel","GridItem","GridContainer","CustomInput","Button","Card","CardHeader","CardAvatar","CardBody","CardFooter","Container","List","Dropdown","axios","newCases","array","getNewCases","get","then","response","push","data","Object","values","console","log","objectToCsv","csvRows","headers","keys","join","row","map","header","escaped","replace","jpin","download","blob","Blob","type","url","window","URL","createObjectURL","a","document","createElement","setAttribute","body","appendChild","click","removeChild","getReport","age","email","firstName","lastName","csvData","Analytics"],"mappings":"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","sourcesContent":["import React from \"react\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n// core components\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardAvatar from \"components/Card/CardAvatar.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport { Container, List } from \"semantic-ui-react\";\nimport Dropdown from \"components/DropdownAna/dropdown.js\";\nimport axios from 'axios';\n\nconst newCases=[];\nconst array=[];\nfunction getNewCases(){\n  axios\n  .get(\"http://localhost:8080/api/v1/fault\")\n  .then((response) => {\n    newCases.push(response.data)\n    array.push(Object.values(newCases[0]))\n    console.log(array);\n})\n}\ngetNewCases();\n\nconst objectToCsv = function(data){\n\n  const csvRows = [];\n\n  //get the headers\n  const headers = Object.keys(data[0]);\n  csvRows.push(headers.join(','));\n\n  //loop over rows\n  for (const row of data){\n      const values = headers.map(header =>{\n          const escaped = (''+row[header]).replace(/\"/g,'\\\"')\n          return '\"${escaped}\"';\n      });\n      csvRows.push(values.jpin(','));\n  }\n  return csvRows.join('\\n')\n  //form escaped comma seperated values\n}\n\nconst download = function(data){\n  const blob = new Blob([data], {type:'text/csv'});\n  const url = window.URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  a.setAttribute('hidden', '');\n  a.setAttribute('href',url);\n  a.setAttribute('download','download.csv');\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n};\n\nfunction getReport(){\nconst data = data.map(row => ({\n  age: row.age,\n  email: row.email,\n  firstName: row.firstName,\n  lastName: row.lastName\n}));\n\nconst csvData = objectToCsv(data);\ndownload(csvData);\n}\n\nexport default function Analytics() {\n  return (\n   <Dropdown />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}