{"ast":null,"code":"var _jsxFileName = \"D:\\\\material-dashboard-react-master\\\\src\\\\components\\\\Modal\\\\newcaseModal.js\";\nimport React from 'react';\nimport { Fragment } from 'react';\nimport Select from 'react-select';\nimport Button from \"components/CustomButtons/Button.js\";\nimport Modal from 'react-bootstrap/Modal';\nimport ModalHeader from 'react-bootstrap/ModalHeader';\nimport ModalTitle from 'react-bootstrap/ModalTitle';\nimport ModalBody from 'react-bootstrap/ModalBody';\nimport ModalFooter from 'react-bootstrap/ModalFooter';\nimport Table from \"components/Table/Table.js\";\nimport axios from 'axios';\nvar newCases = [];\nvar array = [];\n\nfunction getNewCases() {\n  axios.get(\"http://localhost:8080/api/v1/newcases\").then(function (response) {\n    newCases.push(response.data);\n    console.log(newCases);\n    array.push(newCases[0]);\n  });\n}\n\ngetNewCases();\nvar storeOptions = [];\n\nfunction getStoreOptions() {\n  axios.get(\"http://localhost:8080/api/v1/store\").then(function (response) {\n    response.data.forEach(function (storeName) {\n      var object = {\n        value: storeName,\n        label: storeName\n      };\n      storeOptions.push(object);\n    });\n    console.log(storeOptions);\n  })[\"catch\"](function (err) {\n    console.log(err);\n  });\n}\n\ngetStoreOptions(); // function looper(){\n//   for(var i=0; i<array.length;i++){\n//     var object = {value:[array[i].value[0], array[i].value[1], array[i].value[2]]}\n//     temparray.push(object)\n//   }\n//   //console.log(\"TEMP\" + temparray);\n// }\n// //looper();\n\nvar newArray = [];\nexport default function newcaseModal(props) {\n  var _this = this;\n\n  return /*#__PURE__*/React.createElement(Modal, Object.assign({}, props, {\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    backdrop: \"static\",\n    keyboard: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(ModalHeader, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalTitle, {\n    id: \"contained-modal-title-vcenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Unresolved Issues\")), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }\n  }, \"Store Location\")), /*#__PURE__*/React.createElement(Select, {\n    className: \"basic-single\",\n    classNamePrefix: \"select\",\n    name: \"color\",\n    options: storeOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Table, {\n    tableHeaderColor: \"primary\",\n    tableHead: [\"Reported on\", \"Fault type\", \"Store Location\", \"\"],\n    tableData: testarray[0].map(function (takarray) {\n      return [takarray.DateTime, takarray.Problem.Category, takarray.StoreName, /*#__PURE__*/React.createElement(Button, {\n        onClick: function onClick(event) {\n          return window.location.href = '/newcases/solve';\n        },\n        fullWidth: true,\n        color: \"info\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 90\n        }\n      }, \"Solve\")];\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"danger\",\n    onClick: props.onHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"Close\")));\n} //<Button onClick={event =>  window.location.href='/newcases/solve'} fullWidth color=\"info\">Solve</Button>","map":{"version":3,"sources":["D:/material-dashboard-react-master/src/components/Modal/newcaseModal.js"],"names":["React","Fragment","Select","Button","Modal","ModalHeader","ModalTitle","ModalBody","ModalFooter","Table","axios","newCases","array","getNewCases","get","then","response","push","data","console","log","storeOptions","getStoreOptions","forEach","storeName","object","value","label","err","newArray","newcaseModal","props","testarray","map","takarray","DateTime","Problem","Category","StoreName","event","window","location","href","onHide"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Fragment } from 'react';\r\nimport Select from 'react-select';\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport ModalHeader from 'react-bootstrap/ModalHeader';\r\nimport ModalTitle from 'react-bootstrap/ModalTitle';\r\nimport ModalBody from 'react-bootstrap/ModalBody';\r\nimport ModalFooter from 'react-bootstrap/ModalFooter';\r\nimport Table from \"components/Table/Table.js\";\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst newCases = [];\r\nconst array =[];\r\n\r\nfunction getNewCases(){\r\n  axios\r\n  .get(\"http://localhost:8080/api/v1/newcases\")\r\n  .then((response) => {\r\n    newCases.push(response.data)\r\n    console.log(newCases);\r\n    array.push(newCases[0])\r\n})\r\n}\r\ngetNewCases();\r\n\r\nconst storeOptions = [];\r\nfunction getStoreOptions(){\r\n  axios\r\n  .get(\"http://localhost:8080/api/v1/store\")\r\n  .then((response) => {\r\n    response.data.forEach(storeName => {\r\n      var object = {value: storeName, label: storeName}\r\n      storeOptions.push(object)\r\n  });\r\n  console.log(storeOptions);\r\n})\r\n  .catch((err) => {\r\n    console.log(err);\r\n  });\r\n}\r\ngetStoreOptions();\r\n\r\n// function looper(){\r\n//   for(var i=0; i<array.length;i++){\r\n//     var object = {value:[array[i].value[0], array[i].value[1], array[i].value[2]]}\r\n//     temparray.push(object)\r\n//   }\r\n//   //console.log(\"TEMP\" + temparray);\r\n// }\r\n// //looper();\r\nconst newArray=[];\r\n\r\nexport default function newcaseModal(props){\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n      backdrop=\"static\"\r\n      keyboard={false}\r\n    >\r\n      <ModalHeader closeButton >\r\n        <ModalTitle id=\"contained-modal-title-vcenter\">\r\n          Unresolved Issues\r\n        </ModalTitle>\r\n      </ModalHeader>\r\n      <ModalBody>\r\n      <Fragment>\r\n        <p><b>Store Location</b></p>\r\n        <Select\r\n          className=\"basic-single\"\r\n          classNamePrefix=\"select\"\r\n          name=\"color\"\r\n          options={storeOptions}\r\n        />\r\n      </Fragment>\r\n      <Table\r\n              tableHeaderColor=\"primary\"\r\n              tableHead={[\"Reported on\", \"Fault type\", \"Store Location\", \"\"]}\r\n              tableData={\r\n                testarray[0].map((takarray) => {\r\n                  return [takarray.DateTime,takarray.Problem.Category,takarray.StoreName,<Button onClick={event =>  window.location.href='/newcases/solve'} fullWidth color=\"info\">Solve</Button>]\r\n                })\r\n              }\r\n            /> \r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button color=\"danger\" onClick={props.onHide}>Close</Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n}\r\n\r\n//<Button onClick={event =>  window.location.href='/newcases/solve'} fullWidth color=\"info\">Solve</Button>"]},"metadata":{},"sourceType":"module"}