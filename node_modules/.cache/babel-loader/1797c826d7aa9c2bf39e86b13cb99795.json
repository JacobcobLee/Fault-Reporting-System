{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\material-dashboard-react-master\\\\src\\\\views\\\\Analytics\\\\2Analytics.js\";\nimport React, { useState, useEffect } from 'react';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\nimport 'react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport filterFactory, { textFilter, dateFilter, Comparator } from 'react-bootstrap-table2-filter';\nimport * as ReactBootStrap from 'react-bootstrap';\nimport axios from 'axios';\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport Select from 'react-select';\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nexport default function Analytics2() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      analytics = _useState2[0],\n      setAnalytics = _useState2[1];\n\n  var getAnalyticsData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get(\"http://localhost:8080/api/v1/fault\").then(function (response) {\n                console.log(response.data);\n                setAnalytics(Object.values(response.data));\n              });\n\n            case 3:\n              _context.next = 8;\n              break;\n\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 5]]);\n    }));\n\n    return function getAnalyticsData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      search = _useState4[0],\n      setSearch = _useState4[1];\n\n  var filterArray = analytics.filter(function (item) {\n    return item.storeName.toLowerCase().includes(search.toLowerCase());\n  });\n  var columns = [{\n    dataField: \"dateTime\",\n    text: \"Case reported on\",\n    filter: dateFilter({\n      delay: 600,\n      // how long will trigger filtering after user typing, default is 500 ms\n      placeholder: 'custom placeholder',\n      // placeholder for date input\n      style: {\n        display: 'inline-grid'\n      },\n      // custom the style on date filter\n      className: 'custom-dateFilter-class',\n      // custom the class on date filter\n      comparatorStyle: {\n        backgroundColor: 'antiquewhite'\n      },\n      // custom the style on comparator select\n      comparatorClassName: 'custom-comparator-class',\n      // custom the class on comparator select\n      dateStyle: {\n        backgroundColor: 'cadetblue',\n        margin: '0px'\n      },\n      // custom the style on date input\n      dateClassName: 'custom-date-class',\n      // custom the class on date input\n      defaultValue: {\n        date: new Date(2018, 0, 1),\n        comparator: Comparator.GT\n      } // default value\n\n    })\n  }, {\n    dataField: \"storeName\",\n    text: \"Store Location\",\n    filter: textFilter()\n  }, {\n    dataField: \"problem.category\",\n    text: \"Category\",\n    filter: textFilter()\n  }, {\n    dataField: \"description\",\n    text: \"Description\"\n  }, {\n    dataField: \"staffName\",\n    text: \"Staff Name\"\n  }, {\n    dataField: \"comments\",\n    text: \"Comments\"\n  }];\n  useEffect(function () {\n    getAnalyticsData();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Cases\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"Cases can be generated as excel sheet and downloaded\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }\n  }, \"Filter :\")), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"By Category :\"), /*#__PURE__*/React.createElement(Select, {\n    className: \"basic-single\",\n    classNamePrefix: \"select\",\n    name: \"color\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"By Store Location :\"), /*#__PURE__*/React.createElement(Select, {\n    className: \"basic-single\",\n    classNamePrefix: \"select\",\n    name: \"color\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, \"By Date :\"), /*#__PURE__*/React.createElement(Select, {\n    className: \"basic-single\",\n    classNamePrefix: \"select\",\n    name: \"color\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BootstrapTable, {\n    filter: filterFactory(),\n    keyField: \"uuid\",\n    data: analytics,\n    columns: columns,\n    pagination: paginationFactory(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, \"Generate Excel Sheet\"))));\n}","map":{"version":3,"sources":["D:/material-dashboard-react-master/src/views/Analytics/2Analytics.js"],"names":["React","useState","useEffect","BootstrapTable","paginationFactory","filterFactory","textFilter","dateFilter","Comparator","ReactBootStrap","axios","Card","CardBody","CardHeader","Select","CardFooter","Button","GridItem","GridContainer","Analytics2","analytics","setAnalytics","getAnalyticsData","get","then","response","console","log","data","Object","values","search","setSearch","filterArray","filter","item","storeName","toLowerCase","includes","columns","dataField","text","delay","placeholder","style","display","className","comparatorStyle","backgroundColor","comparatorClassName","dateStyle","margin","dateClassName","defaultValue","date","Date","comparator","GT"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\r\nimport 'react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { textFilter, dateFilter, Comparator } from 'react-bootstrap-table2-filter';\r\nimport * as ReactBootStrap from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport Select from 'react-select';\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\n\r\nexport default function Analytics2() {\r\n    const [analytics,setAnalytics] = useState([]);\r\n    const getAnalyticsData = async ()=> {\r\n        try{\r\n            await axios\r\n            .get(\"http://localhost:8080/api/v1/fault\")\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                setAnalytics(Object.values(response.data));\r\n            })\r\n        }\r\n        catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const [search, setSearch] = useState('')\r\n    const filterArray = analytics.filter(item=>{\r\n    return item.storeName.toLowerCase().includes(search.toLowerCase())\r\n  })\r\n\r\n    const columns = [\r\n        {dataField: \"dateTime\", text:\"Case reported on\",filter: dateFilter({\r\n            delay: 600,  // how long will trigger filtering after user typing, default is 500 ms\r\n            placeholder: 'custom placeholder',  // placeholder for date input\r\n            style: { display: 'inline-grid' },  // custom the style on date filter\r\n            className: 'custom-dateFilter-class',  // custom the class on date filter\r\n            comparatorStyle: { backgroundColor: 'antiquewhite' }, // custom the style on comparator select\r\n            comparatorClassName: 'custom-comparator-class',  // custom the class on comparator select\r\n            dateStyle: { backgroundColor: 'cadetblue', margin: '0px' },  // custom the style on date input\r\n            dateClassName: 'custom-date-class',  // custom the class on date input\r\n            defaultValue: { date: new Date(2018, 0, 1), comparator: Comparator.GT },  // default value\r\n            })},\r\n        {dataField: \"storeName\", text:\"Store Location\",filter: textFilter()},\r\n        {dataField: \"problem.category\", text:\"Category\",filter: textFilter()},\r\n        {dataField: \"description\", text:\"Description\"},\r\n        {dataField: \"staffName\", text:\"Staff Name\"},\r\n        {dataField: \"comments\", text:\"Comments\"},\r\n    ]\r\n\r\n    useEffect(() => {\r\n        getAnalyticsData();\r\n    },[])\r\n    return (\r\n        <div>\r\n        <Card>\r\n        <CardHeader color=\"primary\">\r\n        <h4>Cases</h4>\r\n          <p>\r\n            Cases can be generated as excel sheet and downloaded\r\n          </p>\r\n        </CardHeader>\r\n        <CardBody>\r\n        <b><h4>Filter :</h4></b>\r\n        <h6>By Category :</h6>\r\n        <Select\r\n          className=\"basic-single\"\r\n          classNamePrefix=\"select\"\r\n          name=\"color\"\r\n        />\r\n        <br></br>\r\n        <h6>By Store Location :</h6>\r\n        <Select\r\n          className=\"basic-single\"\r\n          classNamePrefix=\"select\"\r\n          name=\"color\"\r\n        />\r\n        <br></br>\r\n        <h6>By Date :</h6>\r\n        <Select\r\n          className=\"basic-single\"\r\n          classNamePrefix=\"select\"\r\n          name=\"color\"\r\n        />\r\n        <br></br>\r\n        <BootstrapTable\r\n        filter={filterFactory()}\r\n        keyField=\"uuid\"\r\n        data={analytics}\r\n        columns={columns}\r\n        pagination={paginationFactory()}\r\n        />\r\n        </CardBody>\r\n        </Card>\r\n        <GridContainer>\r\n            <GridItem xs={12} sm={12} md={12}>\r\n                <Button fullWidth color=\"info\">Generate Excel Sheet</Button>\r\n            </GridItem>\r\n        </GridContainer>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}