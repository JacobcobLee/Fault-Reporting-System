{"ast":null,"code":"import _slicedToArray from \"D:\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\material-dashboard-react-master\\\\src\\\\components\\\\Modal\\\\manageaccountModal.js\";\nimport React from 'react';\nimport { Fragment } from 'react';\nimport Select from 'react-select';\nimport { useState } from 'react';\nimport Button from \"components/CustomButtons/Button.js\";\nimport Modal from 'react-bootstrap/Modal';\nimport ModalHeader from 'react-bootstrap/ModalHeader';\nimport ModalTitle from 'react-bootstrap/ModalTitle';\nimport ModalBody from 'react-bootstrap/ModalBody';\nimport ModalFooter from 'react-bootstrap/ModalFooter';\nimport Table from \"components/Table/Table.js\";\nimport axios from 'axios';\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from 'components/Card/CardFooter';\nimport { auth } from '../Firebase';\nvar userOptions = [{\n  value: \"Member\",\n  label: \"Member\"\n}, {\n  value: \"Admin\",\n  label: \"Admin\"\n}];\nvar users = [];\nvar array = [];\n\nfunction getUsers() {\n  axios.get(\"http://localhost:8080/api/v1/allusers\").then(function (response) {\n    //console.log(response.data);\n    users.push(response.data);\n    array.push(users[0]); //to test and see the get form DB\n    // console.log(array[0].lastSignInTime);\n    // console.log(\"@@@@@@@@@@@@@@@@@@@@@@@@\")\n  });\n}\n\ngetUsers();\nexport default function ManageaccountModal(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      registeremail = _useState2[0],\n      setRegisterEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      registerpassword = _useState4[0],\n      setRegisterPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      registerconfirmpassword = _useState6[0],\n      setRegisterConfirmPassword = _useState6[1];\n\n  function createAccount() {\n    if (registeremail != \"\" && registerpassword != \"\" && registerconfirmpassword != \"\") {\n      if (registerpassword == registerconfirmpassword) {\n        var result = auth.createUserWithEmailAndPassword(registeremail, registerpassword).then(function (cred) {\n          return db.ref('/users/' + cred.user.uid).set({\n            email: cred.user.email,\n            role: 'admin',\n            uid: cred.user.uid\n          });\n        });\n        result.then(function () {\n          window.location.href = \"/afterlogin-page\";\n        });\n        result[\"catch\"](function (error) {\n          var errorCode = error.code;\n          var errorMsg = error.message;\n          console.log(errorCode + errorMsg);\n          window.alert(\"Message: \" + errorMsg);\n        });\n      } else {\n        window.alert(\"Password and Confirm Password do not match.\");\n      }\n    } else {\n      window.alert(\"Please fill out all fields!\");\n    }\n  }\n\n  function addAccount() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, \"Add a new account\")), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      required: \"true\",\n      placeholder: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"password\",\n      required: \"true\",\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"password\",\n      required: \"true\",\n      placeholder: \"Confirm Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      defaultValue: {\n        value: \"Member\",\n        label: \"Member\"\n      },\n      className: \"basic-single\",\n      classNamePrefix: \"select\",\n      name: \"color\",\n      options: userOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(CardFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: createAccount,\n      fullWidth: \"true\",\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, \"Create\"))));\n  }\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      search = _useState8[0],\n      setSearch = _useState8[1]; //filter through all data instead of only 1\n\n\n  var filterArray = users[0].filter(function (item) {\n    return Object.values(item).some(function (val) {\n      return String(val).toLowerCase().includes(search.toLowerCase());\n    });\n  });\n  return /*#__PURE__*/React.createElement(Modal, Object.assign({}, props, {\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    backdrop: \"static\",\n    keyboard: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(ModalHeader, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalTitle, {\n    id: \"contained-modal-title-vcenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, \"View Accounts \\xA0\\xA0\\xA0\")), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, addAccount(), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    placeholder: \"Search\",\n    onChange: function onChange(e) {\n      return setSearch(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    tableHeaderColor: \"primary\",\n    tableHead: [\"Account ID\", \"Account Email\", \"Last login\"],\n    tableData: filterArray.map(function (array) {\n      return [array.uid, array.email, array.metadata.lastSignInTime];\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"danger\",\n    onClick: props.onHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, \"Close\")));\n}","map":{"version":3,"sources":["D:/material-dashboard-react-master/src/components/Modal/manageaccountModal.js"],"names":["React","Fragment","Select","useState","Button","Modal","ModalHeader","ModalTitle","ModalBody","ModalFooter","Table","axios","Card","CardHeader","CardBody","CardFooter","auth","userOptions","value","label","users","array","getUsers","get","then","response","push","data","ManageaccountModal","props","registeremail","setRegisterEmail","registerpassword","setRegisterPassword","registerconfirmpassword","setRegisterConfirmPassword","createAccount","result","createUserWithEmailAndPassword","cred","db","ref","user","uid","set","email","role","window","location","href","error","errorCode","code","errorMsg","message","console","log","alert","addAccount","search","setSearch","filterArray","filter","item","Object","values","some","val","String","toLowerCase","includes","e","target","map","metadata","lastSignInTime","onHide"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,oCAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,SAASC,IAAT,QAAqB,aAArB;AAEA,IAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAAD,EAAuC;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CAAvC,CAApB;AACA,IAAMC,KAAK,GAAG,EAAd;AACA,IAAMC,KAAK,GAAG,EAAd;;AACA,SAASC,QAAT,GAAoB;AAElBX,EAAAA,KAAK,CACFY,GADH,CACO,uCADP,EAEGC,IAFH,CAEQ,UAACC,QAAD,EAAc;AAClB;AACAL,IAAAA,KAAK,CAACM,IAAN,CAAWD,QAAQ,CAACE,IAApB;AACAN,IAAAA,KAAK,CAACK,IAAN,CAAWN,KAAK,CAAC,CAAD,CAAhB,EAHkB,CAIlB;AACA;AACA;AACD,GATH;AAUD;;AACDE,QAAQ;AAIR,eAAe,SAASM,kBAAT,CAA4BC,KAA5B,EAAmC;AAAA,kBAEP1B,QAAQ,CAAC,EAAD,CAFD;AAAA;AAAA,MAEzC2B,aAFyC;AAAA,MAE3BC,gBAF2B;;AAAA,mBAID5B,QAAQ,CAAC,EAAD,CAJP;AAAA;AAAA,MAIzC6B,gBAJyC;AAAA,MAIxBC,mBAJwB;;AAAA,mBAKa9B,QAAQ,CAAC,EAAD,CALrB;AAAA;AAAA,MAKzC+B,uBALyC;AAAA,MAKjBC,0BALiB;;AAOhD,WAASC,aAAT,GAAwB;AACtB,QAAIN,aAAa,IAAI,EAAjB,IAAuBE,gBAAgB,IAAI,EAA3C,IAAiDE,uBAAuB,IAAI,EAAhF,EAAoF;AAClF,UAAIF,gBAAgB,IAAIE,uBAAxB,EAAiD;AAC7C,YAAIG,MAAM,GAAGrB,IAAI,CAACsB,8BAAL,CAAoCR,aAApC,EAAmDE,gBAAnD,EAAqER,IAArE,CAA0E,UAAAe,IAAI,EAAG;AAC5F,iBAAOC,EAAE,CAACC,GAAH,CAAO,YAAUF,IAAI,CAACG,IAAL,CAAUC,GAA3B,EAAgCC,GAAhC,CAAoC;AACzCC,YAAAA,KAAK,EAAEN,IAAI,CAACG,IAAL,CAAUG,KADwB;AAEzCC,YAAAA,IAAI,EAAE,OAFmC;AAGzCH,YAAAA,GAAG,EAAEJ,IAAI,CAACG,IAAL,CAAUC;AAH0B,WAApC,CAAP;AAKH,SANc,CAAb;AAOAN,QAAAA,MAAM,CAACb,IAAP,CAAY,YAAU;AACpBuB,UAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,kBAAvB;AACD,SAFD;AAGAZ,QAAAA,MAAM,SAAN,CAAa,UAAUa,KAAV,EAAiB;AAC1B,cAAIC,SAAS,GAAGD,KAAK,CAACE,IAAtB;AACA,cAAIC,QAAQ,GAAGH,KAAK,CAACI,OAArB;AAEAC,UAAAA,OAAO,CAACC,GAAR,CAAYL,SAAS,GAAGE,QAAxB;AACAN,UAAAA,MAAM,CAACU,KAAP,CAAa,cAAcJ,QAA3B;AAEH,SAPD;AAQH,OAnBD,MAoBI;AACAN,QAAAA,MAAM,CAACU,KAAP,CAAa,6CAAb;AACH;AACJ,KAxBC,MAyBG;AACDV,MAAAA,MAAM,CAACU,KAAP,CAAa,6BAAb;AACH;AACA;;AAED,WAASC,UAAT,GAAsB;AACpB,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF,eAIE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAgC,MAAA,IAAI,EAAC,MAArC;AAA4C,MAAA,QAAQ,EAAC,MAArD;AAA4D,MAAA,WAAW,EAAC,OAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAgC,MAAA,IAAI,EAAC,UAArC;AAAgD,MAAA,QAAQ,EAAC,MAAzD;AAAgE,MAAA,WAAW,EAAC,UAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAgC,MAAA,IAAI,EAAC,UAArC;AAAgD,MAAA,QAAQ,EAAC,MAAzD;AAAgE,MAAA,WAAW,EAAC,kBAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,eAOE,oBAAC,MAAD;AACE,MAAA,YAAY,EAAE;AAAExC,QAAAA,KAAK,EAAE,QAAT;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OADhB;AAEE,MAAA,SAAS,EAAC,cAFZ;AAGE,MAAA,eAAe,EAAC,QAHlB;AAIE,MAAA,IAAI,EAAC,OAJP;AAKE,MAAA,OAAO,EAAEF,WALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,CAJF,eAoBE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAEmB,aAAjB;AAAgC,MAAA,SAAS,EAAC,MAA1C;AAAiD,MAAA,KAAK,EAAC,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CApBF,CADF,CADF;AA4BD;;AAnE+C,mBAqEpBjC,QAAQ,CAAC,EAAD,CArEY;AAAA;AAAA,MAqEzCwD,MArEyC;AAAA,MAqEjCC,SArEiC,kBAuEhD;;;AACA,MAAMC,WAAW,GAAGzC,KAAK,CAAC,CAAD,CAAL,CAAS0C,MAAT,CAAgB,UAAUC,IAAV,EAAgB;AAClD,WAAOC,MAAM,CAACC,MAAP,CAAcF,IAAd,EAAoBG,IAApB,CAAyB,UAAAC,GAAG;AAAA,aACjCC,MAAM,CAACD,GAAD,CAAN,CAAYE,WAAZ,GAA0BC,QAA1B,CAAmCX,MAAM,CAACU,WAAP,EAAnC,CADiC;AAAA,KAA5B,CAAP;AAGD,GAJmB,CAApB;AAKA,sBACE,oBAAC,KAAD,oBACMxC,KADN;AAEE,IAAA,IAAI,EAAC,IAFP;AAGE,uBAAgB,+BAHlB;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,QAAQ,EAAC,QALX;AAME,IAAA,QAAQ,EAAE,KANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAQE,oBAAC,WAAD;AAAa,IAAA,WAAW,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,CARF,eAcE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG6B,UAAU,EADb,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAO,IAAA,SAAS,EAAC,cAAjB;AAAgC,IAAA,IAAI,EAAC,MAArC;AAA4C,IAAA,WAAW,EAAC,QAAxD;AAAiE,IAAA,QAAQ,EAAE,kBAAAa,CAAC;AAAA,aAAIX,SAAS,CAACW,CAAC,CAACC,MAAF,CAAStD,KAAV,CAAb;AAAA,KAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,KAAD;AACE,IAAA,gBAAgB,EAAC,SADnB;AAEE,IAAA,SAAS,EAAE,CAAC,YAAD,EAAe,eAAf,EAAgC,YAAhC,CAFb;AAGE,IAAA,SAAS,EACP2C,WAAW,CAACY,GAAZ,CAAgB,UAACpD,KAAD,EAAW;AACzB,aAAO,CAACA,KAAK,CAACsB,GAAP,EAAYtB,KAAK,CAACwB,KAAlB,EAAyBxB,KAAK,CAACqD,QAAN,CAAeC,cAAxC,CAAP;AACD,KAFD,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAdF,eA4BE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAuB,IAAA,OAAO,EAAE9C,KAAK,CAAC+C,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CA5BF,CADF;AAkCD","sourcesContent":["import React from 'react';\r\nimport { Fragment } from 'react';\r\nimport Select from 'react-select';\r\nimport { useState } from 'react';\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport ModalHeader from 'react-bootstrap/ModalHeader';\r\nimport ModalTitle from 'react-bootstrap/ModalTitle';\r\nimport ModalBody from 'react-bootstrap/ModalBody';\r\nimport ModalFooter from 'react-bootstrap/ModalFooter';\r\nimport Table from \"components/Table/Table.js\";\r\nimport axios from 'axios';\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from 'components/Card/CardFooter';\r\nimport { auth } from '../Firebase';\r\n\r\nconst userOptions = [{ value: \"Member\", label: \"Member\" }, { value: \"Admin\", label: \"Admin\" }]\r\nconst users = [];\r\nconst array = [];\r\nfunction getUsers() {\r\n\r\n  axios\r\n    .get(\"http://localhost:8080/api/v1/allusers\")\r\n    .then((response) => {\r\n      //console.log(response.data);\r\n      users.push(response.data)\r\n      array.push(users[0])\r\n      //to test and see the get form DB\r\n      // console.log(array[0].lastSignInTime);\r\n      // console.log(\"@@@@@@@@@@@@@@@@@@@@@@@@\")\r\n    })\r\n}\r\ngetUsers();\r\n\r\n\r\n\r\nexport default function ManageaccountModal(props) {\r\n\r\n  const [registeremail,setRegisterEmail] = useState(\"\");\r\n\r\n  const [registerpassword,setRegisterPassword] = useState(\"\");\r\n  const [registerconfirmpassword,setRegisterConfirmPassword] = useState(\"\");\r\n\r\n  function createAccount(){\r\n    if (registeremail != \"\" && registerpassword != \"\" && registerconfirmpassword != \"\") {\r\n      if (registerpassword == registerconfirmpassword) {\r\n          var result = auth.createUserWithEmailAndPassword(registeremail, registerpassword).then(cred =>{\r\n            return db.ref('/users/'+cred.user.uid).set({\r\n              email: cred.user.email,\r\n              role: 'admin',\r\n              uid: cred.user.uid\r\n          })\r\n        })\r\n          result.then(function(){\r\n            window.location.href = \"/afterlogin-page\"\r\n          })\r\n          result.catch(function (error) {\r\n              var errorCode = error.code;\r\n              var errorMsg = error.message;\r\n\r\n              console.log(errorCode + errorMsg);\r\n              window.alert(\"Message: \" + errorMsg)\r\n\r\n          });\r\n      }\r\n      else{\r\n          window.alert(\"Password and Confirm Password do not match.\")\r\n      }\r\n  }\r\n  else {\r\n      window.alert(\"Please fill out all fields!\")\r\n  }\r\n  }\r\n\r\n  function addAccount() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <CardHeader>\r\n            <h6>Add a new account</h6>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <input className=\"form-control\" type=\"text\" required=\"true\" placeholder=\"Email\" />\r\n            <br></br>\r\n            <input className=\"form-control\" type=\"password\" required=\"true\" placeholder=\"Password\" />\r\n            <br></br>\r\n            <input className=\"form-control\" type=\"password\" required=\"true\" placeholder=\"Confirm Password\" />\r\n            <br></br>\r\n            <Select\r\n              defaultValue={{ value: \"Member\", label: \"Member\" }}\r\n              className=\"basic-single\"\r\n              classNamePrefix=\"select\"\r\n              name=\"color\"\r\n              options={userOptions}\r\n            />\r\n            <br></br>\r\n          </CardBody>\r\n          <CardFooter>\r\n            <Button onClick={createAccount} fullWidth=\"true\" color=\"info\">Create</Button>\r\n          </CardFooter>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const [search, setSearch] = useState('')\r\n\r\n  //filter through all data instead of only 1\r\n  const filterArray = users[0].filter(function (item) {\r\n    return Object.values(item).some(val =>\r\n      String(val).toLowerCase().includes(search.toLowerCase())\r\n    )\r\n  })\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n      backdrop=\"static\"\r\n      keyboard={false}\r\n    >\r\n      <ModalHeader closeButton >\r\n        <ModalTitle id=\"contained-modal-title-vcenter\">\r\n          View Accounts\r\n          &nbsp;&nbsp;&nbsp;\r\n        </ModalTitle>\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        {addAccount()}\r\n        <br></br>\r\n        <input className=\"form-control\" type=\"text\" placeholder=\"Search\" onChange={e => setSearch(e.target.value)} />\r\n        <Table\r\n          tableHeaderColor=\"primary\"\r\n          tableHead={[\"Account ID\", \"Account Email\", \"Last login\"]}\r\n          tableData={\r\n            filterArray.map((array) => {\r\n              return [array.uid, array.email, array.metadata.lastSignInTime]\r\n            })\r\n          }\r\n        />\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button color=\"danger\" onClick={props.onHide}>Close</Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}