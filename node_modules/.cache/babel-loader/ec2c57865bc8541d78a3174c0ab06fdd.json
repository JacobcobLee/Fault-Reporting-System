{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\material-dashboard-react-master\\\\src\\\\views\\\\TableList\\\\TableList.js\";\nimport React, { useState, useEffect } from 'react';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\nimport 'react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport filterFactory, { textFilter, dateFilter, Comparator } from 'react-bootstrap-table2-filter';\nimport * as ReactBootStrap from 'react-bootstrap';\nimport axios from 'axios';\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport Select from 'react-select';\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nexport default function TableList() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      customerfeedback = _useState2[0],\n      setCustomerFeedback = _useState2[1];\n\n  var getFeedbacksData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get(\"http://localhost:8080/api/v1/feedback\").then(function (response) {\n                console.log(response.data);\n                setCustomerFeedback(Object.values(response.data));\n              });\n\n            case 3:\n              _context.next = 8;\n              break;\n\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 5]]);\n    }));\n\n    return function getFeedbacksData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var columns = [//,filter: dateFilter()\n  {\n    dataField: \"datetime\",\n    text: \"Submitted On\"\n  }, {\n    dataField: \"location\",\n    text: \"Store Location\",\n    filter: textFilter()\n  }, {\n    dataField: \"feedbackType\",\n    text: \"Feedback Type\",\n    filter: textFilter()\n  }, {\n    dataField: \"standard\",\n    text: \"Standard\",\n    filter: textFilter()\n  }, {\n    dataField: \"issue\",\n    text: \"Issue\"\n  }, {\n    dataField: \"rating\",\n    text: \"Ratings\",\n    filter: textFilter()\n  }, {\n    dataField: \"staffname\",\n    text: \"Staff Name\"\n  }, {\n    dataField: \"custemail\",\n    text: \"Customer Email\"\n  }, {\n    dataField: \"custcontactno\",\n    text: \"Customer Contact\"\n  }, {\n    dataField: \"custname\",\n    text: \"Customer Name\"\n  }];\n  useEffect(function () {\n    getFeedbacksData();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Customer Feedback\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"Feedback can be generated as excel sheet and downloaded\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BootstrapTable, {\n    filter: filterFactory(),\n    keyField: \"uuid\",\n    data: customerfeedback,\n    columns: columns,\n    pagination: paginationFactory(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"Generate Excel Sheet\"))));\n} //tableHead={[\"Submitted On\", \"Store Location\", \"Feedback Type\", \"Standard\", \"Issue\", \"Ratings\", \"Served By\", \"Customer email\", \"Customer Contact\", \"Customer Name\"]}\n//[array.datetime,array.location,array.feedbackType,array.standard,array.issue,array.rating,array.staffname,array.custemail,array.custcontactno,array.custname]","map":{"version":3,"sources":["D:/material-dashboard-react-master/src/views/TableList/TableList.js"],"names":["React","useState","useEffect","BootstrapTable","paginationFactory","filterFactory","textFilter","dateFilter","Comparator","ReactBootStrap","axios","Card","CardBody","CardHeader","Select","CardFooter","Button","GridItem","GridContainer","TableList","customerfeedback","setCustomerFeedback","getFeedbacksData","get","then","response","console","log","data","Object","values","columns","dataField","text","filter"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\nimport 'react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport filterFactory, { textFilter, dateFilter, Comparator } from 'react-bootstrap-table2-filter';\nimport * as ReactBootStrap from 'react-bootstrap';\nimport axios from 'axios';\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport Select from 'react-select';\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\n\nexport default function TableList() {\n    const [customerfeedback,setCustomerFeedback] = useState([]);\n    const getFeedbacksData = async ()=> {\n        try{\n            await axios\n            .get(\"http://localhost:8080/api/v1/feedback\")\n            .then((response) => {\n                console.log(response.data);\n                setCustomerFeedback(Object.values(response.data));\n            })\n        }\n        catch(e){\n            console.log(e);\n        }\n    }\n\n\n    const columns = [//,filter: dateFilter()\n        {dataField: \"datetime\", text:\"Submitted On\"},\n        {dataField: \"location\", text:\"Store Location\",filter: textFilter()},\n        {dataField: \"feedbackType\", text:\"Feedback Type\",filter: textFilter()},\n        {dataField: \"standard\", text:\"Standard\",filter: textFilter()},\n        {dataField: \"issue\", text:\"Issue\"},\n        {dataField: \"rating\", text:\"Ratings\",filter: textFilter()},\n        {dataField: \"staffname\", text:\"Staff Name\"},\n        {dataField: \"custemail\", text:\"Customer Email\"},\n        {dataField: \"custcontactno\", text:\"Customer Contact\"},\n        {dataField: \"custname\", text:\"Customer Name\"},\n    ]\n\n    useEffect(() => {\n        getFeedbacksData();\n    },[])\n    return (\n        <div>\n        <Card>\n        <CardHeader color=\"primary\">\n        <h4>Customer Feedback</h4>\n          <p>\n            Feedback can be generated as excel sheet and downloaded\n          </p>\n        </CardHeader>\n        <CardBody>\n        <BootstrapTable\n        filter={filterFactory()}\n        keyField=\"uuid\"\n        data={customerfeedback}\n        columns={columns}\n        pagination={paginationFactory()}\n        />\n        </CardBody>\n        </Card>\n        <GridContainer>\n            <GridItem xs={12} sm={12} md={12}>\n                <Button fullWidth color=\"info\">Generate Excel Sheet</Button>\n            </GridItem>\n        </GridContainer>\n        </div>\n    )\n}\n\n\n\n //tableHead={[\"Submitted On\", \"Store Location\", \"Feedback Type\", \"Standard\", \"Issue\", \"Ratings\", \"Served By\", \"Customer email\", \"Customer Contact\", \"Customer Name\"]}\n//[array.datetime,array.location,array.feedbackType,array.standard,array.issue,array.rating,array.staffname,array.custemail,array.custcontactno,array.custname]             \n        "]},"metadata":{},"sourceType":"module"}