{"ast":null,"code":"import _createForOfIteratorHelper from \"D:\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nvar _jsxFileName = \"D:\\\\material-dashboard-react-master\\\\src\\\\views\\\\Analytics\\\\Analytics.js\";\nimport React from \"react\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardAvatar from \"components/Card/CardAvatar.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport { Container, List } from \"semantic-ui-react\";\nimport Dropdown from \"components/DropdownAna/dropdown.js\";\nimport axios from 'axios';\nvar newCases = [];\nvar array = [];\n\nfunction getNewCases() {\n  axios.get(\"http://localhost:8080/api/v1/fault\").then(function (response) {\n    newCases.push(response.data);\n    array.push(Object.values(newCases[0]));\n    console.log(array);\n    var data = array[0].map(function (row) {\n      return {\n        comments: row.comments,\n        datetime: row.dateTime,\n        description: row.description\n      };\n    });\n    console.log('sadas'); //console.log(data);\n\n    var csvRows = []; //get the headers\n\n    var headers = Object.keys(data[0]);\n    csvRows.push(headers.join(',')); //loop over rows\n\n    var _iterator = _createForOfIteratorHelper(data),\n        _step;\n\n    try {\n      var _loop = function _loop() {\n        var row = _step.value;\n        var values = headers.map(function (header) {\n          return row[header];\n        });\n        csvRows.push(values.join(','));\n      };\n\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    csvRows.join(\"\\n\"); //form escaped comma seperated values\n    //download(csvData);\n\n    console.log(csvRows);\n    download(csvRows);\n  });\n}\n\ngetNewCases();\n\nfunction objectToCsv(data) {}\n\nvar download = function download(data) {\n  var blob = new Blob([data], {\n    type: 'text/csv'\n  });\n  var url = window.URL.createObjectURL(blob);\n  var a = document.createElement('a');\n  a.setAttribute('hidden', '');\n  a.setAttribute('href', url);\n  a.setAttribute('download', 'download.csv');\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n};\n\nfunction getReport() {}\n\nexport default function Analytics() {\n  return /*#__PURE__*/React.createElement(Dropdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }\n  });\n}","map":{"version":3,"sources":["D:/material-dashboard-react-master/src/views/Analytics/Analytics.js"],"names":["React","makeStyles","InputLabel","GridItem","GridContainer","CustomInput","Button","Card","CardHeader","CardAvatar","CardBody","CardFooter","Container","List","Dropdown","axios","newCases","array","getNewCases","get","then","response","push","data","Object","values","console","log","map","row","comments","datetime","dateTime","description","csvRows","headers","keys","join","header","download","objectToCsv","blob","Blob","type","url","window","URL","createObjectURL","a","document","createElement","setAttribute","body","appendChild","click","removeChild","getReport","Analytics"],"mappings":"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","sourcesContent":["import React from \"react\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n// core components\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardAvatar from \"components/Card/CardAvatar.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport { Container, List } from \"semantic-ui-react\";\nimport Dropdown from \"components/DropdownAna/dropdown.js\";\nimport axios from 'axios';\n\nconst newCases=[];\nconst array=[];\nfunction getNewCases(){\n  axios\n  .get(\"http://localhost:8080/api/v1/fault\")\n  .then((response) => {\n    newCases.push(response.data)\n    array.push(Object.values(newCases[0]))\n    console.log(array);\n\n    const data = array[0].map(row => ({\n      comments: row.comments,\n      datetime: row.dateTime,\n      description: row.description\n    }));\n    console.log('sadas');\n    //console.log(data);\n\n    const csvRows = [];\n  \n  //get the headers\n  const headers = Object.keys(data[0]);\n\n  csvRows.push(headers.join(','));\n\n  //loop over rows\n  for (const row of data){\n      const values = headers.map(header =>{\n          \n          return row[header];\n      });\n      csvRows.push(values.join(','));\n  }\n  csvRows.join(\"\\n\");\n\n  //form escaped comma seperated values\n  //download(csvData);\n  console.log(csvRows);\n  download(csvRows);\n})\n}\ngetNewCases();\n\nfunction objectToCsv(data){\n\n}\n\nconst download = function(data){\n  const blob = new Blob([data], {type:'text/csv'});\n  const url = window.URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  a.setAttribute('hidden', '');\n  a.setAttribute('href',url);\n  a.setAttribute('download','download.csv');\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n};\n\nfunction getReport(){\n\n}\n\nexport default function Analytics() {\n  return (\n   <Dropdown />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}