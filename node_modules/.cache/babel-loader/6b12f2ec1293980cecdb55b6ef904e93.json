{"ast":null,"code":"import _defineProperty from \"D:\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\material-dashboard-react-master\\\\src\\\\components\\\\Sidebar\\\\Sidebar2.js\";\n\n/*eslint-disable*/\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { NavLink } from \"react-router-dom\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Icon from \"@material-ui/core/Icon\";\nimport styles from \"assets/jss/material-dashboard-react/components/sidebarStyle.js\";\nimport { Card } from \"@material-ui/core\";\nvar useStyles = makeStyles(styles);\nexport default function Sidebar(props) {\n  var _this = this;\n\n  var classes = useStyles(); // verifies if routeName is the one active (in browser input)\n\n  function activeRoute(routeName) {\n    return window.location.href.indexOf(routeName) > -1 ? true : false;\n  }\n\n  var color = props.color,\n      logo = props.logo,\n      image = props.image,\n      logoText = props.logoText,\n      routes = props.routes;\n  var links = /*#__PURE__*/React.createElement(List, {\n    className: classes.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, caseroutes.map(function (prop, key) {\n    var activePro = \" \";\n    var listItemClasses; // Setting path clicked to colored boxes behind\n\n    listItemClasses = classNames(_defineProperty({}, \" \" + classes[color], activeRoute(prop.path))); //Make side bar texts to white\n\n    var whiteFontClasses = classNames(_defineProperty({}, \" \" + classes.whiteFont, activeRoute(prop.layout + prop.path)));\n    return /*#__PURE__*/React.createElement(NavLink // Depends on which button is clicked\n    , {\n      to: prop.layout + prop.path,\n      className: activePro + classes.item,\n      activeClassName: \"active\",\n      key: key,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      className: classes.itemLink + listItemClasses,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, typeof prop.icon === \"string\" ? /*#__PURE__*/React.createElement(Icon, {\n      className: classNames(classes.itemIcon, whiteFontClasses, _defineProperty({}, classes.itemIconRTL, props.rtlActive)),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, prop.icon) : /*#__PURE__*/React.createElement(prop.icon, {\n      className: classNames(classes.itemIcon, whiteFontClasses, _defineProperty({}, classes.itemIconRTL, props.rtlActive)),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: props.rtlActive ? prop.rtlName : prop.name,\n      className: classNames(classes.itemText, whiteFontClasses, _defineProperty({}, classes.itemTextRTL, props.rtlActive)),\n      disableTypography: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    })));\n  })); //Setting the logo image and text on sidebar\n\n  var brand = /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(classes.logoLink, _defineProperty({}, classes.logoLinkRTL, props.rtlActive)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.logoImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"logo\",\n    className: classes.img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  })), logoText));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    implementation: \"css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, brand, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.sidebarWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Hidden, {\n    smDown: true,\n    implementation: \"css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    anchor: props.rtlActive ? \"right\" : \"left\",\n    variant: \"permanent\",\n    open: true,\n    classes: {\n      paper: classNames(classes.drawerPaper, _defineProperty({}, classes.drawerPaperRTL, props.rtlActive))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, brand, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.sidebarWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, links), image !== undefined ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.background,\n    style: {\n      backgroundImage: \"url(\" + image + \")\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }) : null)));\n}","map":{"version":3,"sources":["D:/material-dashboard-react-master/src/components/Sidebar/Sidebar2.js"],"names":["React","classNames","NavLink","makeStyles","Drawer","Hidden","List","ListItem","ListItemText","Icon","styles","Card","useStyles","Sidebar","props","classes","activeRoute","routeName","window","location","href","indexOf","color","logo","image","logoText","routes","links","list","caseroutes","map","prop","key","activePro","listItemClasses","path","whiteFontClasses","whiteFont","layout","item","itemLink","icon","itemIcon","itemIconRTL","rtlActive","rtlName","name","itemText","itemTextRTL","brand","logoLink","logoLinkRTL","logoImage","img","sidebarWrapper","paper","drawerPaper","drawerPaperRTL","undefined","background","backgroundImage"],"mappings":"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","sourcesContent":["/*eslint-disable*/\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { NavLink } from \"react-router-dom\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Icon from \"@material-ui/core/Icon\";\n\n\nimport styles from \"assets/jss/material-dashboard-react/components/sidebarStyle.js\";\nimport { Card } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Sidebar(props) {\n  const classes = useStyles();\n  // verifies if routeName is the one active (in browser input)\n  function activeRoute(routeName) {\n    return window.location.href.indexOf(routeName) > -1 ? true : false;\n  }\n  const { color, logo, image, logoText, routes } = props;\n  var links = (\n    <List className={classes.list}>\n      {caseroutes.map((prop, key) => {\n        var activePro = \" \";\n        var listItemClasses;\n          // Setting path clicked to colored boxes behind\n          listItemClasses = classNames({\n            [\" \" + classes[color]]: activeRoute(prop.path)\n          });\n        \n          //Make side bar texts to white\n        const whiteFontClasses = classNames({\n          [\" \" + classes.whiteFont]: activeRoute(prop.layout + prop.path)\n        });\n        return (\n          <NavLink\n          // Depends on which button is clicked\n            to={prop.layout + prop.path}\n            className={activePro + classes.item}\n            activeClassName=\"active\"\n            key={key}\n          >\n            <ListItem button className={classes.itemLink + listItemClasses}>\n              {typeof prop.icon === \"string\" ? (\n                <Icon\n                  className={classNames(classes.itemIcon, whiteFontClasses, {\n                    [classes.itemIconRTL]: props.rtlActive\n                  })}\n                >\n                  {prop.icon}\n                </Icon>\n              ) : (\n                <prop.icon\n                  className={classNames(classes.itemIcon, whiteFontClasses, {\n                    [classes.itemIconRTL]: props.rtlActive\n                  })}\n                />\n              )}\n              {/* List of navigation text */}\n              <ListItemText\n                primary={props.rtlActive ? prop.rtlName : prop.name}\n                className={classNames(classes.itemText, whiteFontClasses, {\n                  [classes.itemTextRTL]: props.rtlActive\n                })}\n                disableTypography={true}\n              />\n            </ListItem>\n          </NavLink>\n        );\n      })}\n    </List>\n  );\n  //Setting the logo image and text on sidebar\n  var brand = (\n    <div className={classes.logo}>\n      <div\n        className={classNames(classes.logoLink, {\n          [classes.logoLinkRTL]: props.rtlActive\n        })}\n      >\n        <div className={classes.logoImage}>\n          <img src={logo} alt=\"logo\" className={classes.img} />\n        </div>\n        {logoText}\n          </div>\n    </div>\n  );\n  return (\n    <div>\n      <Hidden mdUp implementation=\"css\">\n          {brand}\n          <div className={classes.sidebarWrapper}>\n          </div>\n      </Hidden>\n      <Hidden smDown implementation=\"css\">\n        <Drawer\n          anchor={props.rtlActive ? \"right\" : \"left\"}\n          variant=\"permanent\"\n          open\n          classes={{\n            paper: classNames(classes.drawerPaper, {\n              [classes.drawerPaperRTL]: props.rtlActive\n            })\n          }}\n        >\n          {brand}\n          <div className={classes.sidebarWrapper}>{links}</div>\n          {/* Set Side bar background */}\n          {image !== undefined ? (\n            <div\n              className={classes.background}\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\n            />\n          ) : null}\n        </Drawer>\n      </Hidden>\n    </div>\n  );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}