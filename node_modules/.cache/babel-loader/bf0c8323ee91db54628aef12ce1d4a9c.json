{"ast":null,"code":"import _slicedToArray from \"D:\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\material-dashboard-react-master\\\\src\\\\views\\\\Dashboard\\\\Dashboard.js\";\nimport React from \"react\"; // react plugin for creating charts\n\nimport ChartistGraph from \"react-chartist\"; // @material-ui/core\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { Component } from 'react'; // @material-ui/icons\n\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport AccessTime from \"@material-ui/icons/AccessTime\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Table from \"components/Table/Table.js\";\nimport Tasks from \"components/Tasks/Tasks.js\";\nimport CustomTabs from \"components/CustomTabs/CustomTabs.js\";\nimport Danger from \"components/Typography/Danger.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardIcon from \"components/Card/CardIcon.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport NewCaseModal from \"components/Modal/newcaseModal.js\";\nimport ResolvedCaseModal from \"components/Modal/resolvedcaseModal.js\";\nimport PendingCaseModal from \"components/Modal/pendingcaseModal.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport { card } from \"assets/jss/material-dashboard-react\";\nimport { CardActions } from \"@material-ui/core\";\nimport axios from 'axios';\nimport { useState } from 'react'; // const displayFeedback=[];\n// const array=[];\n// const temp=[];\n// const temp2=[];\n// var Chartist = require(\"chartist\");\n// var delays = 80,\n//   durations = 500;\n// var delays2 = 80,\n//   durations2 = 500;\n//   // response.data.forEach(store => {\n//   //   var object = {value: store, label: store}\n//   //   faultOptions.push(object)\n//   // });\n// function getCustomerFeedbacks(){\n//   axios\n//   .get(\"http://localhost:8080/api/v1/feedback/chart\")\n//   .then((response) => {\n//     displayFeedback.push(response.data)\n//     array.push(Object.values(displayFeedback[0]))\n//     array[0].forEach(item=>{\n//       var object = item.datetime\n//       var object2 = item.rating\n//       temp.push(object)\n//       temp2.push(object2)\n//     })\n//     console.log(temp);\n//   })\n//   const feedbackChart = {\n//     data: {\n//       labels: temp\n//       ,\n//       series: temp2\n//     },\n//     options: {\n//       axisX: {\n//         showGrid: false\n//       },\n//       low: 0,\n//       high: 5,\n//       chartPadding: {\n//         top: 0,\n//         right: 5,\n//         bottom: 0,\n//         left: 0\n//       }\n//     },\n//     responsiveOptions: [\n//       [\n//         \"screen and (max-width: 640px)\",\n//         {\n//           seriesBarDistance: 5,\n//           axisX: {\n//             labelInterpolationFnc: function(value) {\n//               return value[0];\n//             }\n//           }\n//         }\n//       ]\n//     ],\n//     animation: {\n//       draw: function(data) {\n//         if (data.type === \"bar\") {\n//           data.element.animate({\n//             opacity: {\n//               begin: (data.index + 1) * delays2,\n//               dur: durations2,\n//               from: 0,\n//               to: 1,\n//               easing: \"ease\"\n//             }\n//           });\n//         }\n//       }\n//     }\n//   };\n//   console.log(\"HE\");\n//   console.log(feedbackChart.data)\n//   return feedbackChart;\n//   }\n// //getCustomerFeedbacks();\n\nimport { dailySalesChart, emailsSubscriptionChart, completedTasksChart } from \"variables/charts.js\";\nvar useStyles = makeStyles(styles);\n\nvar Chartist = require(\"chartist\");\n\nvar delays = 80,\n    durations = 500;\nvar delays2 = 80,\n    durations2 = 500;\nexport default function Dashboard() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      unresolvedcount = _useState2[0],\n      setUnresolvedCount = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pendingcount = _useState4[0],\n      setPendingCount = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      resolvedcount = _useState6[0],\n      setResolvedCount = _useState6[1];\n\n  var array = [];\n  var test;\n\n  function getUnresolvedChart() {\n    axios.get(\"http://localhost:8080/api/v1/newcaseschart\").then(function (response) {\n      console.log(response.data);\n      array.push(response.data.length);\n      test = array.toString();\n      console.log(test);\n      setUnresolvedCount(test);\n    });\n  }\n\n  getUnresolvedChart(); //yesterday\n\n  var minusonedate = new Date().getDate() - 1;\n  var minustwodate = minusonedate - 1;\n  var month = new Date().getMonth() + 1;\n  var year = new Date().getFullYear();\n  var yesterdayDate = minusonedate + '/' + month + '/' + year;\n  var thedaybeforeDate = minustwodate + '/' + month + '/' + year;\n  var newcasesChart = {\n    data: {\n      labels: [\"The day before yesterday\", yesterdayDate, \"Cases reported today\"],\n      series: [[unresolvedcount]]\n    },\n    options: {\n      axisX: {\n        showGrid: false\n      },\n      low: 0,\n      high: 8,\n      chartPadding: {\n        top: 0,\n        right: 5,\n        bottom: 0,\n        left: 0\n      }\n    },\n    responsiveOptions: [[\"screen and (max-width: 640px)\", {\n      seriesBarDistance: 5,\n      axisX: {\n        labelInterpolationFnc: function labelInterpolationFnc(value) {\n          return value[0];\n        }\n      }\n    }]],\n    animation: {\n      draw: function draw(data) {\n        if (data.type === \"bar\") {\n          data.element.animate({\n            opacity: {\n              begin: (data.index + 1) * delays2,\n              dur: durations2,\n              from: 0,\n              to: 1,\n              easing: \"ease\"\n            }\n          });\n        }\n      }\n    }\n  };\n  var classes = useStyles();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      modalShow = _React$useState2[0],\n      setModalShow = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      modalShow2 = _React$useState4[0],\n      setModalShow2 = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      modalShow3 = _React$useState6[0],\n      setModalShow3 = _React$useState6[1];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    chart: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ChartistGraph, {\n    className: \"ct-chart\",\n    data: newcasesChart.data,\n    type: \"Bar\",\n    options: newcasesChart.options,\n    responsiveOptions: newcasesChart.responsiveOptions,\n    listener: newcasesChart.animation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.cardTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 15\n    }\n  }, \"Cases Reported\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.cardCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 15\n    }\n  }, \"Compare cases reported for today and past 2 days\")))), /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    chart: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ChartistGraph, {\n    className: \"ct-chart\",\n    data: newcasesChart.data,\n    type: \"Line\",\n    options: newcasesChart.options,\n    responsiveOptions: newcasesChart.responsiveOptions,\n    listener: newcasesChart.animation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.cardTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 15\n    }\n  }, \"Customer Feedback\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.cardCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 15\n    }\n  }, \"Standard obtained through Customer Feedbacks\"))))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      return setModalShow(true);\n    },\n    fullWidth: true,\n    color: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 9\n    }\n  }, \"New Cases Reported\"), /*#__PURE__*/React.createElement(NewCaseModal, {\n    show: modalShow,\n    onHide: function onHide() {\n      return setModalShow(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      return setModalShow2(true);\n    },\n    fullWidth: true,\n    color: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 9\n    }\n  }, \"Pending Cases\"), /*#__PURE__*/React.createElement(PendingCaseModal, {\n    show: modalShow2,\n    onHide: function onHide() {\n      return setModalShow2(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      return setModalShow3(true);\n    },\n    fullWidth: true,\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 9\n    }\n  }, \"Resolved Cases\"), /*#__PURE__*/React.createElement(ResolvedCaseModal, {\n    show: modalShow3,\n    onHide: function onHide() {\n      return setModalShow3(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 9\n    }\n  }))));\n}","map":{"version":3,"sources":["D:/material-dashboard-react-master/src/views/Dashboard/Dashboard.js"],"names":["React","ChartistGraph","makeStyles","Icon","Component","ArrowUpward","AccessTime","GridItem","GridContainer","Table","Tasks","CustomTabs","Danger","Card","CardHeader","CardIcon","CardBody","CardFooter","Button","NewCaseModal","ResolvedCaseModal","PendingCaseModal","styles","card","CardActions","axios","useState","dailySalesChart","emailsSubscriptionChart","completedTasksChart","useStyles","Chartist","require","delays","durations","delays2","durations2","Dashboard","unresolvedcount","setUnresolvedCount","pendingcount","setPendingCount","resolvedcount","setResolvedCount","array","test","getUnresolvedChart","get","then","response","console","log","data","push","length","toString","minusonedate","Date","getDate","minustwodate","month","getMonth","year","getFullYear","yesterdayDate","thedaybeforeDate","newcasesChart","labels","series","options","axisX","showGrid","low","high","chartPadding","top","right","bottom","left","responsiveOptions","seriesBarDistance","labelInterpolationFnc","value","animation","draw","type","element","animate","opacity","begin","index","dur","from","to","easing","classes","modalShow","setModalShow","modalShow2","setModalShow2","modalShow3","setModalShow3","cardTitle","cardCategory"],"mappings":"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","sourcesContent":["import React from \"react\";\n// react plugin for creating charts\nimport ChartistGraph from \"react-chartist\";\n// @material-ui/core\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Icon from \"@material-ui/core/Icon\";\nimport {Component} from 'react';\n// @material-ui/icons\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport AccessTime from \"@material-ui/icons/AccessTime\";\n// core components\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Table from \"components/Table/Table.js\";\nimport Tasks from \"components/Tasks/Tasks.js\";\nimport CustomTabs from \"components/CustomTabs/CustomTabs.js\";\nimport Danger from \"components/Typography/Danger.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardIcon from \"components/Card/CardIcon.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport NewCaseModal from \"components/Modal/newcaseModal.js\";\nimport ResolvedCaseModal from \"components/Modal/resolvedcaseModal.js\";\nimport PendingCaseModal from \"components/Modal/pendingcaseModal.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport { card } from \"assets/jss/material-dashboard-react\";\nimport { CardActions } from \"@material-ui/core\";\nimport axios from 'axios';\nimport {useState} from 'react';\n\n\n// const displayFeedback=[];\n// const array=[];\n// const temp=[];\n// const temp2=[];\n// var Chartist = require(\"chartist\");\n// var delays = 80,\n//   durations = 500;\n// var delays2 = 80,\n//   durations2 = 500;\n\n//   // response.data.forEach(store => {\n//   //   var object = {value: store, label: store}\n//   //   faultOptions.push(object)\n//   // });\n// function getCustomerFeedbacks(){\n//   axios\n//   .get(\"http://localhost:8080/api/v1/feedback/chart\")\n//   .then((response) => {\n//     displayFeedback.push(response.data)\n//     array.push(Object.values(displayFeedback[0]))\n//     array[0].forEach(item=>{\n//       var object = item.datetime\n//       var object2 = item.rating\n//       temp.push(object)\n//       temp2.push(object2)\n//     })\n//     console.log(temp);\n//   })\n//   const feedbackChart = {\n//     data: {\n//       labels: temp\n\n      \n//       ,\n//       series: temp2\n        \n      \n//     },\n//     options: {\n//       axisX: {\n//         showGrid: false\n//       },\n//       low: 0,\n//       high: 5,\n//       chartPadding: {\n//         top: 0,\n//         right: 5,\n//         bottom: 0,\n//         left: 0\n//       }\n//     },\n//     responsiveOptions: [\n//       [\n//         \"screen and (max-width: 640px)\",\n//         {\n//           seriesBarDistance: 5,\n//           axisX: {\n//             labelInterpolationFnc: function(value) {\n//               return value[0];\n//             }\n//           }\n//         }\n//       ]\n//     ],\n//     animation: {\n//       draw: function(data) {\n//         if (data.type === \"bar\") {\n//           data.element.animate({\n//             opacity: {\n//               begin: (data.index + 1) * delays2,\n//               dur: durations2,\n//               from: 0,\n//               to: 1,\n//               easing: \"ease\"\n//             }\n//           });\n//         }\n//       }\n//     }\n//   };\n//   console.log(\"HE\");\n//   console.log(feedbackChart.data)\n//   return feedbackChart;\n//   }\n// //getCustomerFeedbacks();\n\n\nimport {\n  dailySalesChart,\n  emailsSubscriptionChart,\n  completedTasksChart\n} from \"variables/charts.js\";\n\n\nconst useStyles = makeStyles(styles);\n\nvar Chartist = require(\"chartist\");\nvar delays = 80,\n  durations = 500;\nvar delays2 = 80,\n  durations2 = 500;\n\n   \n\n\n\nexport default function Dashboard() {\nconst [unresolvedcount,setUnresolvedCount] = useState()\nconst [pendingcount,setPendingCount] = useState(0)\nconst [resolvedcount,setResolvedCount] = useState(0)\n\nconst array = [];\nlet test;\nfunction getUnresolvedChart(){\n  axios\n  .get(\"http://localhost:8080/api/v1/newcaseschart\")\n  .then((response) => {\n    console.log(response.data);\n    array.push(response.data.length)\n    test = array.toString();\n    console.log(test);\n    setUnresolvedCount(test)\n  })\n}\n\ngetUnresolvedChart();\n\n//yesterday\nvar minusonedate = new Date().getDate() -1;\nvar minustwodate = minusonedate -1;\nvar month = new Date().getMonth() + 1;\nvar year = new Date().getFullYear();\nvar yesterdayDate = minusonedate + '/' + month + '/' + year ;\nvar thedaybeforeDate = minustwodate + '/' + month + '/' + year ;\n\nconst newcasesChart = {\n  data: {\n    labels: [\"The day before yesterday\",yesterdayDate,\"Cases reported today\"]\n\n    \n    ,\n    series: [[unresolvedcount]]\n      \n    \n  },\n  options: {\n    axisX: {\n      showGrid: false\n    },\n    low: 0,\n    high: 8,\n    chartPadding: {\n      top: 0,\n      right: 5,\n      bottom: 0,\n      left: 0\n    }\n  },\n  responsiveOptions: [\n    [\n      \"screen and (max-width: 640px)\",\n      {\n        seriesBarDistance: 5,\n        axisX: {\n          labelInterpolationFnc: function(value) {\n            return value[0];\n          }\n        }\n      }\n    ]\n  ],\n  animation: {\n    draw: function(data) {\n      if (data.type === \"bar\") {\n        data.element.animate({\n          opacity: {\n            begin: (data.index + 1) * delays2,\n            dur: durations2,\n            from: 0,\n            to: 1,\n            easing: \"ease\"\n          }\n        });\n      }\n    }\n  }\n};\n\n\n  const classes = useStyles();\n  const [modalShow, setModalShow] = React.useState(false);\n  const [modalShow2, setModalShow2] = React.useState(false);\n  const [modalShow3, setModalShow3] = React.useState(false);\n  return (\n    <div>\n      {/* <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card chart>\n            <CardHeader color=\"info\">\n              <ChartistGraph\n                className=\"ct-chart\"\n                data={getCustomerFeedbacks().data}\n                type=\"Bar\"\n                options={getCustomerFeedbacks().options}\n                responsiveOptions={getCustomerFeedbacks().responsiveOptions}\n                listener={getCustomerFeedbacks().animation}\n              />\n            </CardHeader>\n            <CardBody>\n              <h4 className={classes.cardTitle}>Recent Ratings</h4>\n              <p className={classes.cardCategory}>Ratings through Customer Feedbacks</p>\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer> */}\n       <GridContainer>\n        <GridItem xs={12} sm={12} md={6}>\n          <Card chart>\n            <CardHeader color=\"success\">\n              <ChartistGraph\n                className=\"ct-chart\"\n                data={newcasesChart.data}\n                type=\"Bar\"\n                options={newcasesChart.options}\n                responsiveOptions={newcasesChart.responsiveOptions}\n                listener={newcasesChart.animation}\n              />\n            </CardHeader>\n            <CardBody>\n              <h4 className={classes.cardTitle}>Cases Reported</h4>\n              <p className={classes.cardCategory}>Compare cases reported for today and past 2 days</p>\n            </CardBody>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={6}>\n          <Card chart>\n            <CardHeader color=\"success\">\n              <ChartistGraph\n                className=\"ct-chart\"\n                data={newcasesChart.data}\n                type=\"Line\"\n                options={newcasesChart.options}\n                responsiveOptions={newcasesChart.responsiveOptions}\n                listener={newcasesChart.animation}\n              />\n            </CardHeader>\n            <CardBody>\n              <h4 className={classes.cardTitle}>Customer Feedback</h4>\n              <p className={classes.cardCategory}>Standard obtained through Customer Feedbacks</p>\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer>\n      \n      <br></br>\n      \n      <GridContainer>\n      <GridItem xs={12} sm={12} md={4}>\n        <Button onClick={() => setModalShow(true)} fullWidth color=\"danger\">New Cases Reported</Button>\n        <NewCaseModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />  \n      </GridItem>\n      <GridItem xs={12} sm={12} md={4}>\n        <Button  onClick={() => setModalShow2(true)} fullWidth color=\"warning\">Pending Cases</Button>\n        <PendingCaseModal\n        show={modalShow2}\n        onHide={() => setModalShow2(false)}\n      />\n      </GridItem>\n      <GridItem xs={12} sm={12} md={4}>\n        <Button onClick={() => setModalShow3(true)} fullWidth color=\"success\">Resolved Cases</Button> \n        <ResolvedCaseModal\n        show={modalShow3}\n        onHide={() => setModalShow3(false)}\n      />\n      </GridItem>\n      </GridContainer>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}