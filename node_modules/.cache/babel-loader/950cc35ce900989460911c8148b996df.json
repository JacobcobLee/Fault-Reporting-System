{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\material-dashboard-react-master\\\\src\\\\views\\\\TableList\\\\TableList.js\";\nimport React, { useState, useEffect } from 'react';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\nimport 'react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport filterFactory, { textFilter, dateFilter, Comparator } from 'react-bootstrap-table2-filter';\nimport * as ReactBootStrap from 'react-bootstrap';\nimport axios from 'axios';\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport Select from 'react-select';\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\nexport default function TableList() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      customerfeedback = _useState2[0],\n      setCustomerFeedback = _useState2[1];\n\n  var getFeedbacksData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get(\"http://localhost:8080/api/v1/feedback\").then(function (response) {\n                console.log(response.data);\n                setCustomerFeedback(Object.values(response.data));\n              });\n\n            case 3:\n              _context.next = 8;\n              break;\n\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 5]]);\n    }));\n\n    return function getFeedbacksData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var columns = [//,filter: dateFilter()\n  {\n    dataField: \"date\",\n    text: \"Submitted On\",\n    filter: textFilter()\n  }, {\n    dataField: \"location\",\n    text: \"Store Location\",\n    filter: textFilter()\n  }, {\n    dataField: \"feedbackType\",\n    text: \"Feedback Type\",\n    filter: textFilter()\n  }, {\n    dataField: \"standard\",\n    text: \"Standard\",\n    filter: textFilter()\n  }, {\n    dataField: \"issue\",\n    text: \"Issue\"\n  }, {\n    dataField: \"rating\",\n    text: \"Ratings\",\n    filter: textFilter()\n  }, {\n    dataField: \"staffname\",\n    text: \"Staff Name\"\n  }, {\n    dataField: \"custemail\",\n    text: \"Customer Email\"\n  }, {\n    dataField: \"custcontactno\",\n    text: \"Customer Contact\"\n  }, {\n    dataField: \"custname\",\n    text: \"Customer Name\"\n  }, {\n    tableData: \"hello\",\n    text: /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 36\n      }\n    }, \"s\")\n  }];\n  useEffect(function () {\n    getFeedbacksData();\n  }, []);\n\n  var MyExportCSV = function MyExportCSV(props) {\n    var handleClick = function handleClick() {\n      props.onExport();\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(GridContainer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: handleClick,\n      fullWidth: true,\n      color: \"info\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }\n    }, \"Generate Excel Sheet\"))));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Customer Feedback\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"Feedbacks can be generated as excel sheet and downloaded\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ToolkitProvider, {\n    keyField: \"uuid\",\n    data: customerfeedback,\n    columns: columns,\n    exportCSV: {\n      exportAll: false,\n      onlyExportFiltered: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, function (props) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BootstrapTable, Object.assign({\n      filter: filterFactory(),\n      keyField: \"uuid\",\n      data: customerfeedback,\n      columns: columns,\n      pagination: paginationFactory(),\n      filterPosition: \"top\"\n    }, props.baseProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(MyExportCSV, Object.assign({}, props.csvProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    })));\n  }))));\n} // import React from \"react\";\n// // @material-ui/core components\n// import { makeStyles } from \"@material-ui/core/styles\";\n// // core components\n// import GridItem from \"components/Grid/GridItem.js\";\n// import GridContainer from \"components/Grid/GridContainer.js\";\n// import Table from \"components/Table/Table.js\";\n// import Card from \"components/Card/Card.js\";\n// import CardHeader from \"components/Card/CardHeader.js\";\n// import CardBody from \"components/Card/CardBody.js\";\n// import axios from 'axios';\n// import {useState} from 'react';\n// import Button from \"components/CustomButtons/Button.js\";\n// const displayFeedback=[];\n// const array=[];\n// function getCustomerFeedbacks(){\n//   axios\n//   .get(\"http://localhost:8080/api/v1/feedback\")\n//   .then((response) => {\n//     displayFeedback.push(response.data)\n//     array.push(Object.values(displayFeedback[0]))\n//     console.log(array[0]);\n//   })\n//   }\n// getCustomerFeedbacks();\n// const styles = {\n//   cardCategoryWhite: {\n//     \"&,& a,& a:hover,& a:focus\": {\n//       color: \"rgba(255,255,255,.62)\",\n//       margin: \"0\",\n//       fontSize: \"14px\",\n//       marginTop: \"0\",\n//       marginBottom: \"0\"\n//     },\n//     \"& a,& a:hover,& a:focus\": {\n//       color: \"#FFFFFF\"\n//     }\n//   },\n//   cardTitleWhite: {\n//     color: \"#FFFFFF\",\n//     marginTop: \"0px\",\n//     minHeight: \"auto\",\n//     fontWeight: \"300\",\n//     fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n//     marginBottom: \"3px\",\n//     textDecoration: \"none\",\n//     \"& small\": {\n//       color: \"#777\",\n//       fontSize: \"65%\",\n//       fontWeight: \"400\",\n//       lineHeight: \"1\"\n//     }\n//   }\n// };\n// const useStyles = makeStyles(styles);\n// export default function TableList() {\n//   const [search, setSearch] = useState('')\n//   //filter through all data instead of only 1\n//    const filterArray = array[0].filter(function(item){\n//     return Object.values(item).some( val => \n//         String(val).toLowerCase().includes(search.toLowerCase()) \n//     )\n// })\n//   const classes = useStyles();\n//   return (\n//     <GridContainer>\n//       <GridItem xs={12} sm={12} md={12}>\n//         <Card>\n//           <CardHeader color=\"primary\">\n//             <h4 className={classes.cardTitleWhite}>Customer Feedbacks</h4>\n//             <p className={classes.cardCategoryWhite}>\n//               Customer Feedbacks for every outlets\n//             </p>\n//           </CardHeader>\n//           <CardBody>\n//           <input className=\"form-control\" type=\"text\" placeholder=\"Search\" onChange={ e => setSearch(e.target.value)}/>\n//             <Table\n//               tableHeaderColor=\"primary\"\n//               tableHead={[\"Submitted On\", \"Store Location\", \"Feedback Type\", \"Standard\", \"Issue\", \"Ratings\", \"Served By\", \"Customer email\", \"Customer Contact\", \"Customer Name\"]}\n//               tableData={\n//                 filterArray.map((array) => {\n//                   return [array.datetime,array.location,array.feedbackType,array.standard,array.issue,array.rating,array.staffname,array.custemail,array.custcontactno,array.custname]\n//               })\n//               }\n//             />\n//           </CardBody>\n//         </Card>\n//       </GridItem>\n//     </GridContainer>\n//   );\n// }","map":{"version":3,"sources":["D:/material-dashboard-react-master/src/views/TableList/TableList.js"],"names":["React","useState","useEffect","BootstrapTable","paginationFactory","filterFactory","textFilter","dateFilter","Comparator","ReactBootStrap","axios","Card","CardBody","CardHeader","Select","CardFooter","Button","GridItem","GridContainer","ToolkitProvider","CSVExport","TableList","customerfeedback","setCustomerFeedback","getFeedbacksData","get","then","response","console","log","data","Object","values","columns","dataField","text","filter","tableData","MyExportCSV","props","handleClick","onExport","exportAll","onlyExportFiltered","baseProps","csvProps"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\nimport 'react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport filterFactory, { textFilter, dateFilter, Comparator } from 'react-bootstrap-table2-filter';\nimport * as ReactBootStrap from 'react-bootstrap';\nimport axios from 'axios';\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport Select from 'react-select';\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\n\n\nexport default function TableList() {\n    const [customerfeedback,setCustomerFeedback] = useState([]);\n    const getFeedbacksData = async ()=> {\n        try{\n            await axios\n            .get(\"http://localhost:8080/api/v1/feedback\")\n            .then((response) => {\n                console.log(response.data);\n                setCustomerFeedback(Object.values(response.data));\n            })\n        }\n        catch(e){\n            console.log(e);\n        }\n    }\n\n\n    const columns = [//,filter: dateFilter()\n        {dataField: \"date\", text:\"Submitted On\",filter: textFilter()},\n        {dataField: \"location\", text:\"Store Location\",filter: textFilter()},\n        {dataField: \"feedbackType\", text:\"Feedback Type\",filter: textFilter()},\n        {dataField: \"standard\", text:\"Standard\",filter: textFilter()},\n        {dataField: \"issue\", text:\"Issue\"},\n        {dataField: \"rating\", text:\"Ratings\",filter: textFilter()},\n        {dataField: \"staffname\", text:\"Staff Name\"},\n        {dataField: \"custemail\", text:\"Customer Email\"},\n        {dataField: \"custcontactno\", text:\"Customer Contact\"},\n        {dataField: \"custname\", text:\"Customer Name\"},\n        {tableData: \"hello\", text: <Button>s</Button>},\n    ]\n\n    useEffect(() => {\n        getFeedbacksData();\n    },[])\n\n    const MyExportCSV = (props) => {\n        const handleClick = () => {\n          props.onExport();\n        };\n        return (\n          <div>\n             <GridContainer>\n              <GridItem xs={12} sm={12} md={12}>\n                  <Button onClick={handleClick} fullWidth color=\"info\">Generate Excel Sheet</Button>\n              </GridItem>\n          </GridContainer>\n          </div>\n        );\n      };\n\n    return (\n        <div>\n        <Card>\n        <CardHeader color=\"primary\">\n        <h4>Customer Feedback</h4>\n          <p>\n            Feedbacks can be generated as excel sheet and downloaded\n          </p>\n        </CardHeader>\n        <CardBody>\n        <ToolkitProvider\n          keyField=\"uuid\"\n          data={ customerfeedback }\n          columns={ columns }\n          exportCSV ={ {\n            exportAll:false,\n            onlyExportFiltered:true\n          } }\n        >\n        {\n        props => (\n          <div>\n            <BootstrapTable\n            filter={filterFactory()}\n            keyField=\"uuid\"\n            data={customerfeedback}\n            columns={columns}\n            pagination={paginationFactory()}\n            filterPosition=\"top\"\n            { ...props.baseProps } />\n            <hr />\n            <MyExportCSV { ...props.csvProps } />\n          </div>\n        )\n      }\n    </ToolkitProvider>\n        </CardBody>\n        </Card>\n        </div>\n    )\n}\n\n\n\n// import React from \"react\";\n// // @material-ui/core components\n// import { makeStyles } from \"@material-ui/core/styles\";\n// // core components\n// import GridItem from \"components/Grid/GridItem.js\";\n// import GridContainer from \"components/Grid/GridContainer.js\";\n// import Table from \"components/Table/Table.js\";\n// import Card from \"components/Card/Card.js\";\n// import CardHeader from \"components/Card/CardHeader.js\";\n// import CardBody from \"components/Card/CardBody.js\";\n// import axios from 'axios';\n// import {useState} from 'react';\n// import Button from \"components/CustomButtons/Button.js\";\n\n// const displayFeedback=[];\n// const array=[];\n// function getCustomerFeedbacks(){\n//   axios\n//   .get(\"http://localhost:8080/api/v1/feedback\")\n//   .then((response) => {\n//     displayFeedback.push(response.data)\n//     array.push(Object.values(displayFeedback[0]))\n//     console.log(array[0]);\n//   })\n//   }\n// getCustomerFeedbacks();\n\n// const styles = {\n//   cardCategoryWhite: {\n//     \"&,& a,& a:hover,& a:focus\": {\n//       color: \"rgba(255,255,255,.62)\",\n//       margin: \"0\",\n//       fontSize: \"14px\",\n//       marginTop: \"0\",\n//       marginBottom: \"0\"\n//     },\n//     \"& a,& a:hover,& a:focus\": {\n//       color: \"#FFFFFF\"\n//     }\n//   },\n//   cardTitleWhite: {\n//     color: \"#FFFFFF\",\n//     marginTop: \"0px\",\n//     minHeight: \"auto\",\n//     fontWeight: \"300\",\n//     fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n//     marginBottom: \"3px\",\n//     textDecoration: \"none\",\n//     \"& small\": {\n//       color: \"#777\",\n//       fontSize: \"65%\",\n//       fontWeight: \"400\",\n//       lineHeight: \"1\"\n//     }\n//   }\n// };\n\n// const useStyles = makeStyles(styles);\n\n// export default function TableList() {\n//   const [search, setSearch] = useState('')\n\n//   //filter through all data instead of only 1\n//    const filterArray = array[0].filter(function(item){\n//     return Object.values(item).some( val => \n//         String(val).toLowerCase().includes(search.toLowerCase()) \n//     )\n// })\n//   const classes = useStyles();\n//   return (\n//     <GridContainer>\n//       <GridItem xs={12} sm={12} md={12}>\n//         <Card>\n//           <CardHeader color=\"primary\">\n//             <h4 className={classes.cardTitleWhite}>Customer Feedbacks</h4>\n//             <p className={classes.cardCategoryWhite}>\n//               Customer Feedbacks for every outlets\n//             </p>\n//           </CardHeader>\n//           <CardBody>\n//           <input className=\"form-control\" type=\"text\" placeholder=\"Search\" onChange={ e => setSearch(e.target.value)}/>\n//             <Table\n//               tableHeaderColor=\"primary\"\n//               tableHead={[\"Submitted On\", \"Store Location\", \"Feedback Type\", \"Standard\", \"Issue\", \"Ratings\", \"Served By\", \"Customer email\", \"Customer Contact\", \"Customer Name\"]}\n//               tableData={\n//                 filterArray.map((array) => {\n//                   return [array.datetime,array.location,array.feedbackType,array.standard,array.issue,array.rating,array.staffname,array.custemail,array.custcontactno,array.custname]\n//               })\n//               }\n//             />\n//           </CardBody>\n//         </Card>\n//       </GridItem>\n//     </GridContainer>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}